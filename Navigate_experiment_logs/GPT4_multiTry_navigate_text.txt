ID: 10
{'Instructions': 'Take 8 steps. Take 9 steps. Turn right. Turn right. Take 8 steps. Take 9 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to take 8 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 9 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 11
{'Instructions': 'Take 1 step. Take 7 steps. Take 1 step.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 9 actual_solution 9



ID: 12
{'Instructions': 'Always face forward. Take 4 steps left. Take 3 steps forward. Take 1 step right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 1 step right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 4 actual_solution 4



ID: 13
{'Instructions': 'Turn left. Turn left. Take 6 steps. Take 3 steps. Turn around. Take 1 step. Take 3 steps. Take 5 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 3 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 5 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 5,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 14
{'Instructions': 'Take 5 steps. Take 4 steps. Take 3 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 12 actual_solution 12



ID: 15
{'Instructions': 'Turn around. Take 10 steps. Take 7 steps. Take 1 step. Take 1 step. Turn left. Take 5 steps. Turn left. Take 9 steps.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step; the direction doesn't change
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Take 5 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time8 is (Direction_time7 + 270) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Take 9 steps; the direction doesn't change
Direction_time9 is Direction_time8,
Steps_time9 is 9,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 11 actual_solution 11



ID: 16
{'Instructions': 'Take 10 steps. Turn around. Turn right. Turn left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 10 actual_solution 10



ID: 17
{'Instructions': 'Take 4 steps. Take 7 steps. Take 3 steps. Turn right. Turn right. Take 8 steps. Turn around. Turn around. Take 6 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%sixth instruction is to take 8 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Eighth instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time8 is (Direction_time7 + 180) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Lastly take 6 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 6,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 18
{'Instructions': 'Take 3 steps. Take 9 steps. Turn around. Take 2 steps. Take 7 steps. Take 3 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 2 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 3 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 19
{'Instructions': 'Take 9 steps. Turn left. Take 2 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Lastly take 2 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 9 actual_solution 9



ID: 20
{'Instructions': 'Always face forward. Take 8 steps forward. Take 9 steps right. Take 2 steps forward. Take 10 steps backward. Take 9 steps left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps forward, direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 9 steps left; the direction is to the left or 270 degrees
Direction_time5 is 270,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 21
{'Instructions': 'Always face forward. Take 2 steps left. Take 6 steps forward. Take 9 steps backward. Take 8 steps backward. Take 3 steps left.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 3 steps left; the direction is to the left or 270 degrees
Direction_time5 is 270,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 12 actual_solution 12



ID: 22
{'Instructions': 'Take 6 steps. Take 3 steps. Take 2 steps. Take 1 step. Take 4 steps. Turn around. Take 10 steps. Take 6 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%sixth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%seventh instruction is to take 10 steps, so direction doesn't change.
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 6 steps, so direction doesn't change again.
Direction_time8 is Direction_time7,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 23
{'Instructions': 'Always face forward. Take 2 steps left. Take 5 steps right. Take 6 steps left. Take 5 steps forward. Take 1 step forward. Take 9 steps left. Take 9 steps right. Take 3 steps right. Take 6 steps backward.', 'Difficulty': 10, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time6 is 270,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time7 is 90,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 3 steps right; the direction is to the right or 90 degrees.
Direction_time8 is 90,
Steps_time8 is 3,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 6 steps backward; the direction is backward or 180 degrees.
Direction_time9 is 180,
Steps_time9 is 6,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 24
{'Instructions': 'Always face forward. Take 4 steps backward. Take 4 steps backward. Take 8 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backward again; the direction is backward or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 8 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 25
{'Instructions': 'Take 1 step. Take 10 steps. Turn around. Take 6 steps. Take 7 steps. Turn around. Take 2 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 6 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 2 steps, so direction doesn't change.
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 26
{'Instructions': 'Take 5 steps. Take 4 steps. Turn around. Take 10 steps. Take 8 steps. Turn around. Take 2 steps. Take 7 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 10 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 2 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 7 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 7,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 27
{'Instructions': 'Take 3 steps. Take 4 steps. Turn around. Take 7 steps. Turn right. Turn right.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 7 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly turn right again, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 28
{'Instructions': 'Turn left. Turn left. Take 10 steps. Take 6 steps. Turn left. Take 3 steps. Take 3 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 3 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 3 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 17 actual_solution 17



ID: 29
{'Instructions': 'Turn around. Turn left. Turn around. Take 3 steps. Turn around. Take 9 steps. Turn right. Take 8 steps. Take 8 steps.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Turn around. So our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Turn around. So our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Turn right. So our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time8 is Direction_time7,
Steps_time8 is 8,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 8 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 8,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 17 actual_solution 17



ID: 30
{'Instructions': 'Turn around. Take 6 steps. Take 4 steps. Turn around. Take 10 steps. Turn left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 10 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 31
{'Instructions': 'Turn around. Turn right. Take 5 steps. Take 2 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 2 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 7 actual_solution 7



ID: 32
{'Instructions': 'Always face forward. Take 2 steps left. Take 2 steps backward. Take 4 steps right. Take 5 steps left. Take 5 steps right.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 3}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps left; the direction is left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps left, thus the direction at time 4 is left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 5 steps right; the direction is to the right or 90 degrees
Direction_time5 is 90,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 3 actual_solution 3



ID: 33
{'Instructions': 'Always face forward. Take 10 steps right. Take 10 steps left.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 10 steps to the left; the direction is to the left or 270 degrees
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 10 actual_solution 0



ID: 33
{'Instructions': 'Always face forward. Take 10 steps right. Take 10 steps left.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 10 steps to the left; the direction is to the left or 270 degrees
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 10 actual_solution 0



ID: 34
{'Instructions': 'Turn left. Take 8 steps. Turn around. Take 8 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 8 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 35
{'Instructions': 'Take 6 steps. Turn around. Take 6 steps. Turn left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 6 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 36
{'Instructions': 'Always face forward. Take 1 step backward. Take 2 steps left. Take 6 steps forward. Take 6 steps left. Take 7 steps left. Take 9 steps forward.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 9 steps forward; the direction is forward or 0 degrees.
Direction_time6 is 0,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 21 actual_solution 21



ID: 37
{'Instructions': 'Take 7 steps. Take 1 step. Turn left. Take 2 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 2 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 8 actual_solution 8



ID: 38
{'Instructions': 'Always face forward. Take 10 steps backward. Take 9 steps backward. Take 9 steps backward. Take 9 steps left. Take 10 steps right. Take 3 steps right. Take 3 steps forward. Take 9 steps right.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 28}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backward; the direction is backward or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 3 steps right; the direction is to the right or 90 degrees.
Direction_time6 is 90,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time7 is 0,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 9 steps right; the direction is to the right or 90 degrees.
Direction_time8 is 90,
Steps_time8 is 9,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 28 actual_solution 28



ID: 39
{'Instructions': 'Turn around. Take 7 steps. Turn around. Turn right. Turn right. Take 2 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Turn right again. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 2 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 9 actual_solution 9



ID: 40
{'Instructions': 'Always face forward. Take 9 steps left. Take 4 steps backward. Take 9 steps right. Take 4 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 41
{'Instructions': 'Always face forward. Take 9 steps left. Take 9 steps backward. Take 9 steps right. Take 7 steps forward. Take 2 steps forward.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps forward; the direction is forward or 0 degrees
Direction_time5 is 0,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 42
{'Instructions': 'Take 10 steps. Take 1 step. Take 2 steps. Turn around.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 13 actual_solution 13



ID: 43
{'Instructions': 'Always face forward. Take 8 steps backward. Take 8 steps forward. Take 5 steps left. Take 5 steps right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 44
{'Instructions': 'Take 9 steps. Turn around. Take 3 steps. Take 3 steps. Take 3 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 3 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 3 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 45
{'Instructions': 'Turn around. Take 2 steps. Turn right. Turn right. Take 2 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Turn right again. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 2 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 46
{'Instructions': 'Take 6 steps. Turn left. Take 4 steps. Take 4 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 4 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 10 actual_solution 10



ID: 47
{'Instructions': 'Always face forward. Take 7 steps backward. Take 9 steps left.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 9 steps left; the direction is to the left or 270 degrees
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 11 actual_solution 11



ID: 48
{'Instructions': 'Take 10 steps. Take 5 steps. Turn left. Turn right. Turn around. Take 9 steps. Take 2 steps. Take 3 steps. Take 1 step.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 9 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 3 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 3,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 1 step; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 1,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 49
{'Instructions': 'Always face forward. Take 2 steps backward. Take 1 step forward. Take 1 step forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 1 step forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 50
{'Instructions': 'Take 8 steps. Take 10 steps. Take 3 steps. Take 5 steps. Take 6 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 32}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 6 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 32 actual_solution 32



ID: 51
{'Instructions': 'Always face forward. Take 5 steps right. Take 10 steps backward. Take 5 steps right. Take 10 steps forward. Take 6 steps right. Take 6 steps backward. Take 6 steps right. Take 4 steps right.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 27}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps to the right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 6 steps backward; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 6 steps to the right; the direction is to the right or 90 degrees
Direction_time7 is 90,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 4 steps to the right; the direction is to the right or 90 degrees
Direction_time8 is 90,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 27 actual_solution 27



ID: 52
{'Instructions': 'Take 8 steps. Turn around. Take 6 steps. Take 2 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 6 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 2 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 53
{'Instructions': 'Take 3 steps. Turn right. Turn left. Take 5 steps. Take 10 steps. Take 7 steps. Turn left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 25}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 7 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 25 actual_solution 25



ID: 54
{'Instructions': 'Always face forward. Take 10 steps left. Take 6 steps right. Take 4 steps right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 55
{'Instructions': 'Always face forward. Take 7 steps backward. Take 8 steps backward. Take 10 steps left. Take 5 steps left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps left; the direction is to the left or 270 degrees
Direction_time4 is 270,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 21 actual_solution 21



ID: 56
{'Instructions': 'Always face forward. Take 10 steps backward. Take 9 steps forward. Take 4 steps right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 2 actual_solution 4



ID: 56
{'Instructions': 'Always face forward. Take 10 steps backward. Take 9 steps forward. Take 4 steps right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 2 actual_solution 4



ID: 57
{'Instructions': 'Turn right. Take 5 steps. Turn around. Take 5 steps. Turn around.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 5 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 58
{'Instructions': 'Always face forward. Take 4 steps forward. Take 9 steps backward. Take 2 steps backward. Take 7 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 59
{'Instructions': 'Take 10 steps. Take 1 step. Turn right. Turn left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 11 actual_solution 11



ID: 60
{'Instructions': 'Always face forward. Take 8 steps backward. Take 4 steps forward. Take 4 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 61
{'Instructions': 'Always face forward. Take 1 step right. Take 1 step left. Take 6 steps left. Take 10 steps forward. Take 10 steps backward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 6 actual_solution 6



ID: 62
{'Instructions': 'Always face forward. Take 3 steps backward. Take 9 steps left. Take 5 steps forward. Take 8 steps right. Take 8 steps backward. Take 9 steps left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps backward; the direction is backward or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 9 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 12 actual_solution 12



ID: 63
{'Instructions': 'Turn around. Take 2 steps. Turn around. Take 2 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 2 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 64
{'Instructions': 'Take 6 steps. Take 4 steps. Turn around. Take 10 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 10 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 65
{'Instructions': 'Take 5 steps. Turn around. Take 5 steps.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 5 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 66
{'Instructions': 'Turn around. Turn around. Take 2 steps. Turn around. Take 7 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn around. So our direction changes by 180 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 7 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 5 actual_solution 5



ID: 67
{'Instructions': 'Always face forward. Take 5 steps left. Take 1 step backward. Take 4 steps right. Take 1 step backward. Take 8 steps left. Take 6 steps left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 6 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 15 actual_solution 15



ID: 68
{'Instructions': 'Always face forward. Take 9 steps right. Take 2 steps backward. Take 1 step backward. Take 5 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 14 actual_solution 14



ID: 69
{'Instructions': 'Turn around. Take 2 steps. Turn right. Turn right. Take 2 steps. Turn right.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn right again, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 70
{'Instructions': 'Turn left. Take 1 step. Turn around. Take 9 steps. Take 10 steps. Turn around. Take 10 steps. Take 8 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 9 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps; the direction doesn't change
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 10 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 8 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 8,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 71
{'Instructions': 'Turn around. Take 3 steps. Turn around. Take 2 steps. Take 1 step.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 2 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 1 step; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 72
{'Instructions': 'Always face forward. Take 6 steps forward. Take 3 steps forward. Take 9 steps backward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 73
{'Instructions': 'Take 10 steps. Turn right. Turn left. Take 3 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 3 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 13 actual_solution 13



ID: 73
{'Instructions': 'Take 10 steps. Turn right. Turn left. Take 3 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 13}
repeated: 1
Corrected!!!!!
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 3 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 13 actual_solution 13



ID: 74
{'Instructions': 'Take 5 steps. Turn right. Turn left. Take 4 steps. Turn around. Take 9 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 4 steps, so direction doesn't change relative to the previous direction and the number of steps is 4.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 9 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 75
{'Instructions': 'Always face forward. Take 2 steps left. Take 9 steps left. Take 9 steps right. Take 10 steps forward. Take 3 steps forward. Take 10 steps left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 10 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 18 actual_solution 18



ID: 76
{'Instructions': 'Take 1 step. Take 7 steps. Turn around. Take 8 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 8 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 77
{'Instructions': 'Take 9 steps. Turn around. Take 9 steps. Turn left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 9 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 78
{'Instructions': 'Take 3 steps. Take 4 steps. Take 2 steps. Take 9 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 9 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 18 actual_solution 18



ID: 79
{'Instructions': 'Always face forward. Take 3 steps left. Take 3 steps forward. Take 6 steps backward. Take 9 steps forward. Take 5 steps backward. Take 3 steps right. Take 1 step backward.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 3 steps right; the direction is to the right or 90 degrees.
Direction_time6 is 90,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 1 step backward; the direction is backwards or 180 degrees.
Direction_time7 is 180,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 80
{'Instructions': 'Always face forward. Take 3 steps right. Take 7 steps left.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 3.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps left; the direction is to the left, or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 4 actual_solution 4



ID: 81
{'Instructions': 'Always face forward. Take 6 steps right. Take 10 steps left. Take 4 steps right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 82
{'Instructions': 'Take 3 steps. Turn around. Take 3 steps. Turn right. Turn right. Turn around.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 3 steps, so direction doesn't change relative to the previous direction and the number of steps is 3.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 83
{'Instructions': 'Always face forward. Take 7 steps backward. Take 6 steps left. Take 2 steps right. Take 4 steps left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps right, thus the direction at time 3 is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps left; the direction is to the left or 270 degrees
Direction_time4 is 270,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 11 actual_solution 11



ID: 84
{'Instructions': 'Turn left. Take 8 steps. Turn right. Turn right. Take 8 steps. Turn right.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn right again, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 8 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 85
{'Instructions': 'Always face forward. Take 3 steps right. Take 9 steps forward. Take 10 steps backward. Take 8 steps right. Take 10 steps forward. Take 6 steps left. Take 5 steps left. Take 9 steps backward.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps right, direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 6 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 5 steps left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 9 steps backward; the direction is backwards or 180 degrees
Direction_time8 is 180,
Steps_time8 is 9,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 86
{'Instructions': 'Take 5 steps. Take 10 steps. Turn around. Take 4 steps. Take 4 steps. Take 6 steps. Take 10 steps. Turn around. Take 9 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 4 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 6 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 10 steps, so direction doesn't change again.
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Eight instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time8 is (Direction_time7 + 180) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Lastly take 9 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 9,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 87
{'Instructions': 'Take 6 steps. Take 9 steps. Turn right. Turn around. Turn around. Turn left. Take 7 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 22}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 7 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 22 actual_solution 22



ID: 88
{'Instructions': 'Take 4 steps. Turn right. Take 1 step. Take 1 step. Turn around. Take 7 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 1 step, so direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 7 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 6 actual_solution 6



ID: 89
{'Instructions': 'Turn right. Take 9 steps. Turn around. Take 6 steps. Take 3 steps. Turn left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 6 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps; the direction doesn't change
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 90
{'Instructions': 'Always face forward. Take 9 steps forward. Take 9 steps backward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 91
{'Instructions': 'Turn left. Take 3 steps. Take 6 steps. Turn right. Turn right. Take 9 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn right again, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 9 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 92
{'Instructions': 'Take 1 step. Take 6 steps. Turn right. Turn left. Turn around. Take 5 steps. Take 2 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to take 5 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 2 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 93
{'Instructions': 'Take 4 steps. Take 2 steps. Take 7 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 13 actual_solution 13



ID: 94
{'Instructions': 'Turn right. Turn left. Take 3 steps. Turn left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 3}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 3 actual_solution 3



ID: 95
{'Instructions': 'Always face forward. Take 2 steps backward. Take 3 steps backward. Take 3 steps backward. Take 8 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 8 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 96
{'Instructions': 'Take 8 steps. Turn around. Take 8 steps. Turn left. Turn right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 8 steps, so direction doesn't change relative to the previous direction and the number of steps is 8.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 97
{'Instructions': 'Always face forward. Take 3 steps backward. Take 7 steps right. Take 5 steps forward. Take 8 steps left. Take 2 steps left. Take 6 steps backward. Take 10 steps left. Take 9 steps forward. Take 8 steps forward.', 'Difficulty': 10, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps forward, direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 6 steps backward; the direction is backward or 180 degrees
Direction_time6 is 180,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 10 steps left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 9 steps forward; the direction is forward or 0 degrees
Direction_time8 is 0,
Steps_time8 is 9,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 8 steps forward; the direction is forward or 0 degrees
Direction_time9 is 0,
Steps_time9 is 8,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 18 actual_solution 18



ID: 98
{'Instructions': 'Take 2 steps. Take 6 steps. Take 2 steps. Turn around. Take 10 steps. Turn right.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 10 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 99
{'Instructions': 'Take 6 steps. Turn left. Turn around. Turn right. Take 6 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to take 6 steps, so direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 100
{'Instructions': 'Always face forward. Take 5 steps backward. Take 8 steps right. Take 10 steps right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 19}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 10 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 19 actual_solution 19



ID: 101
{'Instructions': 'Always face forward. Take 3 steps left. Take 8 steps forward. Take 4 steps backward. Take 4 steps forward. Take 2 steps right. Take 9 steps right. Take 8 steps left. Take 8 steps backward.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time6 is 90,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time7 is 270,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 8 steps backward; the direction is backwards or 180 degrees.
Direction_time8 is 180,
Steps_time8 is 8,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 102
{'Instructions': 'Take 7 steps. Take 5 steps. Take 5 steps. Take 9 steps. Turn left. Take 7 steps. Turn right. Take 2 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 29}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 7 steps, so direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 2 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 2,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 29 actual_solution 29



ID: 103
{'Instructions': 'Always face forward. Take 5 steps left. Take 5 steps right.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 5 steps right; the direction is to the right or 90 degrees
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 104
{'Instructions': 'Turn left. Take 2 steps. Take 10 steps. Take 10 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 22}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 10 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 22 actual_solution 22



ID: 105
{'Instructions': 'Always face forward. Take 5 steps forward. Take 3 steps left. Take 4 steps forward. Take 6 steps right. Take 5 steps backward. Take 4 steps forward. Take 8 steps left. Take 1 step left. Take 4 steps backward.', 'Difficulty': 10, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time6 is 0,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time7 is 270,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 1 step left; the direction is to the left or 270 degrees.
Direction_time8 is 270,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 4 steps backward; the direction is backwards or 180 degrees.
Direction_time9 is 180,
Steps_time9 is 4,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 7 actual_solution 7



ID: 106
{'Instructions': 'Turn left. Take 7 steps. Turn left. Turn left. Take 9 steps. Take 2 steps. Turn left. Take 4 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Turn left again. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 4 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 6 actual_solution 6



ID: 107
{'Instructions': 'Always face forward. Take 7 steps backward. Take 7 steps right. Take 6 steps right. Take 5 steps forward. Take 8 steps forward. Take 9 steps right. Take 9 steps forward.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 27}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time6 is 90,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 9 steps forward; the direction is forward or 0 degrees.
Direction_time7 is 0,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 27 actual_solution 27



ID: 108
{'Instructions': 'Take 5 steps. Take 3 steps. Take 2 steps. Turn around. Take 10 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 10 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 109
{'Instructions': 'Always face forward. Take 3 steps forward. Take 1 step backward.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 2 actual_solution 2



ID: 110
{'Instructions': 'Take 3 steps. Take 7 steps. Turn around. Take 10 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 10 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 111
{'Instructions': 'Turn left. Turn around. Turn left. Take 7 steps. Take 2 steps. Take 4 steps. Take 8 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Second instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 8 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 21 actual_solution 21



ID: 112
{'Instructions': 'Always face forward. Take 9 steps left. Take 4 steps forward.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 4 steps forward; the direction is forward or 0 degrees
Direction_time2 is 0,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 10 actual_solution 10



ID: 113
{'Instructions': 'Always face forward. Take 2 steps left. Take 5 steps left. Take 6 steps forward. Take 9 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 9 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 6 actual_solution 6



ID: 114
{'Instructions': 'Take 6 steps. Turn left. Turn left. Take 3 steps. Take 2 steps. Take 8 steps. Turn around. Take 7 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time8 is Direction_time7,
Steps_time8 is 7,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 115
{'Instructions': 'Take 4 steps. Turn around. Turn around. Take 6 steps. Turn around. Take 4 steps. Take 6 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around again, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 4 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 6 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 116
{'Instructions': 'Take 5 steps. Turn right. Turn left. Take 3 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 3 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 8 actual_solution 8



ID: 117
{'Instructions': 'Turn around. Take 5 steps. Turn around. Take 5 steps. Turn left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 118
{'Instructions': 'Always face forward. Take 10 steps forward. Take 9 steps left. Take 5 steps right. Take 5 steps backward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 6 actual_solution 6



ID: 119
{'Instructions': 'Always face forward. Take 2 steps right. Take 9 steps left. Take 8 steps left. Take 5 steps right. Take 1 step backward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 10 actual_solution 10



ID: 120
{'Instructions': 'Always face forward. Take 4 steps right. Take 2 steps forward. Take 5 steps right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 5 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 9 actual_solution 9



ID: 121
{'Instructions': 'Take 7 steps. Take 3 steps. Take 5 steps. Take 6 steps. Take 5 steps. Take 1 step. Turn right. Turn right. Take 10 steps.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 1 step, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Eighth instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time8 is (Direction_time7 + 90) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Lastly take 10 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 10,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 17 actual_solution 17



ID: 122
{'Instructions': 'Take 4 steps. Take 2 steps. Take 10 steps. Turn around. Take 10 steps. Take 6 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 10 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 6 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 123
{'Instructions': 'Turn left. Turn right. Take 8 steps. Take 4 steps. Turn right. Turn right. Take 10 steps. Take 1 step. Take 1 step.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then turn right again; our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Take 10 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 1 step; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 1 step; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 1,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 124
{'Instructions': 'Always face forward. Take 5 steps right. Take 10 steps backward. Take 10 steps forward. Take 5 steps left. Take 6 steps left.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 6 steps to the left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 6 actual_solution 6



ID: 125
{'Instructions': 'Always face forward. Take 3 steps backward. Take 3 steps forward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 126
{'Instructions': 'Always face forward. Take 5 steps right. Take 1 step backward.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 1 step backwards; the direction is backwards or 180 degrees
Direction_time2 is 180,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 5 actual_solution 5



ID: 127
{'Instructions': 'Take 1 step. Take 5 steps. Take 10 steps. Take 4 steps. Take 4 steps. Take 1 step. Turn right.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 25}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 1 step, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 25 actual_solution 25



ID: 128
{'Instructions': 'Always face forward. Take 8 steps forward. Take 4 steps backward. Take 5 steps left. Take 2 steps forward. Take 3 steps backward. Take 4 steps right.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 3}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 4 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 3 actual_solution 3



ID: 129
{'Instructions': 'Take 2 steps. Take 7 steps. Turn right. Take 8 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 8 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 12 actual_solution 12



ID: 130
{'Instructions': 'Take 10 steps. Turn around. Take 1 step. Take 1 step. Take 1 step. Take 7 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step; the direction doesn't change
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step; the direction doesn't change
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 7 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 131
{'Instructions': 'Turn left. Turn around. Take 7 steps. Turn left. Turn right. Turn around. Take 7 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Second instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 7 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 132
{'Instructions': 'Turn left. Take 9 steps. Take 6 steps. Turn around. Take 5 steps. Take 8 steps. Turn left. Turn right.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 5 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 8 steps; the direction doesn't change
Direction_time6 is Direction_time5,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time8 is (Direction_time7 + 90) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 2 actual_solution 2



ID: 133
{'Instructions': 'Take 2 steps. Take 10 steps. Turn around. Take 6 steps. Turn left. Turn right. Take 6 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 6 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 6 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 134
{'Instructions': 'Take 7 steps. Turn right. Turn right. Take 10 steps. Take 1 step. Take 5 steps. Turn around. Take 5 steps. Take 4 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn right again, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Then take 5 steps; the direction doesn't change relative to the previous direction
Direction_time8 is Direction_time7,
Steps_time8 is 5,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 4 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 4,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 135
{'Instructions': 'Take 6 steps. Take 9 steps. Turn around. Take 6 steps. Take 5 steps. Take 4 steps. Turn around. Turn right. Turn right.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 6 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 4 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Eighth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time8 is (Direction_time7 + 90) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time9 is (Direction_time8 + 90) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 136
{'Instructions': 'Always face forward. Take 9 steps right. Take 9 steps forward. Take 8 steps backward. Take 5 steps left. Take 9 steps forward. Take 1 step backward. Take 2 steps right. Take 6 steps forward. Take 6 steps forward.', 'Difficulty': 10, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 22}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps left, direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step backward; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps right; the direction is to the right or 90 degrees
Direction_time7 is 90,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 6 steps forward; the direction is forward or 0 degrees
Direction_time8 is 0,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 6 steps forward; the direction is forward or 0 degrees
Direction_time9 is 0,
Steps_time9 is 6,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 22 actual_solution 22



ID: 137
{'Instructions': 'Always face forward. Take 9 steps left. Take 7 steps backward. Take 10 steps forward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 10 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 9 actual_solution 9



ID: 138
{'Instructions': 'Always face forward. Take 6 steps right. Take 8 steps forward. Take 1 step forward. Take 4 steps left. Take 1 step right. Take 9 steps backward. Take 3 steps left.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 3 steps left; the direction is to the left or 270 degrees.
Direction_time7 is 270,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 139
{'Instructions': 'Always face forward. Take 6 steps backward. Take 7 steps backward. Take 1 step backward. Take 8 steps forward. Take 6 steps forward.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backward; the direction is backward or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 6 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 140
{'Instructions': 'Take 7 steps. Turn around. Take 2 steps. Take 5 steps. Turn left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 2 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to take 5 steps, so direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 141
{'Instructions': 'Always face forward. Take 2 steps left. Take 5 steps left. Take 9 steps right. Take 2 steps left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps to the left; the direction is to the left again, or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 2 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 142
{'Instructions': 'Always face forward. Take 4 steps forward. Take 2 steps forward. Take 9 steps left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 9 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 11 actual_solution 11



ID: 143
{'Instructions': 'Always face forward. Take 7 steps left. Take 2 steps right. Take 5 steps backward. Take 8 steps left. Take 7 steps forward. Take 7 steps right. Take 9 steps forward.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps left, direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 7 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 9 steps forward; the direction is forward or 0 degrees
Direction_time7 is 0,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 13 actual_solution 13



ID: 144
{'Instructions': 'Always face forward. Take 1 step backward. Take 1 step backward. Take 1 step backward. Take 3 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 3 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 145
{'Instructions': 'Take 2 steps. Turn around. Take 2 steps.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Lastly take 2 steps; the direction doesn't change again
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 146
{'Instructions': 'Take 7 steps. Turn around. Take 7 steps. Turn left. Turn around. Turn around. Turn left.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 7 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result:  actual_solution 0



ID: 146
{'Instructions': 'Take 7 steps. Turn around. Take 7 steps. Turn left. Turn around. Turn around. Turn left.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
repeated: 1
Corrected!!!!!
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 7 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 147
{'Instructions': 'Take 6 steps. Turn right. Turn right. Take 7 steps. Turn around. Take 1 step.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 7 steps, so direction doesn't change relative to the previous direction and the number of steps is 7.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 1 step; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 148
{'Instructions': 'Always face forward. Take 9 steps forward. Take 9 steps backward. Take 4 steps left. Take 6 steps right. Take 9 steps backward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 9 steps backwards; the direction is backwards or 180 degrees
Direction_time5 is 180,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 9 actual_solution 9



ID: 149
{'Instructions': 'Always face forward. Take 2 steps left. Take 7 steps right. Take 5 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 5 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 150
{'Instructions': 'Turn around. Take 4 steps. Take 8 steps. Take 2 steps. Turn right. Take 9 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 9 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 17 actual_solution 17



ID: 151
{'Instructions': 'Take 10 steps. Take 1 step. Take 3 steps. Take 6 steps. Take 1 step. Turn around.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 21 actual_solution 21



ID: 152
{'Instructions': 'Take 2 steps. Take 5 steps. Take 6 steps. Take 2 steps. Take 3 steps. Turn around. Take 10 steps. Take 8 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%sixth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%seventh instruction is to take 10 steps, so direction doesn't change.
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 8 steps, so direction doesn't change again.
Direction_time8 is Direction_time7,
Steps_time8 is 8,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 153
{'Instructions': 'Always face forward. Take 7 steps left. Take 7 steps right. Take 1 step left. Take 8 steps left. Take 4 steps backward. Take 7 steps left. Take 8 steps backward.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 7 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 8 steps backwards; the direction is backwards or 180 degrees
Direction_time7 is 180,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 20 actual_solution 20



ID: 154
{'Instructions': 'Take 6 steps. Take 4 steps. Take 8 steps. Turn around. Take 2 steps. Take 7 steps. Take 8 steps. Take 1 step.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 2 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 7 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 8 steps, so direction doesn't change.
Direction_time7 is Direction_time6,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 1 step, so direction doesn't change.
Direction_time8 is Direction_time7,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 155
{'Instructions': 'Turn left. Take 9 steps. Take 2 steps. Take 5 steps. Turn right. Turn right. Take 5 steps. Take 10 steps. Take 1 step.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn right again, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 5 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 10 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 10,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 1 step; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 1,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 156
{'Instructions': 'Always face forward. Take 8 steps left. Take 7 steps left. Take 2 steps right. Take 10 steps forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 10 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 16 actual_solution 16



ID: 157
{'Instructions': 'Take 1 step. Take 2 steps. Turn right. Take 6 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 6 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 7 actual_solution 7



ID: 158
{'Instructions': 'Always face forward. Take 5 steps left. Take 1 step forward. Take 9 steps right. Take 3 steps backward. Take 2 steps forward. Take 4 steps left.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 4 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 159
{'Instructions': 'Always face forward. Take 7 steps right. Take 4 steps left. Take 3 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 3 steps to the left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 160
{'Instructions': 'Always face forward. Take 3 steps forward. Take 5 steps backward. Take 2 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 2 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 1 ?-  actual_solution 0



ID: 160
{'Instructions': 'Always face forward. Take 3 steps forward. Take 5 steps backward. Take 2 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
repeated: 1
Corrected!!!!!
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 2 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 161
{'Instructions': 'Turn left. Turn left. Take 9 steps. Turn around. Take 5 steps. Take 4 steps. Turn right.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 5 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 4 steps; the direction doesn't change
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 162
{'Instructions': 'Take 5 steps. Take 5 steps. Turn right. Turn around. Turn right. Turn around. Take 10 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 10 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 163
{'Instructions': 'Always face forward. Take 7 steps left. Take 8 steps left. Take 1 step left. Take 9 steps left. Take 10 steps forward. Take 5 steps forward.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 29}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 5 steps forward; the direction is 0 degrees
Direction_time6 is 0,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 29 actual_solution 29



ID: 164
{'Instructions': 'Always face forward. Take 8 steps right. Take 1 step left. Take 7 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 8.
Direction_time1 is 90,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 7 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 165
{'Instructions': 'Take 4 steps. Turn around. Take 4 steps.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Lastly take 4 steps; the direction doesn't change again
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 166
{'Instructions': 'Turn around. Take 1 step. Take 6 steps. Turn around. Take 6 steps. Take 9 steps. Take 1 step.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 1 step; the direction doesn't change again.
Direction_time7 is Direction_time6,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 9 actual_solution 9



ID: 167
{'Instructions': 'Turn right. Turn left. Take 1 step. Take 6 steps. Take 5 steps. Take 10 steps. Turn around.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 22}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly, turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 22 actual_solution 22



ID: 168
{'Instructions': 'Take 8 steps. Take 9 steps. Turn around. Take 6 steps. Take 2 steps. Take 9 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 6 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 9 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 169
{'Instructions': 'Turn around. Take 9 steps. Turn around. Take 4 steps. Take 2 steps. Take 3 steps. Turn around.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 4 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps; the direction doesn't change
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 3 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 170
{'Instructions': 'Take 5 steps. Turn around. Take 5 steps. Turn left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 5 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 171
{'Instructions': 'Take 5 steps. Take 2 steps. Take 1 step. Take 7 steps. Turn left. Turn right. Turn around. Take 7 steps. Take 8 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Then take 7 steps; the direction doesn't change relative to the previous direction
Direction_time8 is Direction_time7,
Steps_time8 is 7,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 8 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 8,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 172
{'Instructions': 'Take 8 steps. Turn around. Take 8 steps. Turn right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 8 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 173
{'Instructions': 'Take 3 steps. Take 4 steps. Turn around. Take 1 step. Take 6 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 6 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 174
{'Instructions': 'Take 3 steps. Take 4 steps. Turn around. Take 4 steps. Take 6 steps. Take 1 step. Turn around. Take 4 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 4 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 1 step, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 4 steps, so direction doesn't change.
Direction_time8 is Direction_time7,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 175
{'Instructions': 'Turn left. Turn left. Take 7 steps. Turn around. Take 7 steps. Turn left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 7 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 176
{'Instructions': 'Turn right. Take 1 step. Turn left. Take 3 steps. Take 4 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 4 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 7 actual_solution 7



ID: 177
{'Instructions': 'Always face forward. Take 2 steps forward. Take 5 steps forward. Take 3 steps right. Take 3 steps left. Take 3 steps backward. Take 4 steps backward.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 4 steps backwards; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 178
{'Instructions': 'Always face forward. Take 2 steps right. Take 2 steps left.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 2 steps to the left; the direction is to the left or 270 degrees
Direction_time2 is 270,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 1 ?-  actual_solution 0



ID: 178
{'Instructions': 'Always face forward. Take 2 steps right. Take 2 steps left.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
repeated: 1
Corrected!!!!!
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 2 steps to the left; the direction is to the left or 270 degrees
Direction_time2 is 270,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 179
{'Instructions': 'Turn left. Turn left. Turn around. Take 1 step. Take 6 steps. Turn left. Turn left. Take 7 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps; the direction doesn't change
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 7 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 7,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 180
{'Instructions': 'Take 7 steps. Turn around. Take 4 steps. Take 5 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 4 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 23 actual_solution 2



ID: 180
{'Instructions': 'Take 7 steps. Turn around. Take 4 steps. Take 5 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 4 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 23 actual_solution 2



ID: 181
{'Instructions': 'Turn around. Take 2 steps. Turn around. Take 1 step. Take 1 step. Turn around.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step; the direction doesn't change
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 182
{'Instructions': 'Always face forward. Take 2 steps forward. Take 1 step backward. Take 3 steps left. Take 3 steps forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 3 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 5 actual_solution 5



ID: 183
{'Instructions': 'Always face forward. Take 6 steps backward. Take 6 steps forward. Take 6 steps right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 6 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 6 actual_solution 6



ID: 184
{'Instructions': 'Always face forward. Take 4 steps backward. Take 4 steps forward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 185
{'Instructions': 'Take 5 steps. Take 9 steps. Turn left. Take 5 steps. Take 6 steps. Take 10 steps. Turn around. Take 6 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 5 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 10 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 6 steps, so direction doesn't change.
Direction_time8 is Direction_time7,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 21 actual_solution 21



ID: 186
{'Instructions': 'Take 6 steps. Take 5 steps. Turn right. Take 5 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 5 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 12 actual_solution 12



ID: 187
{'Instructions': 'Turn right. Take 8 steps. Take 1 step. Turn around. Take 9 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 9 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 188
{'Instructions': 'Take 1 step. Take 6 steps. Turn left. Take 4 steps. Take 4 steps. Turn around. Take 4 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 4 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 4 steps, so direction doesn't change.
Direction_time7 is Direction_time6,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 8 actual_solution 8



ID: 189
{'Instructions': 'Always face forward. Take 6 steps left. Take 6 steps right. Take 4 steps forward. Take 10 steps forward. Take 6 steps left. Take 1 step left. Take 10 steps forward. Take 2 steps right.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 25}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 1 step left; the direction is to the left or 270 degrees.
Direction_time6 is 270,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time7 is 0,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 2 steps right; the direction is to the right or 90 degrees.
Direction_time8 is 90,
Steps_time8 is 2,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 25 actual_solution 25



ID: 190
{'Instructions': 'Always face forward. Take 7 steps right. Take 1 step forward. Take 3 steps left. Take 2 steps left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 7.
Direction_time1 is 90,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 2 steps left; the direction is to the left or 270 degrees
Direction_time4 is 270,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result:  actual_solution 2



ID: 190
{'Instructions': 'Always face forward. Take 7 steps right. Take 1 step forward. Take 3 steps left. Take 2 steps left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 2}
repeated: 1
Corrected!!!!!
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 2 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 2 actual_solution 2



ID: 191
{'Instructions': 'Turn left. Take 9 steps. Take 3 steps. Take 8 steps. Turn left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 20 actual_solution 20



ID: 192
{'Instructions': 'Always face forward. Take 2 steps right. Take 3 steps left. Take 7 steps left. Take 1 step right. Take 9 steps backward. Take 2 steps right. Take 9 steps right. Take 4 steps left. Take 9 steps forward.', 'Difficulty': 10, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 2 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 9 steps right; the direction is to the right or 90 degrees
Direction_time7 is 90,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 4 steps left; the direction is to the left or 270 degrees
Direction_time8 is 270,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 9 steps forward; the direction is forward or 0 degrees
Direction_time9 is 0,
Steps_time9 is 9,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 193
{'Instructions': 'Take 10 steps. Take 2 steps. Take 7 steps. Take 9 steps. Take 4 steps. Turn left. Turn around. Take 3 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 32}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 3 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 3,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 32 actual_solution 32



ID: 194
{'Instructions': 'Always face forward. Take 3 steps forward. Take 10 steps right. Take 10 steps forward. Take 8 steps forward. Take 9 steps backward. Take 4 steps left. Take 5 steps forward. Take 3 steps forward.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time6 is 270,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time7 is 0,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 3 steps forward; the direction is forward or 0 degrees.
Direction_time8 is 0,
Steps_time8 is 3,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 21 actual_solution 21



ID: 195
{'Instructions': 'Always face forward. Take 8 steps left. Take 6 steps left. Take 10 steps forward. Take 6 steps left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 22}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 6 steps left; the direction is to the left or 270 degrees
Direction_time4 is 270,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 22 actual_solution 22



ID: 196
{'Instructions': 'Take 5 steps. Take 2 steps. Take 10 steps. Take 4 steps. Turn left. Turn left. Take 9 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn left again, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 9 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 12 actual_solution 12



ID: 197
{'Instructions': 'Always face forward. Take 4 steps right. Take 10 steps left. Take 1 step right. Take 9 steps left. Take 7 steps backward. Take 5 steps left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 5 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 20 actual_solution 20



ID: 198
{'Instructions': 'Take 5 steps. Take 9 steps. Take 8 steps. Take 4 steps. Take 4 steps. Take 5 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 35}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 5 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 35 actual_solution 35



ID: 199
{'Instructions': 'Always face forward. Take 1 step left. Take 1 step right. Take 1 step backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 1}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 1 actual_solution 1



ID: 200
{'Instructions': 'Always face forward. Take 9 steps left. Take 1 step right. Take 7 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 7 steps backwards; the direction is backwards or 180 degrees
Direction_time3 is 180,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 11 actual_solution 11



ID: 201
{'Instructions': 'Take 5 steps. Turn around. Take 5 steps. Turn right. Turn right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 5 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly turn right again, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 202
{'Instructions': 'Take 9 steps. Turn around. Take 9 steps.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 9 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 203
{'Instructions': 'Take 9 steps. Turn right. Turn right. Take 9 steps. Turn around.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn right again, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 9 steps, so direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 204
{'Instructions': 'Take 3 steps. Take 5 steps. Turn around. Take 3 steps. Take 5 steps. Turn right. Turn right.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 3 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 205
{'Instructions': 'Turn left. Take 4 steps. Turn around. Take 4 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 4 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 206
{'Instructions': 'Take 3 steps. Take 6 steps. Take 9 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 18 actual_solution 18



ID: 207
{'Instructions': 'Always face forward. Take 2 steps forward. Take 2 steps backward. Take 4 steps right. Take 7 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 11 actual_solution 11



ID: 208
{'Instructions': 'Always face forward. Take 6 steps forward. Take 4 steps backward. Take 1 step forward. Take 9 steps forward. Take 7 steps backward. Take 5 steps backward.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step forward, direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 5 steps backwards; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 209
{'Instructions': 'Take 2 steps. Turn around. Turn right. Turn left. Take 2 steps. Turn around. Turn around.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to take 2 steps, so direction doesn't change relative to the previous direction and the number of steps is 2.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 210
{'Instructions': 'Always face forward. Take 4 steps left. Take 5 steps backward. Take 2 steps forward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 2 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 5 actual_solution 5



ID: 211
{'Instructions': 'Always face forward. Take 5 steps left. Take 1 step backward. Take 2 steps right. Take 2 steps left. Take 4 steps forward. Take 6 steps left. Take 1 step right. Take 10 steps right. Take 3 steps backward.', 'Difficulty': 10, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps left; the direction is left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps left, thus the direction at time 4 is left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 6 steps left; the direction is 270 degrees
Direction_time6 is 270,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 1 step right; the direction is 90 degrees
Direction_time7 is 90,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 10 steps right; the direction is to the right or 90 degrees
Direction_time8 is 90,
Steps_time8 is 10,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 3 steps backward; the direction is backwards or 180 degrees
Direction_time9 is 180,
Steps_time9 is 3,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 212
{'Instructions': 'Always face forward. Take 4 steps left. Take 2 steps right. Take 9 steps right. Take 3 steps forward. Take 9 steps left. Take 2 steps right. Take 3 steps backward.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 2 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 3 steps backward; the direction is backward or 180 degrees
Direction_time7 is 180,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 213
{'Instructions': 'Take 5 steps. Take 3 steps. Turn right.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 8 actual_solution 8



ID: 214
{'Instructions': 'Always face forward. Take 4 steps backward. Take 1 step left. Take 5 steps forward. Take 3 steps backward. Take 9 steps left. Take 8 steps forward. Take 6 steps backward. Take 10 steps right.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time6 is 0,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time7 is 180,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 10 steps right; the direction is to the right or 90 degrees.
Direction_time8 is 90,
Steps_time8 is 10,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 215
{'Instructions': 'Always face forward. Take 4 steps right. Take 3 steps left. Take 1 step left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 1 step to the left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 216
{'Instructions': 'Take 6 steps. Take 4 steps. Take 2 steps. Turn around. Take 9 steps. Take 3 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 9 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 3 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 217
{'Instructions': 'Always face forward. Take 6 steps backward. Take 2 steps backward. Take 1 step forward. Take 6 steps forward. Take 3 steps forward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps backward; the direction is backward or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 3 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 2 actual_solution 2



ID: 218
{'Instructions': 'Always face forward. Take 5 steps backward. Take 6 steps right. Take 8 steps backward. Take 8 steps forward. Take 7 steps forward. Take 6 steps left. Take 2 steps left. Take 7 steps left. Take 1 step right.', 'Difficulty': 10, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps backward, thus the direction at time 3 is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Then take 7 steps forward; the direction is 0 degrees
Direction_time5 is 0,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 6 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 7 steps left; the direction is to the left or 270 degrees
Direction_time8 is 270,
Steps_time8 is 7,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 1 step right; the direction is to the right or 90 degrees
Direction_time9 is 90,
Steps_time9 is 1,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 8 actual_solution 8



ID: 219
{'Instructions': 'Take 2 steps. Take 7 steps. Turn around. Take 3 steps. Take 6 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 3 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 6 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 220
{'Instructions': 'Always face forward. Take 6 steps forward. Take 7 steps backward. Take 7 steps backward. Take 8 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps backwards again; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 8 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 221
{'Instructions': 'Always face forward. Take 8 steps backward. Take 8 steps forward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Then take 8 steps forward; the direction is forward or 0 degrees
Direction_time2 is 0,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 222
{'Instructions': 'Always face forward. Take 3 steps backward. Take 8 steps left. Take 4 steps backward. Take 7 steps backward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps backwards, thus the direction at time 3 is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps backwards; the direction is backwards or 180 degrees
Direction_time4 is 180,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 16 actual_solution 16



ID: 223
{'Instructions': 'Turn around. Take 8 steps. Take 6 steps. Take 10 steps. Turn right. Take 6 steps. Turn left. Take 10 steps. Turn left.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 35}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 6 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Turn left; so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time8 is Direction_time7,
Steps_time8 is 10,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly turn left; so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time9 is (Direction_time8 + 270) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 35 actual_solution 35



ID: 224
{'Instructions': 'Take 4 steps. Take 3 steps. Turn around. Take 7 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 7 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 225
{'Instructions': 'Always face forward. Take 8 steps forward. Take 5 steps backward. Take 5 steps left. Take 5 steps forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result:  actual_solution 9



ID: 225
{'Instructions': 'Always face forward. Take 8 steps forward. Take 5 steps backward. Take 5 steps left. Take 5 steps forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
repeated: 1
Corrected!!!!!
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 9 actual_solution 9



ID: 226
{'Instructions': 'Take 8 steps. Take 3 steps. Take 4 steps. Turn around. Take 6 steps. Take 6 steps. Take 3 steps. Turn left.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 6 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 6 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 3 steps, so direction doesn't change again.
Direction_time7 is Direction_time6,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time8 is (Direction_time7 + 270) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 227
{'Instructions': 'Always face forward. Take 1 step forward. Take 7 steps forward. Take 1 step backward. Take 6 steps backward. Take 1 step backward.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 1 step backward; the direction is backward or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 228
{'Instructions': 'Take 6 steps. Take 4 steps. Turn around. Take 2 steps. Take 2 steps. Take 1 step. Take 5 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 2 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps; the direction doesn't change
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 1 step; the direction doesn't change
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 5 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 229
{'Instructions': 'Always face forward. Take 3 steps left. Take 9 steps right. Take 9 steps left. Take 6 steps right. Take 1 step left. Take 2 steps right. Take 9 steps left. Take 5 steps right.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps left; the direction is left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps right; the direction is right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps right, thus the direction at time 4 is right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step left; the direction is left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 2 steps right; the direction is right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 9 steps left; the direction is left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 5 steps right; the direction is to the right or 90 degrees
Direction_time8 is 90,
Steps_time8 is 5,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 230
{'Instructions': 'Take 4 steps. Turn left. Turn around. Turn right. Take 4 steps. Turn left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to take 4 steps, so direction doesn't change relative to the previous direction and the number of steps is 4.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 231
{'Instructions': 'Take 3 steps. Take 2 steps. Take 6 steps. Turn around. Take 3 steps. Take 7 steps. Take 1 step.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 3 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 7 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 1 step, so direction doesn't change again.
Direction_time7 is Direction_time6,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 232
{'Instructions': 'Take 2 steps. Take 3 steps. Turn around. Take 4 steps. Take 1 step.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 4 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 1 step, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 233
{'Instructions': 'Always face forward. Take 4 steps forward. Take 5 steps forward. Take 1 step backward. Take 6 steps backward. Take 2 steps backward.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps backward; the direction is backward or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 234
{'Instructions': 'Take 7 steps. Take 8 steps. Take 3 steps. Take 2 steps. Turn left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result:  actual_solution 20



ID: 234
{'Instructions': 'Take 7 steps. Take 8 steps. Take 3 steps. Take 2 steps. Turn left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 20}
repeated: 1
Corrected!!!!!
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 20 actual_solution 20



ID: 235
{'Instructions': 'Always face forward. Take 6 steps forward. Take 1 step forward. Take 1 step forward. Take 9 steps forward. Take 7 steps left. Take 5 steps right. Take 6 steps forward.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 23}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 5 steps right; the direction is to the right or 90 degrees.
Direction_time6 is 90,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 6 steps forward; the direction is forward or 0 degrees.
Direction_time7 is 0,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 23 actual_solution 23



ID: 236
{'Instructions': 'Always face forward. Take 10 steps backward. Take 1 step forward. Take 9 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 9 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 237
{'Instructions': 'Always face forward. Take 1 step forward. Take 6 steps forward. Take 5 steps forward. Take 9 steps forward. Take 4 steps left. Take 10 steps forward. Take 6 steps forward.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 37}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time6 is 0,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 6 steps forward; the direction is forward or 0 degrees.
Direction_time7 is 0,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 37 actual_solution 37



ID: 238
{'Instructions': 'Always face forward. Take 4 steps left. Take 6 steps left. Take 3 steps left. Take 2 steps backward. Take 9 steps right. Take 6 steps left. Take 10 steps forward. Take 6 steps forward.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps left; the direction is left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps left; the direction is left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 6 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 10 steps forward; the direction is forward or 0 degrees
Direction_time7 is 0,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 6 steps forward; the direction is forward or 0 degrees
Direction_time8 is 0,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 17 actual_solution 17



ID: 239
{'Instructions': 'Always face forward. Take 5 steps left. Take 8 steps right. Take 8 steps forward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 8 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 9 actual_solution 9



ID: 240
{'Instructions': 'Turn left. Turn left. Turn right. Take 4 steps. Turn around. Take 1 step. Take 2 steps. Take 1 step.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Turn right. So our direction changes by +90 relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 1 step; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 241
{'Instructions': 'Take 7 steps. Turn right. Turn right. Take 6 steps. Turn right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 1}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 6 steps, so direction doesn't change relative to the previous direction and the number of steps is 6.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 1



ID: 241
{'Instructions': 'Take 7 steps. Turn right. Turn right. Take 6 steps. Turn right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 1}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 6 steps, so direction doesn't change relative to the previous direction and the number of steps is 6.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 1



ID: 242
{'Instructions': 'Always face forward. Take 10 steps forward. Take 10 steps right. Take 10 steps backward. Take 3 steps forward. Take 7 steps forward. Take 9 steps left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 9 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 10 actual_solution 10



ID: 243
{'Instructions': 'Always face forward. Take 4 steps right. Take 4 steps left. Take 5 steps backward. Take 5 steps backward. Take 10 steps forward.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps backwards again; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 10 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 244
{'Instructions': 'Take 5 steps. Take 9 steps. Turn around. Take 3 steps. Turn right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 3 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 11 actual_solution 11



ID: 245
{'Instructions': 'Always face forward. Take 8 steps left. Take 2 steps right. Take 6 steps right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 6 steps to the right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 246
{'Instructions': 'Always face forward. Take 10 steps forward. Take 8 steps right. Take 3 steps left. Take 1 step forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 1 step forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 12 actual_solution 12



ID: 247
{'Instructions': 'Turn around. Take 3 steps. Take 8 steps. Take 3 steps. Take 7 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 7 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 21 actual_solution 21



ID: 248
{'Instructions': 'Always face forward. Take 8 steps left. Take 9 steps right. Take 1 step right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 1 step right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 2 actual_solution 2



ID: 249
{'Instructions': 'Always face forward. Take 9 steps right. Take 6 steps right. Take 10 steps backward. Take 9 steps left. Take 4 steps left.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 4 steps to the left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 10 actual_solution 10



ID: 250
{'Instructions': 'Take 7 steps. Turn around. Take 7 steps.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 7 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 251
{'Instructions': 'Take 8 steps. Take 1 step. Take 6 steps. Take 1 step. Take 3 steps. Turn around. Take 10 steps. Take 6 steps. Take 3 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%sixth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%seventh instruction is to take 10 steps, so direction doesn't change.
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 6 steps, so direction doesn't change again.
Direction_time8 is Direction_time7,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 3 steps, so direction doesn't change again.
Direction_time9 is Direction_time8,
Steps_time9 is 3,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 252
{'Instructions': 'Take 7 steps. Turn around. Take 7 steps. Turn left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 7 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 253
{'Instructions': 'Always face forward. Take 4 steps right. Take 5 steps right. Take 9 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 9 steps to the left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 254
{'Instructions': 'Take 9 steps. Turn around. Take 5 steps. Take 4 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 5 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 255
{'Instructions': 'Take 5 steps. Turn right. Turn left.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 5 actual_solution 5



ID: 256
{'Instructions': 'Always face forward. Take 2 steps forward. Take 5 steps forward. Take 7 steps backward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 7 steps backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 257
{'Instructions': 'Always face forward. Take 10 steps left. Take 7 steps right. Take 4 steps right. Take 1 step left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 258
{'Instructions': 'Take 6 steps. Take 1 step. Take 7 steps. Take 2 steps. Turn around. Take 7 steps. Take 9 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 7 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 9 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 259
{'Instructions': 'Turn left. Take 2 steps. Turn around. Take 2 steps. Turn right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 2 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 260
{'Instructions': 'Take 5 steps. Take 9 steps. Take 4 steps. Take 3 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 3 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 21 actual_solution 21



ID: 261
{'Instructions': 'Always face forward. Take 6 steps left. Take 6 steps right.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 6 steps right; the direction is to the right or 90 degrees
Direction_time2 is 90,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 262
{'Instructions': 'Turn right. Turn around. Take 3 steps. Turn left. Turn left. Take 1 step.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn around. So our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 1 step; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 2 actual_solution 2



ID: 263
{'Instructions': 'Take 5 steps. Turn around. Take 10 steps. Turn right. Take 10 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 10 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 10 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 11 actual_solution 11



ID: 264
{'Instructions': 'Turn around. Take 9 steps. Take 2 steps. Take 6 steps. Turn right. Turn left. Take 1 step. Take 9 steps. Take 8 steps.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 35}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Take 1 step; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 9 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 9,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 8 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 8,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 35 actual_solution 35



ID: 265
{'Instructions': 'Always face forward. Take 2 steps backward. Take 4 steps backward. Take 6 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 6 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 266
{'Instructions': 'Take 3 steps. Turn around. Take 8 steps. Turn around. Turn right. Turn left. Take 5 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 8 steps, so direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 5 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 267
{'Instructions': 'Turn right. Take 3 steps. Take 10 steps. Turn around. Take 7 steps. Take 4 steps. Take 2 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 7 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 4 steps; the direction doesn't change
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 2 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 268
{'Instructions': 'Turn right. Take 9 steps. Turn right. Turn left. Take 6 steps. Turn right.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Turn right. So our direction changes by +90 again relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Turn left. So our direction changes by -90 relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 15 actual_solution 15



ID: 269
{'Instructions': 'Turn right. Take 1 step. Turn right. Take 6 steps. Turn right. Take 1 step. Turn right. Take 2 steps. Take 4 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Turn right. So our direction changes by +90 again relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Turn right. So our direction changes by +90 again relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Turn right. So our direction changes by +90 again relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Take 2 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 2,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 4 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 4,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 270
{'Instructions': 'Turn around. Turn right. Take 3 steps. Take 9 steps. Take 7 steps. Take 2 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 2 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 21 actual_solution 21



ID: 270
{'Instructions': 'Turn around. Turn right. Take 3 steps. Take 9 steps. Take 7 steps. Take 2 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 21}
repeated: 1
Corrected!!!!!
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 2 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 21 actual_solution 21



ID: 271
{'Instructions': 'Take 9 steps. Turn around. Take 9 steps. Turn around.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 9 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 272
{'Instructions': 'Always face forward. Take 8 steps left. Take 5 steps right. Take 3 steps right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the left, so the direction is to the left which is 270 degrees, and the number of steps is 8.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps to the right; the direction is to the right or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 3 steps to the right; the direction is to the right or +90 degrees.
Direction_time3 is 90,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 273
{'Instructions': 'Always face forward. Take 9 steps backward. Take 9 steps forward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 274
{'Instructions': 'Always face forward. Take 4 steps forward. Take 3 steps forward. Take 2 steps left. Take 4 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 7 actual_solution 7



ID: 275
{'Instructions': 'Always face forward. Take 7 steps left. Take 7 steps right.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 7 steps right; the direction is to the right or 90 degrees
Direction_time2 is 90,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 276
{'Instructions': 'Always face forward. Take 6 steps left. Take 4 steps right. Take 7 steps left. Take 6 steps forward. Take 3 steps right. Take 5 steps right. Take 9 steps left.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 5 steps right; the direction is 90 degrees
Direction_time6 is 90,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 9 steps left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 12 actual_solution 12



ID: 277
{'Instructions': 'Always face forward. Take 8 steps left. Take 8 steps right.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 8 steps right; the direction is to the right or 90 degrees
Direction_time2 is 90,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 278
{'Instructions': 'Take 8 steps. Take 2 steps. Take 8 steps. Turn around. Take 8 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 8 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 10 actual_solution 10



ID: 279
{'Instructions': 'Always face forward. Take 10 steps forward. Take 3 steps right. Take 3 steps backward. Take 8 steps forward. Take 7 steps left.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 7 steps left; the direction is to the left or 270 degrees
Direction_time5 is 270,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 16 actual_solution 16



ID: 280
{'Instructions': 'Always face forward. Take 8 steps right. Take 5 steps right. Take 7 steps forward. Take 6 steps left. Take 3 steps backward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps right; the direction is to the right again, or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps left, direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 3 steps backwards, thus the direction at time 5 is backwards which is 180 degrees.
Direction_time5 is 180,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 8 actual_solution 8



ID: 281
{'Instructions': 'Always face forward. Take 8 steps backward. Take 8 steps forward. Take 10 steps forward. Take 8 steps backward. Take 8 steps right. Take 6 steps backward. Take 7 steps forward. Take 8 steps forward.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps backward; the direction is backward or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time7 is 0,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 8 steps forward; the direction is forward or 0 degrees.
Direction_time8 is 0,
Steps_time8 is 8,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 14 actual_solution 14



ID: 282
{'Instructions': 'Take 8 steps. Turn right. Turn left. Take 3 steps. Turn right. Take 4 steps. Take 5 steps. Take 6 steps. Turn around.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 19}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 3 steps, so direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 4 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 5 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 6 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time9 is (Direction_time8 + 180) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 19 actual_solution 19



ID: 283
{'Instructions': 'Always face forward. Take 9 steps backward. Take 4 steps left. Take 6 steps forward. Take 6 steps backward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps forwards; the direction is forwards or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 6 steps backwards; the direction is backwards or 180 degrees
Direction_time4 is 180,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 10 actual_solution 10



ID: 284
{'Instructions': 'Always face forward. Take 10 steps forward. Take 7 steps forward. Take 4 steps backward. Take 8 steps right. Take 9 steps forward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 23}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps right, direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 9 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 23 actual_solution 23



ID: 285
{'Instructions': 'Always face forward. Take 1 step forward. Take 4 steps left. Take 6 steps left. Take 10 steps right. Take 7 steps backward. Take 5 steps left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 5 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 8 actual_solution 8



ID: 286
{'Instructions': 'Turn around. Take 3 steps. Turn right. Take 5 steps. Turn around. Take 10 steps. Turn right. Take 4 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 10 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 4 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 9 actual_solution 9



ID: 287
{'Instructions': 'Always face forward. Take 6 steps right. Take 7 steps left. Take 4 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 4 actual_solution 4



ID: 288
{'Instructions': 'Always face forward. Take 1 step left. Take 10 steps right. Take 9 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 9 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 289
{'Instructions': 'Always face forward. Take 5 steps forward. Take 7 steps backward. Take 4 steps right. Take 10 steps backward. Take 4 steps backward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 4 steps backwards; the direction is backwards or 180 degrees
Direction_time5 is 180,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 16 actual_solution 16



ID: 290
{'Instructions': 'Take 7 steps. Take 7 steps. Take 3 steps. Turn around.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 17 actual_solution 17



ID: 291
{'Instructions': 'Always face forward. Take 4 steps forward. Take 9 steps right. Take 6 steps right. Take 8 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 23}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 8 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 23 actual_solution 23



ID: 292
{'Instructions': 'Take 2 steps. Turn around. Take 9 steps. Take 7 steps. Take 6 steps. Turn left. Take 2 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 9 steps, so direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 2 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 1 ?-  actual_solution 20



ID: 292
{'Instructions': 'Take 2 steps. Turn around. Take 9 steps. Take 7 steps. Take 6 steps. Turn left. Take 2 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 20}
repeated: 1
Corrected!!!!!
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 9 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 2 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 20 actual_solution 20



ID: 293
{'Instructions': 'Always face forward. Take 6 steps backward. Take 6 steps right. Take 4 steps forward. Take 4 steps forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 6 actual_solution 6



ID: 294
{'Instructions': 'Take 8 steps. Take 7 steps. Turn around. Take 9 steps. Take 6 steps. Turn right.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 9 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 295
{'Instructions': 'Always face forward. Take 7 steps backward. Take 4 steps left. Take 7 steps left. Take 7 steps right. Take 8 steps forward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 8 steps forward; the direction is forward or 0 degrees
Direction_time5 is 0,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 4 actual_solution 4



ID: 296
{'Instructions': 'Take 3 steps. Take 5 steps. Take 8 steps. Turn right. Turn right. Take 5 steps. Turn around. Take 2 steps. Take 4 steps.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%sixth instruction is to take 5 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Then take 2 steps; the direction doesn't change relative to the previous direction
Direction_time8 is Direction_time7,
Steps_time8 is 2,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 4 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 4,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 17 actual_solution 17



ID: 297
{'Instructions': 'Take 1 step. Take 9 steps. Turn around. Take 7 steps. Take 3 steps. Turn left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 7 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 298
{'Instructions': 'Turn left. Turn around. Take 4 steps. Turn around. Take 1 step. Take 3 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Second instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 3 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 299
{'Instructions': 'Always face forward. Take 5 steps forward. Take 5 steps backward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 300
{'Instructions': 'Take 2 steps. Take 6 steps. Take 4 steps. Turn around. Take 10 steps. Take 2 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 10 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 2 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 301
{'Instructions': 'Take 5 steps. Take 3 steps. Turn around. Take 6 steps. Take 1 step. Take 1 step. Turn around.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 6 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 1 step; the direction doesn't change
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 302
{'Instructions': 'Turn right. Turn right. Turn around. Turn left. Take 4 steps. Take 10 steps. Take 8 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 22}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 8 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 22 actual_solution 22



ID: 303
{'Instructions': 'Always face forward. Take 5 steps left. Take 5 steps backward. Take 5 steps right. Take 5 steps forward. Take 7 steps backward. Take 6 steps forward. Take 1 step forward.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 6 step forward; the direction is 0 degrees
Direction_time6 is 0,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 1 step forward; the direction is 0 degrees
Direction_time7 is 0,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 304
{'Instructions': 'Take 7 steps. Turn around. Take 7 steps. Turn around.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 7 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 305
{'Instructions': 'Take 5 steps. Turn around. Take 7 steps. Take 10 steps. Take 1 step.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 7 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to take 10 steps, so direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 1 step, so direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 13 actual_solution 13



ID: 306
{'Instructions': 'Always face forward. Take 7 steps right. Take 10 steps left. Take 3 steps right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 307
{'Instructions': 'Always face forward. Take 6 steps backward. Take 8 steps right. Take 1 step backward. Take 5 steps left. Take 2 steps left.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps left; the direction is to the left or 270 degrees
Direction_time5 is 270,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 7 actual_solution 7



ID: 308
{'Instructions': 'Always face forward. Take 2 steps right. Take 1 step right. Take 9 steps left. Take 9 steps forward. Take 2 steps forward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 13 actual_solution 13



ID: 309
{'Instructions': 'Always face forward. Take 10 steps left. Take 5 steps right. Take 9 steps right. Take 8 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps to the left, so the direction is to the left which is 270 degrees, and the number of steps is 10.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps to the right; the direction is to the right or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps to the right; the direction is to the right or +90 degrees.
Direction_time3 is 90,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 8 steps to the right; the direction is to the right or +90 degrees.
Direction_time4 is 90,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 12 actual_solution 12



ID: 310
{'Instructions': 'Turn around. Turn around. Turn left. Take 7 steps. Take 8 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn around again. So our direction changes by 180 degrees again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Turn left. So our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 8 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 15 actual_solution 15



ID: 311
{'Instructions': 'Turn right. Take 1 step. Take 7 steps. Take 1 step. Take 5 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 5 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 14 actual_solution 14



ID: 312
{'Instructions': 'Always face forward. Take 5 steps right. Take 7 steps left. Take 8 steps right. Take 6 steps left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 6 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 313
{'Instructions': 'Always face forward. Take 1 step backward. Take 10 steps left. Take 3 steps forward. Take 10 steps backward. Take 8 steps forward. Take 8 steps right. Take 10 steps right. Take 6 steps left. Take 2 steps left.', 'Difficulty': 10, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps forward, direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 8 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 10 steps right; the direction is to the right or 90 degrees
Direction_time7 is 90,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 6 steps left; the direction is to the left or 270 degrees
Direction_time8 is 270,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 2 steps left; the direction is to the left or 270 degrees
Direction_time9 is 270,
Steps_time9 is 2,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 314
{'Instructions': 'Always face forward. Take 6 steps backward. Take 8 steps left. Take 3 steps right. Take 7 steps forward. Take 3 steps right. Take 9 steps right. Take 1 step backward. Take 7 steps left.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps forwards; the direction is forwards or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Then take 3 steps right; the direction is 90 degrees
Direction_time5 is 90,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 9 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 1 step backward; the direction is backwards or 180 degrees
Direction_time7 is 180,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 7 steps left; the direction is to the left or 270 degrees
Direction_time8 is 270,
Steps_time8 is 7,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 315
{'Instructions': 'Always face forward. Take 1 step backward. Take 3 steps backward.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 3 steps backward; the direction is backward or 180 degrees
Direction_time2 is 180,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 4 actual_solution 4



ID: 316
{'Instructions': 'Take 7 steps. Take 7 steps. Take 10 steps. Take 1 step. Turn left. Take 7 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 26}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 7 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 26 actual_solution 26



ID: 317
{'Instructions': 'Always face forward. Take 5 steps right. Take 5 steps backward. Take 5 steps forward. Take 5 steps left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps left; the direction is to the left or 270 degrees
Direction_time4 is 270,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 318
{'Instructions': 'Always face forward. Take 9 steps right. Take 6 steps forward. Take 4 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 9 actual_solution 9



ID: 319
{'Instructions': 'Always face forward. Take 5 steps right. Take 3 steps right.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 5.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps right; the direction is to the right again, or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 8 actual_solution 8



ID: 320
{'Instructions': 'Take 2 steps. Turn right. Take 8 steps. Take 2 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 8 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 2 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 10 actual_solution 10



ID: 321
{'Instructions': 'Always face forward. Take 1 step forward. Take 10 steps forward. Take 8 steps backward. Take 4 steps backward. Take 1 step forward.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 1 step forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 322
{'Instructions': 'Always face forward. Take 5 steps right. Take 1 step left. Take 3 steps right. Take 7 steps left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 323
{'Instructions': 'Always face forward. Take 1 step backward. Take 5 steps forward. Take 10 steps backward. Take 9 steps forward. Take 7 steps right.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 7 steps right; the direction is to the right or 90 degrees
Direction_time5 is 90,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 8 actual_solution 8



ID: 324
{'Instructions': 'Always face forward. Take 10 steps left. Take 2 steps right. Take 8 steps right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 8 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 325
{'Instructions': 'Turn left. Take 9 steps. Take 2 steps. Turn right. Take 4 steps. Turn around. Take 9 steps. Take 1 step. Turn right.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Third instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 4 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Take 9 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 1 step; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time9 is (Direction_time8 + 90) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 13 actual_solution 13



ID: 326
{'Instructions': 'Turn left. Take 4 steps. Take 4 steps. Take 9 steps. Take 4 steps. Turn around. Take 10 steps. Take 8 steps. Take 3 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 10 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 8 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 8,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 3 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 3,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 327
{'Instructions': 'Take 3 steps. Take 3 steps. Take 2 steps. Take 5 steps. Take 3 steps. Turn right. Turn left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 16 actual_solution 16



ID: 328
{'Instructions': 'Turn left. Take 6 steps. Take 5 steps. Take 7 steps. Turn around. Take 9 steps. Take 9 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 9 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 9 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 329
{'Instructions': 'Take 8 steps. Turn right. Turn left. Turn around. Take 8 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to take 8 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 330
{'Instructions': 'Always face forward. Take 9 steps backward. Take 6 steps forward. Take 3 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps forwards; the direction is forwards or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 3 steps forward; the direction is 0 degrees
Direction_time3 is 0,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 331
{'Instructions': 'Always face forward. Take 9 steps forward. Take 7 steps backward. Take 5 steps forward. Take 7 steps backward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps forward, direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps backwards; the direction is backwards or 180 degrees
Direction_time4 is 180,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 332
{'Instructions': 'Always face forward. Take 2 steps left. Take 5 steps right. Take 9 steps left. Take 1 step forward. Take 1 step forward. Take 2 steps left. Take 2 steps backward. Take 10 steps right. Take 2 steps left.', 'Difficulty': 10, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 2 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps backward; the direction is backward or 180 degrees
Direction_time7 is 180,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 10 steps right; the direction is to the right or 90 degrees
Direction_time8 is 90,
Steps_time8 is 10,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 2 steps left; the direction is to the left or 270 degrees
Direction_time9 is 270,
Steps_time9 is 2,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 333
{'Instructions': 'Take 8 steps. Take 1 step. Turn around. Take 3 steps. Turn right. Turn left. Take 6 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 3 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 6 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 334
{'Instructions': 'Take 2 steps. Turn right. Turn around. Turn left. Take 2 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 2 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 335
{'Instructions': 'Take 2 steps. Turn right. Take 1 step. Take 5 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 1 step, so direction doesn't change relative to the previous direction and the number of steps is 1.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps, so direction doesn't change relative to the previous direction and the number of steps is 5.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 6 actual_solution 6



ID: 336
{'Instructions': 'Take 2 steps. Take 8 steps. Take 8 steps. Take 6 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 24}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 6 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 24 actual_solution 24



ID: 337
{'Instructions': 'Take 8 steps. Take 3 steps. Take 9 steps. Turn around. Take 1 step. Take 9 steps. Take 10 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 1 step, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 9 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 10 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 338
{'Instructions': 'Always face forward. Take 6 steps left. Take 9 steps backward. Take 3 steps forward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 3 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 8 actual_solution 8



ID: 339
{'Instructions': 'Turn right. Turn right. Take 8 steps. Take 7 steps. Turn right. Take 3 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 3 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 15 actual_solution 15



ID: 340
{'Instructions': 'Always face forward. Take 8 steps right. Take 7 steps forward. Take 8 steps left. Take 7 steps backward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 341
{'Instructions': 'Always face forward. Take 8 steps left. Take 6 steps right. Take 10 steps right. Take 2 steps left. Take 5 steps left. Take 1 step left.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 1 step left; the direction is to the left or 270 degrees.
Direction_time6 is 270,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 342
{'Instructions': 'Take 4 steps. Take 5 steps. Take 9 steps. Take 3 steps. Turn right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 21 actual_solution 21



ID: 343
{'Instructions': 'Take 1 step. Take 3 steps. Take 5 steps. Take 9 steps. Take 3 steps. Take 2 steps. Take 4 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 27}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 2 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 4 steps, so direction doesn't change again.
Direction_time7 is Direction_time6,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 27 actual_solution 27



ID: 344
{'Instructions': 'Always face forward. Take 5 steps forward. Take 9 steps left. Take 6 steps left. Take 6 steps right. Take 1 step right. Take 3 steps left. Take 4 steps left. Take 8 steps forward.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 3 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 4 steps left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 8 steps forward; the direction is forward or 0 degrees
Direction_time8 is 0,
Steps_time8 is 8,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 20 actual_solution 20



ID: 345
{'Instructions': 'Take 8 steps. Take 1 step. Turn left. Turn left. Take 9 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn left again, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 9 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 346
{'Instructions': 'Always face forward. Take 1 step right. Take 3 steps left. Take 2 steps right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 2 steps to the right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 347
{'Instructions': 'Always face forward. Take 10 steps left. Take 9 steps right. Take 10 steps right. Take 9 steps forward. Take 4 steps left. Take 4 steps forward.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 4 steps forward; the direction is forward or 0 degrees.
Direction_time6 is 0,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 14 actual_solution 14



ID: 348
{'Instructions': 'Always face forward. Take 10 steps forward. Take 9 steps backward. Take 1 step backward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 1 step backwards; the direction is backwards or 180 degrees
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 349
{'Instructions': 'Take 5 steps. Take 7 steps. Take 9 steps. Take 9 steps. Take 1 step. Turn right.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 31}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 31 actual_solution 31



ID: 350
{'Instructions': 'Take 4 steps. Turn around. Take 4 steps. Turn around.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 4 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 351
{'Instructions': 'Take 8 steps. Turn left. Turn left. Take 8 steps. Turn left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 8 steps, so direction doesn't change relative to the previous direction and the number of steps is 8.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 352
{'Instructions': 'Always face forward. Take 7 steps backward. Take 6 steps forward. Take 6 steps backward. Take 7 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps forwards; the direction is forwards or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 353
{'Instructions': 'Always face forward. Take 8 steps backward. Take 1 step forward. Take 4 steps right. Take 10 steps forward. Take 1 step left. Take 3 steps left. Take 9 steps left. Take 5 steps right.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 3 steps left; the direction is 270 degrees
Direction_time6 is 270,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 9 steps left; the direction is 270 degrees
Direction_time7 is 270,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 5 steps right; the direction is to the right or 90 degrees
Direction_time8 is 90,
Steps_time8 is 5,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 5 actual_solution 5



ID: 354
{'Instructions': 'Always face forward. Take 5 steps left. Take 7 steps forward. Take 2 steps backward. Take 2 steps right. Take 4 steps left. Take 5 steps backward. Take 7 steps right.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps right, direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps left, thus the direction at time 5 is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 7 steps right; the direction is to the right or 90 degrees
Direction_time7 is 90,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 355
{'Instructions': 'Always face forward. Take 10 steps forward. Take 1 step forward. Take 8 steps backward. Take 3 steps backward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 3 steps backwards; the direction is backwards or 180 degrees
Direction_time4 is 180,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 356
{'Instructions': 'Always face forward. Take 1 step forward. Take 10 steps forward. Take 7 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 7 steps backward; the direction is backward or 180 degrees
Direction_time3 is 180,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 4 actual_solution 4



ID: 357
{'Instructions': 'Turn right. Take 6 steps. Take 1 step. Take 1 step. Turn around. Turn right. Take 4 steps. Take 4 steps. Take 3 steps.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 4 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 4 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 3 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 3,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 14 actual_solution 14



ID: 358
{'Instructions': 'Take 4 steps. Take 3 steps. Turn right. Take 3 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 3 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 8 actual_solution 8



ID: 359
{'Instructions': 'Turn around. Turn around. Take 7 steps. Take 6 steps. Take 5 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn around again. So our direction changes by 180 degrees again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 5 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 18 actual_solution 18



ID: 360
{'Instructions': 'Always face forward. Take 7 steps left. Take 8 steps right. Take 10 steps backward. Take 4 steps left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps left; the direction is to the left or 270 degrees
Direction_time4 is 270,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 10 actual_solution 10



ID: 361
{'Instructions': 'Turn left. Take 6 steps. Take 3 steps. Turn around. Turn left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 9 actual_solution 9



ID: 362
{'Instructions': 'Always face forward. Take 8 steps left. Take 8 steps left. Take 4 steps right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps left again; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 12 actual_solution 12



ID: 363
{'Instructions': 'Turn left. Take 5 steps. Take 1 step. Turn around. Turn around. Turn around. Take 6 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around again, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn around again, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 6 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 364
{'Instructions': 'Take 7 steps. Take 4 steps. Turn left. Turn around.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 11 actual_solution 11



ID: 365
{'Instructions': 'Take 3 steps. Take 6 steps. Take 8 steps. Take 5 steps. Take 6 steps. Take 2 steps. Take 1 step. Take 2 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 33}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 2 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 1 step, so direction doesn't change again.
Direction_time7 is Direction_time6,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 2 steps, so direction doesn't change again.
Direction_time8 is Direction_time7,
Steps_time8 is 2,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 33 actual_solution 33



ID: 366
{'Instructions': 'Take 6 steps. Take 4 steps. Turn around. Take 3 steps. Take 7 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 3 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 7 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 367
{'Instructions': 'Always face forward. Take 1 step forward. Take 5 steps backward. Take 4 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 368
{'Instructions': 'Always face forward. Take 7 steps left. Take 8 steps right. Take 1 step left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 1 step left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 369
{'Instructions': 'Take 6 steps. Take 7 steps. Take 10 steps. Take 6 steps. Turn around. Take 8 steps. Take 3 steps. Take 10 steps. Take 8 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 8 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 3 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 10 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 10,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 8 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 8,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 370
{'Instructions': 'Always face forward. Take 10 steps right. Take 3 steps left.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 10.
Direction_time1 is 90,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 3 steps left; the direction is to the left or 270 degrees
Direction_time2 is 270,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 7 actual_solution 7



ID: 371
{'Instructions': 'Take 7 steps. Take 4 steps. Take 3 steps. Take 10 steps. Turn left. Turn around.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 24}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 24 actual_solution 24



ID: 372
{'Instructions': 'Always face forward. Take 6 steps backward. Take 6 steps forward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Then take 6 steps forward; the direction is forward or 0 degrees
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 373
{'Instructions': 'Take 10 steps. Turn left. Turn around. Take 9 steps. Take 8 steps. Turn right. Turn around. Take 8 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 25}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 9 steps, so direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps, so direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 8 steps; the direction doesn't change relative to the previous direction
Direction_time8 is Direction_time7,
Steps_time8 is 8,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 25 actual_solution 25



ID: 374
{'Instructions': 'Take 3 steps. Take 10 steps. Take 4 steps. Take 1 step.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 1 step, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 18 actual_solution 18



ID: 375
{'Instructions': 'Always face forward. Take 4 steps forward. Take 4 steps backward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 376
{'Instructions': 'Take 6 steps. Take 1 step. Turn around. Take 7 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 7 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 377
{'Instructions': 'Always face forward. Take 4 steps right. Take 4 steps left.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 4 steps to the left; the direction is to the left or 270 degrees
Direction_time2 is 270,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 378
{'Instructions': 'Take 6 steps. Take 2 steps. Take 2 steps. Turn left. Take 5 steps. Take 8 steps. Turn around.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 5 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 8 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 16 actual_solution 16



ID: 379
{'Instructions': 'Always face forward. Take 6 steps left. Take 9 steps forward. Take 6 steps right. Take 9 steps backward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 9 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 380
{'Instructions': 'Turn right. Take 1 step. Take 9 steps. Take 5 steps. Take 10 steps. Take 4 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 29}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 4 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 19 actual_solution 29



ID: 380
{'Instructions': 'Turn right. Take 1 step. Take 9 steps. Take 5 steps. Take 10 steps. Take 4 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 29}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 4 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 19 actual_solution 29



ID: 381
{'Instructions': 'Always face forward. Take 5 steps right. Take 9 steps right. Take 7 steps forward. Take 4 steps backward. Take 9 steps forward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 9 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 18 actual_solution 18



ID: 382
{'Instructions': 'Turn around. Turn left. Take 1 step. Take 2 steps. Turn around. Turn around. Turn around. Take 3 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 3 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 3,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 383
{'Instructions': 'Take 9 steps. Turn left. Take 10 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Lastly take 10 steps; the direction doesn't change again
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 13 actual_solution 13



ID: 384
{'Instructions': 'Take 6 steps. Turn around. Take 6 steps. Turn around.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 6 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 385
{'Instructions': 'Always face forward. Take 10 steps right. Take 3 steps forward. Take 8 steps right. Take 2 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 20 actual_solution 20



ID: 386
{'Instructions': 'Always face forward. Take 2 steps forward. Take 7 steps right. Take 2 steps backward. Take 2 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 2 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 9 actual_solution 9



ID: 387
{'Instructions': 'Take 4 steps. Take 3 steps. Turn right. Turn left. Turn right. Turn right. Take 7 steps. Turn around.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to take 7 steps, so direction doesn't change.
Direction_time7 is Direction_time6,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time8 is (Direction_time7 + 180) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 388
{'Instructions': 'Take 10 steps. Take 8 steps. Turn left. Take 3 steps. Take 1 step. Take 6 steps. Take 7 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 25}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 3 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 6 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 7 steps, so direction doesn't change again.
Direction_time7 is Direction_time6,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 25 actual_solution 25



ID: 389
{'Instructions': 'Take 2 steps. Take 1 step. Take 1 step. Take 2 steps. Turn around. Take 1 step. Take 5 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 5 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 390
{'Instructions': 'Always face forward. Take 5 steps left. Take 4 steps backward. Take 5 steps right. Take 8 steps right. Take 10 steps left. Take 10 steps right. Take 8 steps left. Take 4 steps forward.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps left; the direction is left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps left; the direction is left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 10 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 8 steps left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 4 steps forward; the direction is forward or 0 degrees
Direction_time8 is 0,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 391
{'Instructions': 'Turn around. Turn right. Turn around. Turn right. Take 5 steps. Turn around. Take 5 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Turn around. So our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Turn around. So our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 5 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 392
{'Instructions': 'Always face forward. Take 3 steps right. Take 9 steps right. Take 2 steps forward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 3.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps right; the direction is to the right again, or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Last instruction is to take 2 steps forward, thus the direction at time 3 is forward which is 0 degrees.
Direction_time3 is 0,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 12 actual_solution 12



ID: 393
{'Instructions': 'Always face forward. Take 7 steps forward. Take 7 steps backward. Take 10 steps backward. Take 10 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backwards, thus the direction at time 3 is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 10 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 394
{'Instructions': 'Always face forward. Take 1 step left. Take 9 steps backward. Take 7 steps backward. Take 1 step forward. Take 9 steps backward. Take 10 steps backward. Take 8 steps backward. Take 6 steps left.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 43}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step left; the direction is left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time7 is 180,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 6 steps left; the direction is to the left or 270 degrees
Direction_time8 is 270,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 43 actual_solution 43



ID: 395
{'Instructions': 'Take 5 steps. Turn around. Take 5 steps. Turn around.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 5 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 396
{'Instructions': 'Take 1 step. Turn around. Take 2 steps. Turn left. Take 1 step. Take 3 steps. Turn left. Take 1 step.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 1 step, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 3 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 1 step; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 4 actual_solution 4



ID: 397
{'Instructions': 'Always face forward. Take 10 steps forward. Take 10 steps backward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 398
{'Instructions': 'Turn left. Turn around. Take 8 steps. Take 4 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Second instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 12 actual_solution 12



ID: 399
{'Instructions': 'Take 4 steps. Take 2 steps. Turn around. Take 6 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 6 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 400
{'Instructions': 'Turn right. Take 9 steps. Turn around. Take 9 steps. Turn right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 9 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 401
{'Instructions': 'Take 6 steps. Take 8 steps. Take 6 steps. Turn left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 20 actual_solution 20



ID: 402
{'Instructions': 'Turn around. Turn left. Take 5 steps. Take 5 steps. Take 1 step. Turn left. Take 6 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 6 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 13 actual_solution 13



ID: 403
{'Instructions': 'Always face forward. Take 6 steps backward. Take 4 steps forward. Take 2 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 2 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 404
{'Instructions': 'Take 8 steps. Take 2 steps. Turn right. Turn right. Take 10 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 10 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 405
{'Instructions': 'Always face forward. Take 10 steps left. Take 6 steps forward.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 6 steps forward; the direction is forward or 0 degrees
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 12 actual_solution 12



ID: 406
{'Instructions': 'Take 1 step. Take 5 steps. Take 1 step. Turn left. Turn left. Take 9 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn left again, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 9 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 2 actual_solution 2



ID: 407
{'Instructions': 'Take 6 steps. Take 5 steps. Take 6 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 17 actual_solution 17



ID: 408
{'Instructions': 'Turn left. Take 10 steps. Take 1 step.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 1 step; the direction doesn't change again
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 11 actual_solution 11



ID: 409
{'Instructions': 'Take 4 steps. Turn right. Take 3 steps. Take 8 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 3 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 8 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 12 actual_solution 12



ID: 410
{'Instructions': 'Always face forward. Take 7 steps backward. Take 10 steps right. Take 4 steps forward. Take 1 step left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 1 step left; the direction is to the left or 270 degrees
Direction_time4 is 270,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 9 actual_solution 9



ID: 411
{'Instructions': 'Always face forward. Take 5 steps backward. Take 5 steps forward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 412
{'Instructions': 'Take 7 steps. Take 3 steps. Take 2 steps. Take 3 steps. Take 9 steps. Turn around. Take 10 steps. Take 4 steps. Take 10 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 9 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%sixth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 10 steps, so direction doesn't change.
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 4 steps, so direction doesn't change.
Direction_time8 is Direction_time7,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 10 steps, so direction doesn't change.
Direction_time9 is Direction_time8,
Steps_time9 is 10,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 413
{'Instructions': 'Turn left. Turn right. Take 7 steps. Turn around. Take 7 steps. Turn right. Turn left. Turn right.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 7 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Turn right, so our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Turn left, so our direction changes by -90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly turn right, so our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time8 is (Direction_time7 + 90) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 414
{'Instructions': 'Always face forward. Take 3 steps right. Take 2 steps left. Take 1 step left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 3.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 1 step left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 415
{'Instructions': 'Always face forward. Take 1 step right. Take 9 steps left. Take 9 steps right. Take 1 step backward. Take 3 steps right. Take 6 steps backward.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 8 actual_solution 8



ID: 416
{'Instructions': 'Always face forward. Take 6 steps left. Take 5 steps right. Take 1 step right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 1 step to the right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 417
{'Instructions': 'Always face forward. Take 10 steps left. Take 10 steps right.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 10 steps right; the direction is to the right or 90 degrees
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 418
{'Instructions': 'Turn around. Take 2 steps. Take 1 step. Take 10 steps. Turn left. Take 9 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 9 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 16 actual_solution 16



ID: 419
{'Instructions': 'Take 8 steps. Take 9 steps. Turn left. Take 3 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 3 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 17 actual_solution 17



ID: 420
{'Instructions': 'Take 7 steps. Turn around. Take 10 steps. Take 2 steps. Turn around. Take 5 steps. Turn left.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 10 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 5 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 421
{'Instructions': 'Always face forward. Take 5 steps backward. Take 2 steps left. Take 5 steps right. Take 3 steps left. Take 5 steps backward. Take 10 steps forward.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps right, thus the direction at time 3 is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Then take 5 steps backward; the direction is backwards or 180 degrees
Direction_time5 is 180,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 10 steps forward; the direction is forward or 0 degrees
Direction_time6 is 0,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 422
{'Instructions': 'Always face forward. Take 1 step right. Take 9 steps forward. Take 10 steps backward. Take 5 steps right. Take 4 steps backward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps right, direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 4 steps backwards; the direction is backwards or 180 degrees
Direction_time5 is 180,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 8 actual_solution 8



ID: 423
{'Instructions': 'Take 8 steps. Take 5 steps. Turn right. Take 4 steps. Take 4 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 4 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 4 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 15 actual_solution 15



ID: 424
{'Instructions': 'Take 3 steps. Take 6 steps. Turn around. Take 9 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 9 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 425
{'Instructions': 'Always face forward. Take 4 steps forward. Take 8 steps backward. Take 4 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 426
{'Instructions': 'Always face forward. Take 3 steps right. Take 5 steps right. Take 2 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 3.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps right; the direction is to the right again, or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Last instruction is to take 2 steps backwards, thus the direction at time 3 is backwards which is 180 degrees.
Direction_time3 is 180,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 8 actual_solution 8



ID: 427
{'Instructions': 'Always face forward. Take 6 steps backward. Take 7 steps left. Take 4 steps backward. Take 8 steps backward. Take 3 steps left.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps backward; the direction is backward or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 3 steps left; the direction is to the left or 270 degrees
Direction_time5 is 270,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 21 actual_solution 21



ID: 428
{'Instructions': 'Turn around. Take 5 steps. Take 7 steps. Take 4 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 16 actual_solution 16



ID: 429
{'Instructions': 'Take 4 steps. Turn around. Turn around. Turn around. Take 4 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around again, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn around again, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 4 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 430
{'Instructions': 'Take 9 steps. Turn around. Take 8 steps. Take 1 step.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 8 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 1 step, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 431
{'Instructions': 'Turn left. Take 3 steps. Take 5 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 5 steps; the direction doesn't change again
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 8 actual_solution 8



ID: 432
{'Instructions': 'Take 1 step. Take 8 steps. Turn around. Take 9 steps. Turn left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 9 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 433
{'Instructions': 'Turn around. Take 4 steps. Take 3 steps. Turn left. Turn right. Turn around. Take 7 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 7 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 434
{'Instructions': 'Always face forward. Take 7 steps right. Take 7 steps backward. Take 3 steps left. Take 8 steps backward. Take 6 steps backward. Take 10 steps right.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 25}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 10 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 25 actual_solution 25



ID: 435
{'Instructions': 'Always face forward. Take 5 steps right. Take 8 steps backward. Take 1 step right. Take 7 steps backward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step to the right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 16 actual_solution 16



ID: 436
{'Instructions': 'Always face forward. Take 10 steps forward. Take 2 steps left. Take 2 steps right. Take 10 steps backward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 10 steps backward; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 437
{'Instructions': 'Take 5 steps. Turn around. Take 4 steps. Take 1 step. Turn left. Turn around. Turn left.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 4 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 438
{'Instructions': 'Take 8 steps. Take 1 step. Take 3 steps. Turn around. Take 10 steps. Take 1 step. Take 1 step.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 10 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 1 step; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 439
{'Instructions': 'Always face forward. Take 5 steps left. Take 4 steps left. Take 1 step left. Take 2 steps left. Take 2 steps right. Take 3 steps left. Take 5 steps forward. Take 3 steps backward.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 3 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 5 steps forward; the direction is forward or 0 degrees
Direction_time7 is 0,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 3 steps backward; the direction is backward or 180 degrees
Direction_time8 is 180,
Steps_time8 is 3,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 13 actual_solution 13



ID: 440
{'Instructions': 'Always face forward. Take 4 steps right. Take 6 steps backward. Take 5 steps left. Take 3 steps forward. Take 3 steps left. Take 1 step right. Take 3 steps forward. Take 9 steps right. Take 6 steps left.', 'Difficulty': 10, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 3 steps forward; the direction is forward or 0 degrees
Direction_time7 is 0,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 9 steps right; the direction is to the right or 90 degrees
Direction_time8 is 90,
Steps_time8 is 9,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 6 steps left; the direction is to the left or 270 degrees
Direction_time9 is 270,
Steps_time9 is 6,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 441
{'Instructions': 'Turn left. Take 6 steps. Turn left. Turn right. Turn around. Take 6 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Turn right. So our direction changes by +90 relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 6 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 442
{'Instructions': 'Take 1 step. Take 8 steps. Turn around. Take 9 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 9 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 443
{'Instructions': 'Always face forward. Take 5 steps left. Take 5 steps left. Take 10 steps right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps left again; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 10 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 444
{'Instructions': 'Take 7 steps. Turn around. Take 4 steps. Take 3 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 4 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 3 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 445
{'Instructions': 'Take 2 steps. Turn right. Take 6 steps. Take 10 steps. Take 7 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 23}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 7 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 23 actual_solution 23



ID: 446
{'Instructions': 'Always face forward. Take 5 steps right. Take 5 steps left.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 5.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 447
{'Instructions': 'Always face forward. Take 5 steps left. Take 7 steps left. Take 2 steps left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 2 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 14 actual_solution 14



ID: 448
{'Instructions': 'Always face forward. Take 10 steps backward. Take 8 steps backward. Take 10 steps forward. Take 7 steps backward. Take 1 step forward. Take 7 steps right. Take 1 step left. Take 1 step right.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 7 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 1 step left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 1 step right; the direction is to the right or 90 degrees
Direction_time8 is 90,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 16 actual_solution 16



ID: 449
{'Instructions': 'Always face forward. Take 9 steps left. Take 3 steps backward. Take 7 steps right. Take 3 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 3}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 3 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 3 actual_solution 3



ID: 450
{'Instructions': 'Take 6 steps. Take 10 steps. Take 10 steps. Take 1 step. Take 7 steps. Take 5 steps. Turn around.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 39}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 5 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 39 actual_solution 39



ID: 451
{'Instructions': 'Always face forward. Take 9 steps forward. Take 1 step backward. Take 4 steps backward. Take 4 steps backward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps backwards; the direction is backwards or 180 degrees
Direction_time4 is 180,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 452
{'Instructions': 'Take 3 steps. Take 10 steps. Take 5 steps. Take 1 step. Turn right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 19}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 19 actual_solution 19



ID: 453
{'Instructions': 'Always face forward. Take 9 steps left. Take 2 steps forward. Take 1 step forward. Take 9 steps right. Take 3 steps backward.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 3 steps backward; the direction is backward or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 454
{'Instructions': 'Take 5 steps. Take 5 steps. Take 10 steps. Take 8 steps. Take 9 steps. Take 7 steps. Turn left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 44}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 9 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 7 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 44 actual_solution 44



ID: 455
{'Instructions': 'Always face forward. Take 6 steps right. Take 5 steps left. Take 1 step left. Take 3 steps left. Take 3 steps forward. Take 5 steps left. Take 2 steps left. Take 4 steps right. Take 10 steps left.', 'Difficulty': 10, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 5 steps to the left; the direction is to the left or 270 degrees.
Direction_time6 is 270,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps to the left; the direction is to the left or 270 degrees.
Direction_time7 is 270,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time8 is 90,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time9 is 270,
Steps_time9 is 10,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 16 actual_solution 16



ID: 456
{'Instructions': 'Take 2 steps. Take 3 steps. Turn around. Take 5 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 5 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 457
{'Instructions': 'Turn left. Take 5 steps. Take 7 steps. Take 10 steps. Take 10 steps. Take 1 step. Take 6 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 39}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 6 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 39 actual_solution 39



ID: 458
{'Instructions': 'Always face forward. Take 3 steps right. Take 2 steps right. Take 5 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps right; the direction is to the right again, or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 5 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 459
{'Instructions': 'Always face forward. Take 2 steps backward. Take 8 steps forward. Take 10 steps forward. Take 7 steps left. Take 6 steps forward. Take 5 steps left. Take 5 steps left.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 28}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps forward, direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 5 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 5 steps left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 28 actual_solution 28



ID: 460
{'Instructions': 'Take 7 steps. Take 2 steps. Turn around. Take 9 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 9 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 461
{'Instructions': 'Always face forward. Take 9 steps forward. Take 8 steps backward. Take 1 step backward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 1 step backwards; the direction is backwards or 180 degrees
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 462
{'Instructions': 'Take 6 steps. Turn around. Take 8 steps. Take 2 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 8 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 2 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 4 actual_solution 4



ID: 463
{'Instructions': 'Take 3 steps. Take 1 step. Take 10 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 14 actual_solution 14



ID: 464
{'Instructions': 'Always face forward. Take 1 step forward. Take 10 steps forward. Take 6 steps backward. Take 7 steps backward. Take 1 step left. Take 10 steps right.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 10 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 9 actual_solution 9



ID: 465
{'Instructions': 'Always face forward. Take 6 steps forward. Take 6 steps backward. Take 4 steps right. Take 4 steps left. Take 3 steps forward. Take 7 steps forward. Take 10 steps backward.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps left, thus the direction at time 4 is left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 7 step forward; the direction is 0 degrees
Direction_time6 is 0,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 10 steps backward; the direction is backwards or 180 degrees
Direction_time7 is 180,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 466
{'Instructions': 'Always face forward. Take 3 steps forward. Take 2 steps backward. Take 5 steps backward. Take 4 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 467
{'Instructions': 'Always face forward. Take 6 steps left. Take 3 steps right. Take 4 steps right. Take 9 steps right. Take 10 steps left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 468
{'Instructions': 'Always face forward. Take 8 steps left. Take 5 steps right. Take 10 steps right. Take 7 steps left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 469
{'Instructions': 'Always face forward. Take 6 steps left. Take 7 steps forward. Take 8 steps left. Take 7 steps left. Take 6 steps forward. Take 1 step forward. Take 4 steps forward.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 28}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step forward; the direction is 0 degrees
Direction_time6 is 0,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 4 steps forward; the direction is 0 degrees
Direction_time7 is 0,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 28 actual_solution 28



ID: 470
{'Instructions': 'Take 2 steps. Take 4 steps. Turn around. Take 6 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 6 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 471
{'Instructions': 'Take 3 steps. Turn around. Take 3 steps. Turn right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 3 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 472
{'Instructions': 'Always face forward. Take 2 steps right. Take 4 steps right. Take 6 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 2.
Direction_time1 is 90,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps right; the direction is to the right again, or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 6 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 473
{'Instructions': 'Take 1 step. Turn around. Take 4 steps. Turn around. Take 3 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 4 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 3 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 474
{'Instructions': 'Always face forward. Take 8 steps left. Take 4 steps right. Take 9 steps forward. Take 4 steps left. Take 6 steps backward. Take 6 steps backward.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps left, direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps backwards, thus the direction at time 5 is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 6 steps backwards; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 9 actual_solution 9



ID: 475
{'Instructions': 'Take 2 steps. Take 1 step. Take 8 steps. Take 4 steps. Turn right. Turn right. Take 4 steps. Turn left. Turn around.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to take 4 steps, so direction doesn't change.
Direction_time7 is Direction_time6,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Eighth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time8 is (Direction_time7 + 270) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time9 is (Direction_time8 + 180) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 11 actual_solution 11



ID: 476
{'Instructions': 'Always face forward. Take 4 steps backward. Take 2 steps right. Take 2 steps backward. Take 2 steps backward. Take 1 step forward. Take 2 steps left. Take 4 steps forward. Take 6 steps backward. Take 9 steps forward.', 'Difficulty': 10, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps backward, thus the direction at time 3 is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Then take 1 step forward; the direction is 0 degrees
Direction_time5 is 0,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 2 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 4 steps forward; the direction is forward or 0 degrees
Direction_time7 is 0,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 6 steps backward; the direction is backward or 180 degrees
Direction_time8 is 180,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 9 steps forward; the direction is forward or 0 degrees
Direction_time9 is 0,
Steps_time9 is 9,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 477
{'Instructions': 'Always face forward. Take 6 steps right. Take 9 steps left. Take 5 steps left. Take 8 steps right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 478
{'Instructions': 'Always face forward. Take 4 steps backward. Take 8 steps backward. Take 4 steps forward. Take 10 steps right. Take 2 steps right. Take 3 steps left. Take 10 steps right. Take 3 steps forward.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps forward, direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 3 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 10 steps right; the direction is to the right or 90 degrees
Direction_time7 is 90,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 3 steps forward; the direction is forward or 0 degrees
Direction_time8 is 0,
Steps_time8 is 3,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 20 actual_solution 20



ID: 479
{'Instructions': 'Take 9 steps. Take 6 steps. Take 9 steps. Take 6 steps. Take 2 steps. Turn left. Take 6 steps. Turn around. Take 8 steps.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 32}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to take 6 steps, so direction doesn't change.
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Eighth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time8 is (Direction_time7 + 180) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Lastly take 8 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 8,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 32 actual_solution 32



ID: 480
{'Instructions': 'Take 8 steps. Turn around. Take 8 steps. Turn right. Turn left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 8 steps, so direction doesn't change relative to the previous direction and the number of steps is 8.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 481
{'Instructions': 'Always face forward. Take 9 steps forward. Take 7 steps left. Take 5 steps backward. Take 4 steps right. Take 3 steps right. Take 4 steps backward.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 4 steps backward; the direction is backwards or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 482
{'Instructions': 'Turn around. Take 10 steps. Turn right. Turn left. Take 9 steps. Turn around. Take 9 steps. Take 10 steps. Turn around.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Turn left. So our direction changes by -90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 9 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 10 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 10,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time9 is (Direction_time8 + 180) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 483
{'Instructions': 'Turn right. Take 5 steps. Take 3 steps. Turn around. Take 8 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 8 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 484
{'Instructions': 'Take 9 steps. Turn right. Turn right. Take 9 steps. Turn right. Turn left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn right again, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 9 steps, so direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 485
{'Instructions': 'Turn right. Take 2 steps. Take 8 steps. Turn around.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 10 actual_solution 10



ID: 486
{'Instructions': 'Always face forward. Take 9 steps forward. Take 6 steps backward. Take 3 steps backward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 3 steps backward; the direction is backwards or 180 degrees
Direction_time3 is 180,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 487
{'Instructions': 'Always face forward. Take 6 steps backward. Take 2 steps left. Take 1 step right. Take 8 steps forward. Take 7 steps forward. Take 10 steps backward. Take 6 steps right. Take 1 step forward. Take 5 steps left.', 'Difficulty': 10, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 10 steps backward; the direction is backward or 180 degrees
Direction_time6 is 180,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 6 steps right; the direction is to the right or 90 degrees
Direction_time7 is 90,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 1 step forward; the direction is forward or 0 degrees
Direction_time8 is 0,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 5 steps left; the direction is to the left or 270 degrees
Direction_time9 is 270,
Steps_time9 is 5,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 488
{'Instructions': 'Always face forward. Take 2 steps forward. Take 2 steps backward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 489
{'Instructions': 'Take 10 steps. Turn around. Take 1 step. Take 9 steps. Turn around.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps; the direction doesn't change
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 490
{'Instructions': 'Take 8 steps. Take 8 steps. Take 7 steps. Take 8 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 31}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 8 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 31 actual_solution 31



ID: 491
{'Instructions': 'Always face forward. Take 3 steps right. Take 3 steps right. Take 3 steps left. Take 1 step left. Take 8 steps left. Take 6 steps backward.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right; the direction is to the right which is 90 degrees.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps right; the direction is to the right again, or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step left, direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps left, direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 6 steps backwards, thus the direction at time 6 is backwards which is 180 degrees.
Direction_time6 is 180,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 8 actual_solution 8



ID: 492
{'Instructions': 'Always face forward. Take 5 steps forward. Take 2 steps backward. Take 3 steps right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 3 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 4 actual_solution 4



ID: 493
{'Instructions': 'Always face forward. Take 2 steps forward. Take 1 step right. Take 4 steps left. Take 8 steps left. Take 2 steps left.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps left; the direction is to the left or 270 degrees
Direction_time5 is 270,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 13 actual_solution 13



ID: 494
{'Instructions': 'Turn around. Take 2 steps. Take 8 steps. Turn around. Take 10 steps. Turn around.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 10 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 495
{'Instructions': 'Turn right. Take 8 steps. Turn around. Take 5 steps. Take 7 steps. Turn around. Take 4 steps. Turn left. Turn left.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 5 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps; the direction doesn't change
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 4 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time8 is (Direction_time7 + 270) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Lastly turn left again, so our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time9 is (Direction_time8 + 270) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 496
{'Instructions': 'Take 10 steps. Turn around. Turn left. Take 7 steps. Take 4 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 7 steps, so direction doesn't change relative to the previous direction and the number of steps is 7.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 4 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 15 actual_solution 15



ID: 497
{'Instructions': 'Always face forward. Take 3 steps right. Take 5 steps right. Take 8 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 3.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps right; the direction is to the right again, or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Last instruction is to take 8 steps to the left, thus the direction at time 3 is to the left which is 270 degrees.
Direction_time3 is 270,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 498
{'Instructions': 'Always face forward. Take 8 steps right. Take 10 steps right. Take 3 steps left. Take 3 steps right. Take 1 step left. Take 4 steps right.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time6 is 90,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 21 actual_solution 21



ID: 499
{'Instructions': 'Always face forward. Take 5 steps left. Take 8 steps backward. Take 6 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 6 steps backwards; the direction is backwards or 180 degrees
Direction_time3 is 180,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 15 actual_solution 15



ID: 500
{'Instructions': 'Always face forward. Take 9 steps backward. Take 5 steps right. Take 6 steps right. Take 2 steps forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 2 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 13 actual_solution 13



ID: 501
{'Instructions': 'Always face forward. Take 9 steps left. Take 5 steps right. Take 2 steps left. Take 2 steps right. Take 6 steps forward. Take 10 steps backward. Take 1 step forward. Take 6 steps left.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 10 steps backward; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 1 step forward; the direction is forward or 0 degrees
Direction_time7 is 0,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 6 steps left; the direction is to the left or 270 degrees
Direction_time8 is 270,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 10 actual_solution 10



ID: 502
{'Instructions': 'Always face forward. Take 1 step right. Take 1 step right. Take 5 steps backward. Take 5 steps forward. Take 2 steps left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step to the right again; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps to the left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 503
{'Instructions': 'Always face forward. Take 3 steps forward. Take 9 steps left. Take 1 step right. Take 9 steps left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 9 steps left; the direction is to the left or 270 degrees
Direction_time4 is 270,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 17 actual_solution 17



ID: 504
{'Instructions': 'Take 1 step. Take 5 steps. Turn around. Turn around. Turn around. Take 6 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 6 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 505
{'Instructions': 'Always face forward. Take 3 steps right. Take 2 steps right. Take 2 steps left. Take 3 steps left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 3 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 506
{'Instructions': 'Always face forward. Take 3 steps forward. Take 7 steps right. Take 7 steps forward. Take 4 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 15 actual_solution 15



ID: 507
{'Instructions': 'Turn left. Turn left. Take 5 steps. Turn left. Turn right. Take 3 steps. Take 2 steps. Turn around. Take 10 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 3 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Eighth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time8 is (Direction_time7 + 180) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Lastly take 10 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 10,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 508
{'Instructions': 'Take 6 steps. Take 8 steps. Take 7 steps. Turn around. Take 6 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 6 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 15 actual_solution 15



ID: 509
{'Instructions': 'Take 8 steps. Take 4 steps. Turn around. Turn left. Take 4 steps. Take 5 steps. Turn right. Take 1 step. Take 4 steps.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 4 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 5 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time8 is Direction_time7,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 4 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 4,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 11 actual_solution 11



ID: 510
{'Instructions': 'Always face forward. Take 4 steps forward. Take 2 steps forward. Take 1 step right. Take 4 steps backward. Take 2 steps backward. Take 1 step right. Take 2 steps left.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 2 steps left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 511
{'Instructions': 'Always face forward. Take 3 steps left. Take 3 steps right.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 3 steps right; the direction is to the right or 90 degrees
Direction_time2 is 90,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 512
{'Instructions': 'Take 10 steps. Turn right. Take 2 steps. Turn around. Turn around.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 2 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 10 actual_solution 10



ID: 513
{'Instructions': 'Always face forward. Take 6 steps right. Take 6 steps left.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 6 steps to the left; the direction is to the left or 270 degrees
Direction_time2 is 270,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 514
{'Instructions': 'Take 8 steps. Take 1 step. Take 8 steps. Turn right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 17 actual_solution 17



ID: 515
{'Instructions': 'Always face forward. Take 10 steps left. Take 7 steps right. Take 3 steps forward. Take 7 steps forward. Take 5 steps left. Take 6 steps backward. Take 9 steps left.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time7 is 270,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 17 actual_solution 17



ID: 516
{'Instructions': 'Take 6 steps. Take 10 steps. Turn around. Take 9 steps. Take 3 steps. Take 4 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 9 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 4 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 517
{'Instructions': 'Always face forward. Take 7 steps backward. Take 4 steps right. Take 7 steps forward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 7 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 4 actual_solution 4



ID: 518
{'Instructions': 'Take 10 steps. Turn around. Take 1 step. Take 9 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 9 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 519
{'Instructions': 'Take 7 steps. Take 10 steps. Turn around. Take 3 steps. Take 2 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 3 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 12 actual_solution 12



ID: 520
{'Instructions': 'Always face forward. Take 10 steps right. Take 7 steps backward. Take 3 steps left. Take 8 steps backward. Take 3 steps backward. Take 8 steps right.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 23}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 8 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 23 actual_solution 23



ID: 521
{'Instructions': 'Always face forward. Take 10 steps right. Take 6 steps left. Take 6 steps left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 6 steps to the left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 2 actual_solution 2



ID: 522
{'Instructions': 'Turn left. Take 9 steps. Take 4 steps. Take 10 steps. Turn around.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 23}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 23 actual_solution 23



ID: 523
{'Instructions': 'Always face forward. Take 10 steps left. Take 10 steps right. Take 7 steps backward. Take 7 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 524
{'Instructions': 'Always face forward. Take 2 steps left. Take 7 steps left. Take 4 steps left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps to the left, so the direction is to the left which is 270 degrees, and the number of steps is 2.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps left; the direction is to the left again, or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps, direction to the left again.
Direction_time3 is 270,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 13 actual_solution 13



ID: 525
{'Instructions': 'Always face forward. Take 8 steps left. Take 9 steps right. Take 1 step left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 1 step left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 526
{'Instructions': 'Turn left. Take 5 steps. Take 9 steps. Take 7 steps. Turn around. Take 1 step. Take 10 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 10 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 10 actual_solution 10



ID: 527
{'Instructions': 'Take 6 steps. Take 5 steps. Take 6 steps. Take 6 steps. Turn left. Take 9 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 25}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 9 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 25 actual_solution 25



ID: 528
{'Instructions': 'Take 9 steps. Take 6 steps. Take 7 steps. Turn around. Take 9 steps. Take 3 steps. Take 10 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 9 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 3 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 10 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 529
{'Instructions': 'Always face forward. Take 3 steps backward. Take 7 steps left. Take 2 steps forward. Take 8 steps right. Take 2 steps backward. Take 4 steps right. Take 3 steps forward. Take 5 steps left.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps backward; the direction is backward or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 4 steps right; the direction is to the right or 90 degrees.
Direction_time6 is 90,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time7 is 0,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 5 steps left; the direction is to the left or 270 degrees.
Direction_time8 is 270,
Steps_time8 is 5,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 530
{'Instructions': 'Take 3 steps. Turn right. Turn right. Take 1 step. Take 2 steps. Turn around.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn right again, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps; the direction doesn't change
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 531
{'Instructions': 'Always face forward. Take 7 steps forward. Take 3 steps backward. Take 4 steps backward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps backwards; the direction is backwards or 180 degrees
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 532
{'Instructions': 'Always face forward. Take 7 steps backward. Take 3 steps forward. Take 4 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 533
{'Instructions': 'Always face forward. Take 2 steps right. Take 9 steps left. Take 7 steps right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 2.
Direction_time1 is 90,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 7 steps to the right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 534
{'Instructions': 'Turn left. Take 7 steps. Turn right. Turn right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly turn right again, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 7 actual_solution 7



ID: 535
{'Instructions': 'Always face forward. Take 6 steps backward. Take 6 steps forward. Take 10 steps forward. Take 1 step backward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 1 step backward; the direction is backward or 180 degrees
Direction_time4 is 180,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 9 actual_solution 9



ID: 536
{'Instructions': 'Always face forward. Take 10 steps forward. Take 6 steps forward. Take 5 steps backward. Take 7 steps forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps forwards; the direction is forwards or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 18 actual_solution 18



ID: 537
{'Instructions': 'Always face forward. Take 5 steps left. Take 10 steps forward. Take 1 step forward. Take 10 steps backward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 10 steps backward; the direction is backward or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 5 actual_solution 5



ID: 538
{'Instructions': 'Always face forward. Take 9 steps right. Take 10 steps left. Take 10 steps backward. Take 3 steps backward. Take 5 steps backward. Take 8 steps forward.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 8 steps forward; the direction is forward or 0 degrees.
Direction_time6 is 0,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 10 actual_solution 10



ID: 539
{'Instructions': 'Turn left. Take 4 steps. Take 4 steps. Turn around. Take 8 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 8 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 540
{'Instructions': 'Always face forward. Take 6 steps forward. Take 10 steps left. Take 8 steps left. Take 2 steps backward. Take 4 steps backward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 4 steps backwards; the direction is backwards or 180 degrees
Direction_time5 is 180,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 18 actual_solution 18



ID: 541
{'Instructions': 'Take 1 step. Take 9 steps. Take 8 steps. Take 2 steps. Take 5 steps. Take 5 steps. Turn right. Take 9 steps. Take 6 steps.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 34}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 5 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Take 9 steps, so direction doesn't change.
Direction_time8 is Direction_time7,
Steps_time8 is 9,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 6 steps, so direction doesn't change.
Direction_time9 is Direction_time8,
Steps_time9 is 6,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 34 actual_solution 34



ID: 542
{'Instructions': 'Turn left. Take 3 steps. Take 1 step. Turn right. Turn right. Take 4 steps. Turn right.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Turn right again. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 4 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn right; the direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 543
{'Instructions': 'Turn around. Take 1 step. Turn left. Turn left. Take 7 steps. Turn left. Turn left. Turn left. Take 4 steps.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Turn left again. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Turn left again. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Turn left again. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time8 is (Direction_time7 + 270) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Lastly take 4 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 4,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 7 actual_solution 7



ID: 544
{'Instructions': 'Always face forward. Take 8 steps backward. Take 9 steps right. Take 2 steps backward. Take 7 steps forward. Take 4 steps forward. Take 6 steps backward. Take 5 steps backward. Take 5 steps right. Take 6 steps left.', 'Difficulty': 10, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps backward, thus the direction at time 3 is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Then take 4 steps forward; the direction is 0 degrees
Direction_time5 is 0,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 6 steps backward; the direction is backward or 180 degrees
Direction_time6 is 180,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 5 steps backward; the direction is backward or 180 degrees
Direction_time7 is 180,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 5 steps right; the direction is to the right or 90 degrees
Direction_time8 is 90,
Steps_time8 is 5,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 6 steps left; the direction is to the left or 270 degrees
Direction_time9 is 270,
Steps_time9 is 6,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 13 actual_solution 13



ID: 545
{'Instructions': 'Take 2 steps. Turn around. Take 10 steps. Take 2 steps. Turn left. Turn left. Take 10 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 10 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to take 2 steps, so direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 10 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 546
{'Instructions': 'Take 3 steps. Turn left. Turn left. Turn around. Take 5 steps. Turn around. Take 5 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 3}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to take 5 steps, so direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 5 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 3 actual_solution 3



ID: 547
{'Instructions': 'Take 3 steps. Take 10 steps. Take 1 step. Take 1 step. Take 2 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 17 actual_solution 17



ID: 548
{'Instructions': 'Always face forward. Take 2 steps backward. Take 3 steps backward. Take 1 step forward. Take 4 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 549
{'Instructions': 'Always face forward. Take 4 steps left. Take 9 steps forward.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 10 actual_solution 10



ID: 550
{'Instructions': 'Always face forward. Take 3 steps right. Take 7 steps right. Take 5 steps forward. Take 2 steps left. Take 4 steps forward. Take 3 steps left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 3.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps right; the direction is to the right again, or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps left, direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 3 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 10 actual_solution 10



ID: 551
{'Instructions': 'Always face forward. Take 5 steps right. Take 8 steps backward. Take 5 steps left. Take 1 step backward. Take 8 steps backward. Take 5 steps right.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 5 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 18 actual_solution 18



ID: 552
{'Instructions': 'Take 9 steps. Take 2 steps. Turn left.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 11 actual_solution 11



ID: 553
{'Instructions': 'Take 1 step. Take 5 steps. Take 1 step. Take 6 steps. Turn left. Take 7 steps. Take 2 steps. Take 4 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 7 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 4 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 18 actual_solution 18



ID: 554
{'Instructions': 'Take 10 steps. Turn around. Take 4 steps. Take 6 steps. Turn around.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 4 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 555
{'Instructions': 'Always face forward. Take 8 steps backward. Take 2 steps backward. Take 10 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps backward; the direction is backward or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 10 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 556
{'Instructions': 'Turn left. Take 6 steps. Turn right. Turn right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly turn right again, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 6 actual_solution 6



ID: 557
{'Instructions': 'Take 7 steps. Take 9 steps. Turn around. Turn right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 16 actual_solution 16



ID: 558
{'Instructions': 'Always face forward. Take 2 steps backward. Take 9 steps right. Take 5 steps forward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 5 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 9 actual_solution 9



ID: 559
{'Instructions': 'Always face forward. Take 4 steps backward. Take 4 steps left.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 4 steps left; the direction is to the left or 270 degrees
Direction_time2 is 270,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 6 actual_solution 6



ID: 560
{'Instructions': 'Take 10 steps. Turn left. Turn left. Take 10 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 10 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 561
{'Instructions': 'Always face forward. Take 3 steps backward. Take 7 steps left. Take 10 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 10 steps backward; the direction is backward or 180 degrees
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 15 actual_solution 15



ID: 562
{'Instructions': 'Always face forward. Take 10 steps forward. Take 3 steps backward.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 7 actual_solution 7



ID: 563
{'Instructions': 'Take 9 steps. Take 10 steps. Turn right. Turn around. Take 2 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 19}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 2 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 19 actual_solution 19



ID: 564
{'Instructions': 'Always face forward. Take 6 steps backward. Take 4 steps left. Take 3 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 3 steps backward; the direction is backward or 180 degrees
Direction_time3 is 180,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 10 actual_solution 10



ID: 565
{'Instructions': 'Take 10 steps. Turn left. Turn left. Take 9 steps. Take 3 steps. Take 3 steps. Turn around. Take 5 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 5 steps; the direction doesn't change relative to the previous direction
Direction_time8 is Direction_time7,
Steps_time8 is 5,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 566
{'Instructions': 'Take 6 steps. Take 7 steps. Turn right. Take 3 steps. Turn right. Turn right. Take 4 steps. Take 4 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 3 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 4 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 4 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 14 actual_solution 14



ID: 567
{'Instructions': 'Take 4 steps. Turn around. Take 2 steps. Take 2 steps. Turn left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 568
{'Instructions': 'Take 9 steps. Take 3 steps. Take 2 steps. Turn around.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 14 actual_solution 14



ID: 569
{'Instructions': 'Take 8 steps. Turn left. Take 9 steps. Take 7 steps. Turn around.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 18 actual_solution 18



ID: 570
{'Instructions': 'Take 7 steps. Take 1 step. Turn left. Turn left. Take 8 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 8 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 571
{'Instructions': 'Turn left. Turn around. Take 4 steps. Take 5 steps. Turn left. Take 3 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Second instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 3 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 9 actual_solution 9



ID: 572
{'Instructions': 'Always face forward. Take 5 steps right. Take 10 steps left. Take 10 steps forward. Take 8 steps right. Take 6 steps left. Take 1 step backward. Take 10 steps backward. Take 6 steps left.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps to the left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 10 steps backward; the direction is backward or 180 degrees.
Direction_time7 is 180,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 6 steps to the left; the direction is to the left or 270 degrees.
Direction_time8 is 270,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 9 actual_solution 9



ID: 573
{'Instructions': 'Always face forward. Take 7 steps left. Take 9 steps backward. Take 5 steps right. Take 5 steps backward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 14 actual_solution 14



ID: 574
{'Instructions': 'Take 9 steps. Turn around. Take 9 steps. Turn around. Turn left. Turn right. Turn left.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 9 steps, so direction doesn't change relative to the previous direction and the number of steps is 9.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 575
{'Instructions': 'Take 3 steps. Turn around. Turn around. Take 3 steps. Turn around.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 3 steps, so direction doesn't change relative to the previous direction and the number of steps is 3.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 6 actual_solution 6



ID: 576
{'Instructions': 'Take 3 steps. Turn around. Take 5 steps. Turn right. Turn right. Take 1 step. Take 1 step.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 5 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to take 1 step, so direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 1 step, so direction doesn't change again.
Direction_time7 is Direction_time6,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 577
{'Instructions': 'Always face forward. Take 3 steps right. Take 10 steps left. Take 10 steps backward. Take 4 steps left. Take 1 step forward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 1 step forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 14 actual_solution 14



ID: 578
{'Instructions': 'Always face forward. Take 10 steps right. Take 8 steps backward. Take 1 step backward. Take 8 steps backward. Take 8 steps forward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 8 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 13 actual_solution 13



ID: 579
{'Instructions': 'Take 7 steps. Turn around. Turn around. Turn around. Take 1 step. Take 6 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to take 1 step, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 6 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 580
{'Instructions': 'Take 6 steps. Take 6 steps. Turn around.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 12 actual_solution 12



ID: 581
{'Instructions': 'Take 1 step. Take 2 steps. Take 4 steps. Turn around. Take 7 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 7 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 582
{'Instructions': 'Always face forward. Take 1 step right. Take 2 steps forward. Take 2 steps right. Take 4 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 7 actual_solution 7



ID: 583
{'Instructions': 'Always face forward. Take 1 step right. Take 2 steps right. Take 2 steps right. Take 5 steps left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps to the left; the direction is to the left or 270 degrees
Direction_time4 is 270,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 584
{'Instructions': 'Always face forward. Take 7 steps forward. Take 4 steps backward. Take 4 steps backward. Take 5 steps forward. Take 7 steps forward. Take 10 steps backward. Take 1 step backward.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps backwards again, thus the direction at time 3 is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps forwards; the direction is forwards or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Then take 7 steps forward; the direction is 0 degrees
Direction_time5 is 0,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 10 steps backwards; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 1 step backwards; the direction is backwards or 180 degrees
Direction_time7 is 180,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 585
{'Instructions': 'Always face forward. Take 3 steps left. Take 7 steps left. Take 3 steps left. Take 3 steps right. Take 3 steps forward. Take 6 steps left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 6 steps to the left; the direction is to the left or 270 degrees.
Direction_time6 is 270,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 16 actual_solution 16



ID: 586
{'Instructions': 'Take 6 steps. Take 4 steps. Take 4 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 14 actual_solution 14



ID: 587
{'Instructions': 'Always face forward. Take 5 steps backward. Take 5 steps left. Take 4 steps left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 10 actual_solution 10



ID: 588
{'Instructions': 'Take 8 steps. Take 1 step. Turn around. Take 9 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 9 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 589
{'Instructions': 'Take 4 steps. Turn around. Take 3 steps. Take 1 step.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 3 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 1 step; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 590
{'Instructions': 'Take 5 steps. Take 2 steps. Take 3 steps. Turn left. Turn left. Take 10 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn left again, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 10 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 591
{'Instructions': 'Always face forward. Take 1 step left. Take 5 steps right. Take 4 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps to the left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 592
{'Instructions': 'Take 6 steps. Take 3 steps. Turn around. Take 2 steps. Take 4 steps. Take 3 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 2 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps; the direction doesn't change
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 3 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 593
{'Instructions': 'Always face forward. Take 7 steps left. Take 5 steps right. Take 8 steps right. Take 9 steps left. Take 2 steps left. Take 5 steps right.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 5 steps right; the direction is to the right or 90 degrees.
Direction_time6 is 90,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 594
{'Instructions': 'Take 1 step. Turn left. Take 10 steps. Take 5 steps. Take 8 steps. Turn around. Take 10 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 10 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 13 actual_solution 13



ID: 595
{'Instructions': 'Always face forward. Take 6 steps left. Take 9 steps backward. Take 3 steps forward. Take 1 step forward. Take 3 steps left. Take 5 steps forward. Take 8 steps left. Take 1 step right. Take 6 steps forward.', 'Difficulty': 10, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps forward, direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 5 steps forward; the direction is forward or 0 degrees
Direction_time6 is 0,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 8 steps left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 1 step right; the direction is to the right or 90 degrees
Direction_time8 is 90,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 6 steps forward; the direction is forward or 0 degrees
Direction_time9 is 0,
Steps_time9 is 6,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 17 actual_solution 17



ID: 596
{'Instructions': 'Always face forward. Take 3 steps right. Take 1 step left. Take 10 steps left. Take 1 step right. Take 7 steps right.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 3.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps to the left, so the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 597
{'Instructions': 'Take 9 steps. Turn right. Turn right. Take 9 steps. Turn around. Turn around.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 9 steps, so direction doesn't change relative to the previous direction and the number of steps is 9.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Last instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 598
{'Instructions': 'Take 3 steps. Turn around. Take 3 steps.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Lastly take 3 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 599
{'Instructions': 'Take 2 steps. Take 10 steps. Take 7 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 19}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 19 actual_solution 19



ID: 600
{'Instructions': 'Take 1 step. Take 10 steps. Take 4 steps. Take 1 step. Take 10 steps. Turn right. Turn around.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 26}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 26 actual_solution 26



ID: 601
{'Instructions': 'Always face forward. Take 4 steps right. Take 8 steps backward. Take 3 steps backward. Take 7 steps right. Take 5 steps left. Take 4 steps backward. Take 7 steps backward.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 23}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps backwards, direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 4 steps backward; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 7 steps backward; the direction is backwards or 180 degrees
Direction_time7 is 180,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 23 actual_solution 23



ID: 602
{'Instructions': 'Always face forward. Take 1 step backward. Take 1 step forward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 1 step forward; the direction is forward or 0 degrees
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 603
{'Instructions': 'Always face forward. Take 1 step left. Take 3 steps backward. Take 3 steps forward. Take 1 step left. Take 2 steps right.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 604
{'Instructions': 'Always face forward. Take 3 steps backward. Take 5 steps backward. Take 3 steps backward. Take 9 steps forward. Take 9 steps right.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps backward, direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 9 steps right; the direction is to the right or 90 degrees
Direction_time5 is 90,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 9 actual_solution 9



ID: 605
{'Instructions': 'Always face forward. Take 8 steps right. Take 1 step forward. Take 1 step forward. Take 2 steps right. Take 10 steps left. Take 2 steps backward.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 606
{'Instructions': 'Always face forward. Take 2 steps backward. Take 5 steps backward. Take 5 steps right. Take 9 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 9 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 16 actual_solution 16



ID: 607
{'Instructions': 'Always face forward. Take 4 steps left. Take 4 steps right.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 4 steps right; the direction is to the right or 90 degrees
Direction_time2 is 90,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 608
{'Instructions': 'Take 10 steps. Turn left. Take 8 steps. Take 6 steps. Take 6 steps. Turn around. Turn left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 22}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 22 actual_solution 22



ID: 609
{'Instructions': 'Turn left. Turn left. Take 5 steps. Turn around. Take 5 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 5 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 610
{'Instructions': 'Always face forward. Take 10 steps forward. Take 8 steps right. Take 8 steps right. Take 9 steps left. Take 6 steps right. Take 2 steps forward. Take 9 steps backward.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time6 is 0,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 9 steps backward; the direction is backward or 180 degrees.
Direction_time7 is 180,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 13 actual_solution 13



ID: 611
{'Instructions': 'Take 8 steps. Take 4 steps. Take 4 steps. Take 2 steps. Take 7 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 25}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 7 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 25 actual_solution 25



ID: 612
{'Instructions': 'Always face forward. Take 8 steps left. Take 9 steps left. Take 8 steps right. Take 8 steps left. Take 3 steps right.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 14 actual_solution 14



ID: 613
{'Instructions': 'Take 3 steps. Take 2 steps. Take 2 steps. Take 2 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 9 actual_solution 9



ID: 614
{'Instructions': 'Take 5 steps. Take 5 steps. Take 7 steps. Take 10 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 27}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Last instruction is to take 10 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 27 actual_solution 27



ID: 615
{'Instructions': 'Turn around. Take 8 steps. Take 10 steps. Turn left. Turn left. Take 9 steps. Take 3 steps. Take 1 step. Take 5 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Turn left. So our direction changes by -90 relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time7 is Direction_time6,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time8 is Direction_time7,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 5 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 5,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 616
{'Instructions': 'Turn left. Take 9 steps. Take 9 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 18 actual_solution 18



ID: 617
{'Instructions': 'Take 10 steps. Take 6 steps. Turn around. Take 10 steps. Take 6 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 10 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 6 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 618
{'Instructions': 'Always face forward. Take 9 steps forward. Take 6 steps left. Take 1 step left. Take 3 steps left. Take 9 steps right.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 9 steps right; the direction is to the right or 90 degrees
Direction_time5 is 90,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 9 actual_solution 9



ID: 619
{'Instructions': 'Take 3 steps. Take 6 steps. Turn around. Take 9 steps. Turn left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 9 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 620
{'Instructions': 'Always face forward. Take 9 steps left. Take 9 steps right. Take 10 steps backward. Take 10 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 10 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 621
{'Instructions': 'Turn left. Turn right. Turn around. Take 9 steps. Turn right. Turn right.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 9 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly turn right, so our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 9 actual_solution 9



ID: 622
{'Instructions': 'Take 9 steps. Take 7 steps. Turn around.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 16 actual_solution 16



ID: 623
{'Instructions': 'Always face forward. Take 1 step right. Take 4 steps forward. Take 8 steps forward. Take 6 steps backward. Take 1 step left. Take 6 steps right.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 6 steps to the right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 8 actual_solution 8



ID: 624
{'Instructions': 'Always face forward. Take 6 steps forward. Take 4 steps backward. Take 2 steps backward. Take 2 steps right. Take 1 step forward. Take 4 steps right. Take 6 steps backward. Take 7 steps right.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps backwards, direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 4 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 6 steps backward; the direction is backwards or 180 degrees
Direction_time7 is 180,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 7 steps right; the direction is to the right or 90 degrees
Direction_time8 is 90,
Steps_time8 is 7,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 14 actual_solution 14



ID: 625
{'Instructions': 'Always face forward. Take 6 steps forward. Take 10 steps right. Take 8 steps right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 19}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 8 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 19 actual_solution 19



ID: 626
{'Instructions': 'Always face forward. Take 8 steps backward. Take 2 steps left. Take 4 steps left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 10 actual_solution 10



ID: 627
{'Instructions': 'Always face forward. Take 9 steps left. Take 4 steps forward. Take 2 steps forward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 2 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 11 actual_solution 11



ID: 628
{'Instructions': 'Turn right. Turn around. Take 2 steps. Take 6 steps. Take 4 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Second instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 4 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 12 actual_solution 12



ID: 629
{'Instructions': 'Turn around. Take 1 step. Take 2 steps. Take 9 steps. Take 7 steps. Turn left.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 19}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 19 actual_solution 19



ID: 630
{'Instructions': 'Always face forward. Take 9 steps right. Take 3 steps forward. Take 6 steps backward. Take 9 steps left. Take 2 steps backward. Take 5 steps forward.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps left, direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps backwards, thus the direction at time 5 is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 5 steps forward; the direction is forward or 0 degrees
Direction_time6 is 0,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 631
{'Instructions': 'Always face forward. Take 8 steps forward. Take 10 steps right. Take 6 steps backward. Take 5 steps backward. Take 8 steps left. Take 3 steps forward. Take 2 steps left.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 3 step forward; the direction is 0 degrees
Direction_time6 is 0,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 2 steps left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 632
{'Instructions': 'Always face forward. Take 9 steps backward. Take 9 steps left. Take 7 steps backward. Take 10 steps left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 25}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps backwards, thus the direction at time 3 is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 10 steps left; the direction is to the left or 270 degrees
Direction_time4 is 270,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 25 actual_solution 25



ID: 633
{'Instructions': 'Always face forward. Take 1 step backward. Take 4 steps forward. Take 1 step backward. Take 10 steps forward. Take 10 steps backward. Take 1 step backward. Take 1 step forward. Take 2 steps backward.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps backward; the direction is backward or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time7 is 0,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 2 steps backward; the direction is backward or 180 degrees.
Direction_time8 is 180,
Steps_time8 is 2,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 634
{'Instructions': 'Turn around. Take 2 steps. Take 4 steps. Turn around. Take 2 steps. Take 6 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 2 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 6 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 2 actual_solution 2



ID: 635
{'Instructions': 'Turn right. Turn right. Take 9 steps. Take 7 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps; the direction doesn't change
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 16 actual_solution 16



ID: 636
{'Instructions': 'Always face forward. Take 7 steps backward. Take 2 steps backward. Take 9 steps backward. Take 8 steps forward. Take 2 steps backward. Take 10 steps left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps forwards; the direction is forwards or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 10 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 16 actual_solution 16



ID: 637
{'Instructions': 'Take 9 steps. Take 1 step. Turn around. Take 5 steps. Take 5 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 5 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 5 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 638
{'Instructions': 'Take 3 steps. Take 5 steps. Turn left. Turn left. Take 7 steps. Take 1 step. Turn right.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%The third instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Turn left again. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 639
{'Instructions': 'Always face forward. Take 2 steps backward. Take 8 steps backward.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backward; the direction is backward or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 10 actual_solution 10



ID: 640
{'Instructions': 'Turn around. Take 4 steps. Turn around. Take 4 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 4 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 641
{'Instructions': 'Take 2 steps. Take 10 steps. Take 8 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 20 actual_solution 20



ID: 642
{'Instructions': 'Turn left. Take 10 steps. Take 5 steps. Turn around. Take 1 step. Take 4 steps. Take 9 steps. Take 1 step.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 4 steps; the direction doesn't change
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 9 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 1 step; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 643
{'Instructions': 'Take 7 steps. Take 8 steps. Turn right. Turn right. Take 1 step. Take 7 steps. Take 6 steps. Take 1 step.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 7 steps; the direction doesn't change
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 6 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 1 step; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 644
{'Instructions': 'Take 6 steps. Take 5 steps. Turn around. Take 1 step. Take 10 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 10 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 645
{'Instructions': 'Always face forward. Take 10 steps backward. Take 10 steps forward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Then take 10 steps forward; the direction is forward or 0 degrees
Direction_time2 is 0,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 646
{'Instructions': 'Take 4 steps. Take 4 steps. Turn around. Take 8 steps. Turn around.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 8 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 647
{'Instructions': 'Always face forward. Take 8 steps forward. Take 2 steps forward. Take 10 steps backward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 648
{'Instructions': 'Turn left. Turn left. Take 2 steps. Turn around. Take 8 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 8 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 6 actual_solution 6



ID: 649
{'Instructions': 'Always face forward. Take 7 steps backward. Take 1 step forward. Take 1 step backward. Take 5 steps forward. Take 6 steps backward. Take 8 steps forward.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 8 steps forward; the direction is forward or 0 degrees.
Direction_time6 is 0,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 650
{'Instructions': 'Turn left. Take 6 steps. Turn around. Take 4 steps. Take 2 steps. Turn left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 4 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps; the direction doesn't change
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 651
{'Instructions': 'Always face forward. Take 5 steps right. Take 1 step left. Take 9 steps left. Take 5 steps right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps to the right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 652
{'Instructions': 'Always face forward. Take 10 steps left. Take 10 steps forward. Take 8 steps right. Take 7 steps left. Take 3 steps forward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 3 steps forward; the direction is forward or 0 degrees
Direction_time5 is 0,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 16 actual_solution 16



ID: 653
{'Instructions': 'Turn around. Take 3 steps. Take 8 steps. Take 3 steps. Take 3 steps. Take 5 steps. Take 5 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 27}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 5 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 27 actual_solution 27



ID: 654
{'Instructions': 'Always face forward. Take 6 steps right. Take 1 step forward. Take 10 steps left. Take 8 steps forward. Take 9 steps backward. Take 4 steps right.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time6 is 90,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 655
{'Instructions': 'Always face forward. Take 1 step left. Take 4 steps backward. Take 8 steps forward. Take 6 steps backward. Take 10 steps right. Take 2 steps forward.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 2 steps forward; the direction is forward or 0 degrees.
Direction_time6 is 0,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 9 actual_solution 9



ID: 656
{'Instructions': 'Always face forward. Take 2 steps left. Take 4 steps backward. Take 7 steps left. Take 8 steps right. Take 5 steps forward. Take 1 step left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 1 step left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 2 actual_solution 2



ID: 657
{'Instructions': 'Turn left. Turn right. Take 6 steps. Turn left. Take 8 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 8 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 10 actual_solution 10



ID: 658
{'Instructions': 'Turn around. Take 10 steps. Take 5 steps. Take 1 step. Turn around. Take 10 steps. Take 1 step. Take 5 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 10 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 1 step; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 5 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 5,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 659
{'Instructions': 'Take 5 steps. Turn right. Take 4 steps. Take 8 steps. Take 10 steps. Take 7 steps. Take 10 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 39}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 7 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 10 steps, so direction doesn't change again.
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 39 actual_solution 39



ID: 660
{'Instructions': 'Turn right. Take 10 steps. Take 6 steps. Take 2 steps. Turn around. Take 4 steps. Take 2 steps. Take 3 steps. Take 9 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 4 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 3 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 3,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 9 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 9,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 661
{'Instructions': 'Take 2 steps. Turn around. Take 2 steps. Turn right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 2 steps, so direction doesn't change relative to the previous direction and the number of steps is 2.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 662
{'Instructions': 'Turn right. Take 10 steps. Turn around. Take 10 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 10 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 663
{'Instructions': 'Always face forward. Take 9 steps left. Take 7 steps forward. Take 9 steps right. Take 7 steps left. Take 7 steps backward. Take 8 steps right. Take 10 steps left. Take 1 step backward. Take 1 step forward.', 'Difficulty': 10, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 8 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 10 steps left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 1 step backwards; the direction is backwards or 180 degrees
Direction_time8 is 180,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 1 step forward; the direction is forward or 0 degrees
Direction_time9 is 0,
Steps_time9 is 1,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 9 actual_solution 9



ID: 664
{'Instructions': 'Turn left. Turn left. Take 10 steps. Take 1 step. Take 10 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 10 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 21 actual_solution 21



ID: 665
{'Instructions': 'Take 1 step. Take 2 steps. Take 3 steps. Turn around. Take 6 steps. Turn left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 6 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 666
{'Instructions': 'Always face forward. Take 7 steps right. Take 8 steps forward. Take 7 steps left. Take 5 steps backward. Take 4 steps forward. Take 7 steps backward.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 7 steps backwards; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 667
{'Instructions': 'Always face forward. Take 4 steps right. Take 3 steps right. Take 1 step right. Take 10 steps forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 10 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 13 actual_solution 13



ID: 668
{'Instructions': 'Turn left. Take 5 steps. Take 1 step. Take 10 steps. Take 2 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 18 actual_solution 18



ID: 669
{'Instructions': 'Take 2 steps. Take 5 steps. Take 10 steps. Take 2 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 19}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 2 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 19 actual_solution 19



ID: 670
{'Instructions': 'Always face forward. Take 1 step backward. Take 2 steps forward. Take 7 steps backward. Take 1 step backward. Take 7 steps forward.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps backward, direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step backward, thus the direction at time 4 is backward or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 7 steps forward; the direction is forward or 0 degrees
Direction_time5 is 0,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 671
{'Instructions': 'Take 10 steps. Turn around. Take 2 steps. Take 8 steps. Turn right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Then take 2 steps; the direction doesn't change relative to the previous direction
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps; the direction doesn't change
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 672
{'Instructions': 'Turn around. Take 2 steps. Turn right. Turn left. Take 6 steps. Turn around. Take 8 steps. Turn around.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Turn left. So our direction changes by -90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time7 is Direction_time6,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time8 is (Direction_time7 + 180) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 673
{'Instructions': 'Turn right. Take 3 steps. Take 5 steps. Turn around.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Last instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 8 actual_solution 8



ID: 674
{'Instructions': 'Always face forward. Take 3 steps left. Take 8 steps right. Take 5 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 5 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 675
{'Instructions': 'Always face forward. Take 4 steps right. Take 9 steps left. Take 7 steps backward. Take 7 steps forward. Take 3 steps right. Take 2 steps right.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps forwards; the direction is forwards or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps right; the direction is to the right or 90 degrees
Direction_time5 is 90,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 2 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 676
{'Instructions': 'Take 3 steps. Turn right. Take 3 steps. Take 2 steps. Take 10 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 10 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 15 actual_solution 15



ID: 677
{'Instructions': 'Take 10 steps. Take 7 steps. Turn around. Take 8 steps. Take 9 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 8 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 9 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 678
{'Instructions': 'Always face forward. Take 3 steps left. Take 10 steps right. Take 7 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 7 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 679
{'Instructions': 'Always face forward. Take 2 steps forward. Take 6 steps backward. Take 4 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 680
{'Instructions': 'Always face forward. Take 1 step left. Take 3 steps left. Take 5 steps left. Take 9 steps right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 9 steps to the right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 681
{'Instructions': 'Take 4 steps. Turn around. Take 4 steps. Take 9 steps. Turn around. Take 9 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 4 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 9 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 682
{'Instructions': 'Always face forward. Take 9 steps forward. Take 7 steps left. Take 10 steps backward. Take 6 steps forward. Take 3 steps right. Take 3 steps backward. Take 10 steps right. Take 1 step left. Take 6 steps left.', 'Difficulty': 10, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backwards, thus the direction at time 3 is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps forwards; the direction is forwards or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Then take 3 steps right; the direction is to the right or 90 degrees
Direction_time5 is 90,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 3 steps backward; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 10 steps right; the direction is to the right or 90 degrees
Direction_time7 is 90,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 1 step left; the direction is to the left or 270 degrees
Direction_time8 is 270,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 6 steps left; the direction is to the left or 270 degrees
Direction_time9 is 270,
Steps_time9 is 6,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 2 actual_solution 2



ID: 683
{'Instructions': 'Always face forward. Take 8 steps right. Take 4 steps right. Take 2 steps forward. Take 3 steps forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps right; the direction is to the right again, or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 3 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 13 actual_solution 13



ID: 684
{'Instructions': 'Take 2 steps. Take 1 step. Take 3 steps. Turn around. Take 6 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 6 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 685
{'Instructions': 'Take 2 steps. Take 9 steps. Turn around. Take 9 steps. Turn right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 9 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 2 actual_solution 2



ID: 686
{'Instructions': 'Turn left. Take 6 steps. Take 2 steps. Turn around. Take 1 step. Take 7 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 7 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 687
{'Instructions': 'Take 10 steps. Take 7 steps. Turn around. Take 9 steps. Take 2 steps. Take 7 steps. Turn around. Take 1 step. Turn left.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 9 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 7 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time8 is Direction_time7,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time9 is (Direction_time8 + 270) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 688
{'Instructions': 'Always face forward. Take 3 steps forward. Take 2 steps forward. Take 5 steps backward. Take 7 steps backward. Take 7 steps forward.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 7 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 689
{'Instructions': 'Always face forward. Take 10 steps left. Take 7 steps right. Take 4 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 5 actual_solution 5



ID: 690
{'Instructions': 'Turn around. Take 3 steps. Take 7 steps. Take 4 steps. Take 9 steps. Turn around. Take 9 steps. Take 9 steps. Take 5 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 9 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 9 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 9,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 5 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 5,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 691
{'Instructions': 'Take 3 steps. Turn right. Take 7 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Lastly take 7 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 8 actual_solution 8



ID: 692
{'Instructions': 'Always face forward. Take 8 steps backward. Take 7 steps backward. Take 1 step right. Take 7 steps right. Take 10 steps forward. Take 1 step right. Take 10 steps right. Take 1 step backward.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 10 steps right; the direction is to the right or 90 degrees
Direction_time7 is 90,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 1 step backward; the direction is backward or 180 degrees
Direction_time8 is 180,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 20 actual_solution 20



ID: 693
{'Instructions': 'Always face forward. Take 3 steps right. Take 3 steps left.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 3.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps to the left, so the direction is to the left which is 270 degrees, and the number of steps is 3.
Direction_time2 is 270,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 694
{'Instructions': 'Take 9 steps. Turn left. Turn left. Take 5 steps. Take 4 steps. Turn left. Turn left.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 5 steps, so direction doesn't change relative to the previous direction and the number of steps is 5.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to take 4 steps, so direction doesn't change relative to the previous direction and the number of steps is 4.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 695
{'Instructions': 'Always face forward. Take 6 steps left. Take 3 steps backward. Take 3 steps left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 3 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 9 actual_solution 9



ID: 696
{'Instructions': 'Always face forward. Take 9 steps right. Take 9 steps left.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 9 steps to the left; the direction is to the left or 270 degrees
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 697
{'Instructions': 'Always face forward. Take 9 steps left. Take 2 steps right. Take 7 steps right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 698
{'Instructions': 'Take 2 steps. Take 5 steps. Take 9 steps. Turn around. Take 6 steps. Take 10 steps. Turn around.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 6 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 10 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 699
{'Instructions': 'Always face forward. Take 7 steps left. Take 2 steps backward. Take 7 steps backward. Take 7 steps backward. Take 3 steps forward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 3 steps forward; the direction is forward or 0 degrees
Direction_time5 is 0,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 15 actual_solution 15



ID: 700
{'Instructions': 'Take 1 step. Take 1 step. Take 10 steps. Take 7 steps. Turn right. Take 5 steps. Take 7 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 22}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 5 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 7 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 22 actual_solution 22



ID: 701
{'Instructions': 'Always face forward. Take 8 steps forward. Take 10 steps left. Take 5 steps right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 5 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 9 actual_solution 9



ID: 702
{'Instructions': 'Always face forward. Take 6 steps forward. Take 6 steps backward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 703
{'Instructions': 'Turn left. Take 5 steps. Take 1 step. Take 3 steps. Turn right. Turn right. Take 9 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn right again, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 9 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 704
{'Instructions': 'Always face forward. Take 9 steps left. Take 10 steps forward. Take 9 steps right. Take 10 steps backward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 10 steps backward; the direction is backward or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 705
{'Instructions': 'Always face forward. Take 8 steps forward. Take 6 steps backward. Take 7 steps backward. Take 5 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 706
{'Instructions': 'Take 5 steps. Take 5 steps. Take 2 steps. Turn around. Take 10 steps. Take 2 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 10 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 2 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 707
{'Instructions': 'Take 5 steps. Take 5 steps. Take 2 steps. Turn around. Take 8 steps. Take 4 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 8 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 4 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 708
{'Instructions': 'Always face forward. Take 8 steps left. Take 2 steps right. Take 10 steps right. Take 4 steps left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps left; the direction is to the left or 270 degrees
Direction_time4 is 270,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 709
{'Instructions': 'Always face forward. Take 6 steps right. Take 1 step forward. Take 4 steps right. Take 4 steps left. Take 8 steps left. Take 2 steps forward. Take 9 steps forward. Take 3 steps left.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 2 steps forward; the direction is 0 degrees
Direction_time6 is 0,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 9 steps forward; the direction is 0 degrees
Direction_time7 is 0,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 3 steps left; the direction is to the left or 270 degrees
Direction_time8 is 270,
Steps_time8 is 3,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 13 actual_solution 13



ID: 710
{'Instructions': 'Take 5 steps. Take 8 steps. Take 2 steps. Turn right. Take 8 steps. Turn left. Take 6 steps. Take 6 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 28}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 8 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Take 6 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 6 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 28 actual_solution 28



ID: 711
{'Instructions': 'Always face forward. Take 9 steps left. Take 10 steps left. Take 3 steps left. Take 1 step left. Take 3 steps backward. Take 6 steps left. Take 3 steps forward. Take 4 steps right.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 25}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps left; the direction is left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step left, thus the direction at time 4 is left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 6 steps left; the direction is to the left or 270 degrees
Direction_time6 is 270,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 3 steps forward; the direction is forward or 0 degrees
Direction_time7 is 0,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 4 steps right; the direction is to the right or 90 degrees
Direction_time8 is 90,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 25 actual_solution 25



ID: 712
{'Instructions': 'Always face forward. Take 4 steps backward. Take 6 steps forward. Take 2 steps backward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 2 steps backward; the direction is backward or 180 degrees
Direction_time3 is 180,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 713
{'Instructions': 'Take 10 steps. Turn around. Take 6 steps. Take 3 steps. Turn right. Take 7 steps. Take 10 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 6 steps, so direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Take 7 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 10 steps, so direction doesn't change.
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 17 actual_solution 17



ID: 714
{'Instructions': 'Always face forward. Take 5 steps right. Take 4 steps backward.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 5.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Last instruction is to take 4 steps backwards, thus the direction at time 2 is backwards which is 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 6 actual_solution 6



ID: 715
{'Instructions': 'Take 7 steps. Turn right. Turn right. Take 8 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 1}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn right again, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 8 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 1 actual_solution 1



ID: 716
{'Instructions': 'Take 9 steps. Turn around. Take 6 steps. Turn right. Take 9 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 6 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 9 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 9 actual_solution 9



ID: 717
{'Instructions': 'Always face forward. Take 3 steps backward. Take 4 steps forward. Take 8 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 8 steps backward; the direction is backward or 180 degrees
Direction_time3 is 180,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 7 actual_solution 7



ID: 718
{'Instructions': 'Take 6 steps. Turn around. Turn around. Turn around. Take 6 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn around once more, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to take 6 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 719
{'Instructions': 'Always face forward. Take 5 steps backward. Take 8 steps forward. Take 7 steps forward. Take 5 steps backward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 5 actual_solution 5



ID: 720
{'Instructions': 'Always face forward. Take 3 steps backward. Take 5 steps backward. Take 7 steps forward. Take 1 step backward. Take 7 steps backward. Take 6 steps forward. Take 1 step forward. Take 9 steps forward. Take 7 steps backward.', 'Difficulty': 10, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps forward, direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 6 step forward; the direction is 0 degrees
Direction_time6 is 0,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 1 steps forward; the direction is 0 degrees
Direction_time7 is 0,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 9 steps forward; the direction is forward or 0 degrees
Direction_time8 is 0,
Steps_time8 is 9,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 7 steps backward; the direction is backward or 180 degrees
Direction_time9 is 180,
Steps_time9 is 7,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 721
{'Instructions': 'Take 3 steps. Take 3 steps. Turn right. Take 1 step. Take 2 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 7 actual_solution 7



ID: 722
{'Instructions': 'Take 5 steps. Take 2 steps. Turn left. Turn right. Take 8 steps. Take 1 step. Take 7 steps. Take 2 steps. Take 1 step.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 26}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to take 8 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 7 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 2 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 2,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 1 step; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 1,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 26 actual_solution 26



ID: 723
{'Instructions': 'Take 2 steps. Take 7 steps. Take 3 steps. Turn left. Turn left. Take 8 steps. Take 4 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to turn left again, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 8 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 4 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 724
{'Instructions': 'Turn left. Turn right. Take 4 steps. Take 1 step. Take 3 steps. Turn around. Take 8 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 8 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 725
{'Instructions': 'Always face forward. Take 8 steps right. Take 7 steps backward. Take 7 steps left. Take 7 steps forward. Take 5 steps right. Take 3 steps right. Take 9 steps left.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 3 steps to the right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 9 steps to the left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 726
{'Instructions': 'Always face forward. Take 5 steps backward. Take 10 steps backward. Take 3 steps left. Take 2 steps forward. Take 3 steps forward. Take 10 steps forward. Take 5 steps forward.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps backward; the direction is backward or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 10 steps forward; the direction is 0 degrees
Direction_time6 is 0,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 5 steps forward; the direction is 0 degrees
Direction_time7 is 0,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 6 actual_solution 6



ID: 727
{'Instructions': 'Take 9 steps. Turn right. Turn right. Take 9 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 9 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 728
{'Instructions': 'Take 7 steps. Take 1 step. Take 7 steps. Turn left. Take 5 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 5 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 16 actual_solution 16



ID: 729
{'Instructions': 'Always face forward. Take 10 steps forward. Take 8 steps left. Take 3 steps backward. Take 7 steps right. Take 2 steps forward. Take 4 steps forward. Take 10 steps forward.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 23}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 4 steps forward; the direction is 0 degrees
Direction_time6 is 0,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 10 steps forward; the direction is 0 degrees
Direction_time7 is 0,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 23 actual_solution 23



ID: 730
{'Instructions': 'Always face forward. Take 4 steps forward. Take 3 steps forward. Take 9 steps right. Take 4 steps backward. Take 6 steps right.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 6 steps right; the direction is to the right or 90 degrees
Direction_time5 is 90,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 15 actual_solution 15



ID: 731
{'Instructions': 'Always face forward. Take 7 steps left. Take 1 step left. Take 4 steps forward. Take 8 steps right. Take 4 steps backward.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 4 steps backward; the direction is backward or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 732
{'Instructions': 'Take 7 steps. Take 7 steps. Take 6 steps. Take 5 steps. Turn around. Take 6 steps. Take 9 steps. Take 4 steps. Take 6 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 6 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 9 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 4 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 6 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 6,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 733
{'Instructions': 'Always face forward. Take 8 steps right. Take 6 steps forward. Take 3 steps backward. Take 1 step left. Take 3 steps backward. Take 7 steps left.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 7 steps to the left; the direction is to the left or 270 degrees.
Direction_time6 is 270,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 734
{'Instructions': 'Take 9 steps. Take 3 steps. Turn left. Turn left. Turn around. Turn right. Take 6 steps. Turn around.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to take 6 steps, so direction doesn't change relative to the previous direction.
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time8 is (Direction_time7 + 180) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 13 actual_solution 13



ID: 735
{'Instructions': 'Always face forward. Take 5 steps forward. Take 7 steps left. Take 7 steps right. Take 5 steps backward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps backward; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 736
{'Instructions': 'Always face forward. Take 7 steps right. Take 7 steps left.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 737
{'Instructions': 'Turn left. Turn left. Take 7 steps. Turn right. Take 9 steps. Take 5 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 9 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 5 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 16 actual_solution 16



ID: 738
{'Instructions': 'Always face forward. Take 4 steps right. Take 4 steps left. Take 5 steps left. Take 7 steps right. Take 5 steps forward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 5 steps forward; the direction is forward or 0 degrees
Direction_time5 is 0,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 5 actual_solution 5



ID: 739
{'Instructions': 'Always face forward. Take 1 step forward. Take 10 steps left. Take 4 steps forward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 11 actual_solution 11



ID: 740
{'Instructions': 'Always face forward. Take 2 steps backward. Take 2 steps right. Take 2 steps forward. Take 6 steps left. Take 4 steps right.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 4 steps right; the direction is to the right or 90 degrees
Direction_time5 is 90,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 741
{'Instructions': 'Always face forward. Take 2 steps backward. Take 2 steps forward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 742
{'Instructions': 'Take 9 steps. Turn around. Take 2 steps. Take 6 steps. Take 2 steps. Take 3 steps. Turn right. Turn right. Take 4 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 3 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Eighth instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time8 is (Direction_time7 + 90) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Lastly take 4 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 4,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 743
{'Instructions': 'Take 3 steps. Take 4 steps. Turn around. Take 3 steps. Take 1 step. Take 3 steps. Turn right.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 3 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 3 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 744
{'Instructions': 'Take 9 steps. Turn left. Turn left. Take 9 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 9 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 745
{'Instructions': 'Take 10 steps. Turn around. Take 10 steps.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Lastly take 10 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 746
{'Instructions': 'Turn around. Turn left. Take 6 steps. Take 4 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 10 actual_solution 10



ID: 747
{'Instructions': 'Take 4 steps. Turn around. Take 4 steps. Turn around. Turn right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 4 steps, so direction doesn't change relative to the previous direction and the number of steps is 4.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 748
{'Instructions': 'Always face forward. Take 2 steps right. Take 2 steps right.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps right again; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 4 actual_solution 4



ID: 749
{'Instructions': 'Take 4 steps. Turn around. Take 4 steps. Turn right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 4 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 750
{'Instructions': 'Take 3 steps. Take 5 steps. Turn around. Take 6 steps. Take 2 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 6 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 751
{'Instructions': 'Turn right. Turn right. Take 7 steps. Turn right. Turn right. Take 7 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Turn right. So our direction changes by +90 again relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 7 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 752
{'Instructions': 'Always face forward. Take 5 steps forward. Take 7 steps backward. Take 10 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 10 steps backwards; the direction is backwards or 180 degrees
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 12 actual_solution 12



ID: 753
{'Instructions': 'Always face forward. Take 8 steps right. Take 9 steps right. Take 9 steps left. Take 8 steps left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 8.
Direction_time1 is 90,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps right; the direction is to the right again, or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps, direction to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Last instruction is to take 8 steps to the left, thus the direction at time 4 is to the left which is 270 degrees.
Direction_time4 is 270,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 754
{'Instructions': 'Take 4 steps. Take 9 steps. Turn left. Take 7 steps. Take 8 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 7 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 8 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 20 actual_solution 20



ID: 755
{'Instructions': 'Take 9 steps. Take 7 steps. Turn left. Take 1 step. Take 8 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 8 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 18 actual_solution 18



ID: 756
{'Instructions': 'Turn around. Turn around. Take 2 steps. Take 3 steps. Take 2 steps. Turn around. Take 6 steps. Take 1 step.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn around again. So our direction changes by 180 degrees again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 6 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 1 step; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 757
{'Instructions': 'Always face forward. Take 3 steps backward. Take 7 steps forward. Take 6 steps backward. Take 2 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 2 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 758
{'Instructions': 'Take 2 steps. Take 5 steps. Take 3 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 10 actual_solution 10



ID: 759
{'Instructions': 'Always face forward. Take 2 steps left. Take 3 steps backward. Take 4 steps forward. Take 3 steps forward. Take 6 steps left. Take 8 steps forward.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 8 steps forward; the direction is forward or 0 degrees.
Direction_time6 is 0,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 14 actual_solution 14



ID: 760
{'Instructions': 'Always face forward. Take 8 steps right. Take 5 steps forward. Take 10 steps forward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 10 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 17 actual_solution 17



ID: 761
{'Instructions': 'Turn left. Take 7 steps. Take 10 steps. Take 9 steps. Take 2 steps. Turn around.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 28}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Last instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 28 actual_solution 28



ID: 762
{'Instructions': 'Take 8 steps. Take 5 steps. Take 5 steps. Take 10 steps. Take 5 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 33}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 5 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 33 actual_solution 33



ID: 763
{'Instructions': 'Always face forward. Take 1 step forward. Take 1 step backward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 764
{'Instructions': 'Always face forward. Take 2 steps left. Take 8 steps left. Take 10 steps right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps left; the direction is to the left again, or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 10 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 765
{'Instructions': 'Always face forward. Take 1 step forward. Take 4 steps forward. Take 5 steps backward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 5 steps backward; the direction is backward or 180 degrees
Direction_time3 is 180,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 766
{'Instructions': 'Turn around. Take 2 steps. Take 7 steps. Take 6 steps. Turn around. Take 10 steps. Take 2 steps. Take 3 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 10 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 3 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 3,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 767
{'Instructions': 'Take 4 steps. Turn around. Turn left. Turn right. Turn right. Turn right. Turn around. Take 4 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 4 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 768
{'Instructions': 'Take 2 steps. Take 5 steps. Turn around. Take 7 steps. Turn right. Turn left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 7 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 769
{'Instructions': 'Take 1 step. Take 7 steps. Take 9 steps. Take 5 steps. Turn left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 22}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 22 actual_solution 22



ID: 770
{'Instructions': 'Always face forward. Take 6 steps right. Take 3 steps right.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 3 steps right; the direction is to the right or 90 degrees
Direction_time2 is 90,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 9 actual_solution 9



ID: 771
{'Instructions': 'Take 5 steps. Turn right. Take 1 step. Take 3 steps. Turn right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 1 step, so direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 6 actual_solution 6



ID: 772
{'Instructions': 'Always face forward. Take 1 step forward. Take 2 steps left. Take 2 steps left. Take 5 steps right. Take 3 steps right. Take 9 steps right. Take 5 steps left.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 9 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 5 steps left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 8 actual_solution 8



ID: 773
{'Instructions': 'Take 6 steps. Take 3 steps. Turn around. Turn left. Turn left. Take 7 steps. Turn around. Take 6 steps. Take 10 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 7 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Seventh instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Then take 6 steps; the direction doesn't change relative to the previous direction
Direction_time8 is Direction_time7,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 10 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 10,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 774
{'Instructions': 'Take 10 steps. Turn around. Turn around. Take 2 steps. Take 3 steps. Take 3 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 3 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 18 actual_solution 18



ID: 775
{'Instructions': 'Take 4 steps. Take 3 steps. Take 8 steps. Take 9 steps. Turn left. Take 5 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 25}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 5 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 25 actual_solution 25



ID: 776
{'Instructions': 'Always face forward. Take 5 steps backward. Take 6 steps backward. Take 8 steps forward. Take 3 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 3 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 777
{'Instructions': 'Take 7 steps. Take 3 steps. Turn right. Take 8 steps. Take 1 step.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 13}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 8 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 1 step, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 13 actual_solution 13



ID: 778
{'Instructions': 'Take 7 steps. Take 8 steps. Take 10 steps. Turn around. Turn around. Take 5 steps. Turn around.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 30}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%sixth instruction is to take 5 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 30 actual_solution 30



ID: 779
{'Instructions': 'Take 7 steps. Take 9 steps. Turn around. Take 8 steps. Take 8 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 8 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 8 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 780
{'Instructions': 'Always face forward. Take 8 steps right. Take 8 steps left.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 8 steps to the left; the direction is to the left or 270 degrees
Direction_time2 is 270,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 781
{'Instructions': 'Take 8 steps. Turn around. Take 8 steps. Turn around. Turn around.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 8 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 782
{'Instructions': 'Always face forward. Take 5 steps forward. Take 1 step forward. Take 2 steps forward. Take 2 steps right. Take 2 steps left. Take 8 steps backward.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 8 steps backward; the direction is backward or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 783
{'Instructions': 'Take 9 steps. Take 5 steps. Take 2 steps. Take 10 steps. Turn right. Take 10 steps. Take 8 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 32}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 10 steps, so direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 8 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 32 actual_solution 32



ID: 784
{'Instructions': 'Always face forward. Take 5 steps forward. Take 10 steps forward. Take 5 steps backward. Take 9 steps backward. Take 1 step backward.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 1 step backwards; the direction is backwards or 180 degrees
Direction_time5 is 180,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 785
{'Instructions': 'Take 6 steps. Turn around. Take 6 steps.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 6 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 786
{'Instructions': 'Always face forward. Take 8 steps forward. Take 3 steps backward. Take 1 step backward. Take 4 steps left. Take 8 steps backward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step backward, direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps left, thus the direction at time 4 is left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 8 steps backward; the direction is backward or 180 degrees
Direction_time5 is 180,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 6 actual_solution 6



ID: 787
{'Instructions': 'Always face forward. Take 1 step right. Take 5 steps backward. Take 5 steps right. Take 8 steps forward. Take 1 step backward.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 1 step backward; the direction is backward or 180 degrees
Direction_time5 is 180,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 6 actual_solution 6



ID: 788
{'Instructions': 'Always face forward. Take 8 steps forward. Take 1 step left. Take 4 steps backward. Take 4 steps backward. Take 1 step right.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps backwards again; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 1 step right; the direction is to the right or 90 degrees
Direction_time5 is 90,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 789
{'Instructions': 'Take 5 steps. Take 9 steps. Take 6 steps. Take 8 steps. Take 7 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 35}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 7 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 35 actual_solution 35



ID: 790
{'Instructions': 'Turn left. Turn left. Turn right. Take 8 steps. Turn right. Turn right. Take 8 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Turn right. So our direction changes by +90 relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Turn right. So our direction changes by +90 again relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Turn right. So our direction changes by +90 again relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 8 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 791
{'Instructions': 'Always face forward. Take 4 steps right. Take 8 steps left. Take 6 steps backward. Take 6 steps left. Take 3 steps right. Take 2 steps backward. Take 7 steps right. Take 8 steps forward.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time7 is 90,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 8 steps forward; the direction is forward or 0 degrees.
Direction_time8 is 0,
Steps_time8 is 8,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 792
{'Instructions': 'Turn left. Take 10 steps. Take 4 steps. Turn right. Take 8 steps. Turn right. Take 4 steps. Turn right. Take 10 steps.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 8 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Take 4 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time8 is (Direction_time7 + 90) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Lastly take 10 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 10,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 10 actual_solution 10



ID: 793
{'Instructions': 'Always face forward. Take 10 steps backward. Take 8 steps left. Take 2 steps forward. Take 8 steps left. Take 1 step backward. Take 5 steps forward.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 5 steps forward; the direction is forward or 0 degrees
Direction_time6 is 0,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 16 actual_solution 16



ID: 794
{'Instructions': 'Take 10 steps. Take 7 steps. Take 4 steps. Take 7 steps. Turn left. Take 7 steps. Turn around.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 29}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 7 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 29 actual_solution 29



ID: 795
{'Instructions': 'Take 10 steps. Take 9 steps. Take 1 step. Take 9 steps. Turn left. Turn left. Take 5 steps. Take 4 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps; the direction doesn't change relative to the starting direction.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step; the direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps; the direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time7 is Direction_time6,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 4 steps; the direction doesn't change again.
Direction_time8 is Direction_time7,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result:  actual_solution 20



ID: 795
{'Instructions': 'Take 10 steps. Take 9 steps. Take 1 step. Take 9 steps. Turn left. Turn left. Take 5 steps. Take 4 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 20}
repeated: 1
Corrected!!!!!
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn left again, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 5 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 4 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 20 actual_solution 20



ID: 796
{'Instructions': 'Turn left. Take 5 steps. Turn left. Take 9 steps. Take 5 steps. Take 7 steps. Take 4 steps. Take 3 steps. Take 10 steps.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 38}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time7 is Direction_time6,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time8 is Direction_time7,
Steps_time8 is 3,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 10 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 10,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 38 actual_solution 38



ID: 797
{'Instructions': 'Always face forward. Take 2 steps right. Take 3 steps left. Take 9 steps right. Take 8 steps left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 8 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 798
{'Instructions': 'Always face forward. Take 10 steps backward. Take 5 steps right. Take 6 steps backward. Take 2 steps backward. Take 6 steps forward. Take 8 steps right.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 8 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 18 actual_solution 18



ID: 799
{'Instructions': 'Take 6 steps. Turn left. Take 6 steps. Turn around. Take 2 steps. Take 10 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 2 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 10 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 8 actual_solution 8



ID: 800
{'Instructions': 'Always face forward. Take 4 steps backward. Take 3 steps forward. Take 7 steps forward. Take 6 steps backward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 6 steps backward; the direction is backward or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 801
{'Instructions': 'Always face forward. Take 2 steps right. Take 2 steps right. Take 4 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps to the right again; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 802
{'Instructions': 'Turn right. Take 7 steps. Take 7 steps. Turn left. Take 8 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 8 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 16 actual_solution 16



ID: 803
{'Instructions': 'Always face forward. Take 10 steps left. Take 3 steps right. Take 8 steps left. Take 10 steps right. Take 5 steps right.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 804
{'Instructions': 'Always face forward. Take 7 steps backward. Take 7 steps forward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 805
{'Instructions': 'Turn left. Turn around. Take 3 steps. Turn around. Take 3 steps. Take 7 steps. Turn around. Take 7 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn around. So our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Turn around. So our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Turn around. So our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 7 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 7,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 806
{'Instructions': 'Always face forward. Take 7 steps forward. Take 7 steps backward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 807
{'Instructions': 'Always face forward. Take 1 step backward. Take 7 steps forward. Take 1 step left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 1 step left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 6 actual_solution 6



ID: 808
{'Instructions': 'Always face forward. Take 3 steps forward. Take 3 steps backward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 809
{'Instructions': 'Always face forward. Take 2 steps forward. Take 3 steps forward. Take 5 steps backward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 5 steps backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 810
{'Instructions': 'Always face forward. Take 5 steps right. Take 1 step left. Take 3 steps right. Take 1 step forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 1 step forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 7 actual_solution 7



ID: 811
{'Instructions': 'Take 5 steps. Take 7 steps. Take 9 steps. Take 3 steps. Take 8 steps. Take 2 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 34}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 2 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 34 actual_solution 34



ID: 812
{'Instructions': 'Take 8 steps. Take 9 steps. Turn around. Take 5 steps. Turn left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 5 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 12 actual_solution 12



ID: 813
{'Instructions': 'Always face forward. Take 6 steps left. Take 3 steps right. Take 1 step forward. Take 5 steps left. Take 1 step right. Take 1 step right. Take 4 steps left. Take 5 steps forward. Take 3 steps left.', 'Difficulty': 10, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps left; the direction is left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps right; the direction is right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step forward, direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps left, thus the direction at time 4 is left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step right; the direction is right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step right; the direction is 90 degrees
Direction_time6 is 90,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 4 steps left; the direction is 270 degrees
Direction_time7 is 270,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 5 steps forward; the direction is 0 degrees
Direction_time8 is 0,
Steps_time8 is 5,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 3 steps left; the direction is 270 degrees
Direction_time9 is 270,
Steps_time9 is 3,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 14 actual_solution 14



ID: 814
{'Instructions': 'Turn right. Take 9 steps. Take 10 steps. Turn left. Take 10 steps. Turn right. Turn around. Take 4 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 10 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 4 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 18 actual_solution 18



ID: 815
{'Instructions': 'Take 2 steps. Take 9 steps. Take 9 steps. Turn right. Turn left. Take 8 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 28}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 8 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 28 actual_solution 28



ID: 816
{'Instructions': 'Turn around. Turn right. Take 5 steps. Take 8 steps. Turn around. Take 4 steps. Take 9 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 4 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 9 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 817
{'Instructions': 'Always face forward. Take 3 steps left. Take 1 step backward. Take 5 steps forward. Take 10 steps backward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 10 steps backwards; the direction is backwards or 180 degrees
Direction_time4 is 180,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 7 actual_solution 7



ID: 818
{'Instructions': 'Turn around. Turn right. Turn right. Take 1 step. Take 9 steps. Turn around. Take 10 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Turn right again. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 10 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 819
{'Instructions': 'Take 1 step. Take 1 step. Take 3 steps. Turn left. Take 6 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 6 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 8 actual_solution 8



ID: 820
{'Instructions': 'Always face forward. Take 9 steps backward. Take 2 steps left. Take 4 steps forward. Take 2 steps left. Take 7 steps forward. Take 5 steps backward. Take 1 step left.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 5 steps backward; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 1 step left; the direction is to the left or 270 degrees
Direction_time7 is 270,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 6 actual_solution 6



ID: 821
{'Instructions': 'Always face forward. Take 4 steps backward. Take 8 steps forward. Take 4 steps backward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps backward; the direction is backward or 180 degrees
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 822
{'Instructions': 'Always face forward. Take 1 step right. Take 4 steps right. Take 5 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps right; the direction is to the right again, or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 5 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 823
{'Instructions': 'Always face forward. Take 9 steps backward. Take 9 steps backward. Take 3 steps forward. Take 6 steps forward. Take 4 steps forward. Take 5 steps forward.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 5 steps forward; the direction is forward or 0 degrees.
Direction_time6 is 0,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 824
{'Instructions': 'Take 3 steps. Take 4 steps. Turn around. Take 7 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 7 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 825
{'Instructions': 'Always face forward. Take 10 steps left. Take 10 steps right. Take 3 steps backward. Take 7 steps backward. Take 8 steps backward. Take 1 step right. Take 2 steps right. Take 10 steps backward. Take 3 steps backward.', 'Difficulty': 10, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 31}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps right; the direction is to the right or 90 degrees
Direction_time7 is 90,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 10 steps backwards; the direction is backwards or 180 degrees
Direction_time8 is 180,
Steps_time8 is 10,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 3 steps backwards; the direction is backwards or 180 degrees
Direction_time9 is 180,
Steps_time9 is 3,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 31 actual_solution 31



ID: 826
{'Instructions': 'Take 4 steps. Take 1 step. Turn right. Take 9 steps. Turn left. Take 1 step.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 9 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 1 step; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 11 actual_solution 11



ID: 827
{'Instructions': 'Take 1 step. Turn left. Take 3 steps. Take 4 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 3 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 7 actual_solution 7



ID: 828
{'Instructions': 'Always face forward. Take 4 steps forward. Take 1 step right. Take 7 steps forward. Take 3 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 3 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 12 actual_solution 12



ID: 829
{'Instructions': 'Always face forward. Take 8 steps forward. Take 6 steps backward. Take 8 steps backward. Take 6 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps backwards, thus the direction at time 3 is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 6 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 830
{'Instructions': 'Always face forward. Take 6 steps right. Take 8 steps left. Take 2 steps right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 6.
Direction_time1 is 90,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 2 steps to the right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 831
{'Instructions': 'Always face forward. Take 6 steps right. Take 9 steps forward. Take 1 step backward. Take 3 steps right. Take 7 steps right.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 18 actual_solution 18



ID: 832
{'Instructions': 'Take 7 steps. Turn right. Take 8 steps. Turn around.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 8 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 11 actual_solution 11



ID: 833
{'Instructions': 'Turn left. Take 5 steps. Turn around. Turn right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 5 actual_solution 5



ID: 834
{'Instructions': 'Always face forward. Take 7 steps right. Take 2 steps right. Take 9 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps right; the direction is to the right again, or +90 degrees.
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 9 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 835
{'Instructions': 'Always face forward. Take 8 steps forward. Take 1 step forward. Take 5 steps right. Take 1 step right. Take 5 steps backward. Take 1 step backward. Take 1 step backward. Take 7 steps backward.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step backward; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 1 step backward; the direction is backwards or 180 degrees
Direction_time7 is 180,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 7 steps backward; the direction is backwards or 180 degrees
Direction_time8 is 180,
Steps_time8 is 7,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 8 actual_solution 8



ID: 836
{'Instructions': 'Turn left. Turn left. Turn left. Take 6 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 6 actual_solution 6



ID: 837
{'Instructions': 'Always face forward. Take 8 steps left. Take 3 steps backward. Take 3 steps forward. Take 7 steps left. Take 10 steps right. Take 2 steps right.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 3}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps forward, direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 2 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 3 actual_solution 3



ID: 838
{'Instructions': 'Take 4 steps. Take 4 steps. Take 5 steps. Take 3 steps. Turn around. Take 5 steps. Take 5 steps. Take 6 steps. Turn left.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 5 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 5 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 6 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time9 is (Direction_time8 + 270) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 839
{'Instructions': 'Always face forward. Take 3 steps forward. Take 9 steps backward.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 6 actual_solution 6



ID: 840
{'Instructions': 'Always face forward. Take 5 steps forward. Take 9 steps backward. Take 8 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 8 steps backwards; the direction is backwards or 180 degrees
Direction_time3 is 180,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 12 actual_solution 12



ID: 841
{'Instructions': 'Always face forward. Take 1 step left. Take 9 steps right. Take 8 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step left; the direction is left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps right; the direction is right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 8 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 842
{'Instructions': 'Take 6 steps. Turn left. Take 6 steps. Take 4 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 6 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 12 actual_solution 12



ID: 843
{'Instructions': 'Turn right. Turn right. Turn left. Take 5 steps. Turn around. Take 5 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Turn left. So our direction changes by -90 relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 5 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 844
{'Instructions': 'Always face forward. Take 10 steps backward. Take 2 steps left. Take 9 steps left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 9 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 15 actual_solution 15



ID: 845
{'Instructions': 'Turn left. Turn right. Take 8 steps. Turn right. Turn right. Take 1 step. Take 7 steps. Turn right.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 7 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly turn right; the direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time8 is (Direction_time7 + 90) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 846
{'Instructions': 'Always face forward. Take 4 steps backward. Take 8 steps forward. Take 10 steps backward. Take 2 steps forward. Take 4 steps forward.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 4 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 847
{'Instructions': 'Always face forward. Take 1 step left. Take 6 steps forward. Take 4 steps left. Take 5 steps left. Take 7 steps right. Take 3 steps forward. Take 4 steps forward. Take 6 steps backward.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 3 step forward; the direction is 0 degrees
Direction_time6 is 0,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 4 steps forward; the direction is 0 degrees
Direction_time7 is 0,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 6 steps backward; the direction is backwards or 180 degrees
Direction_time8 is 180,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 8 actual_solution 8



ID: 848
{'Instructions': 'Take 6 steps. Take 8 steps. Take 7 steps. Turn around. Take 3 steps. Turn right. Turn left. Take 10 steps. Take 8 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 3 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Take 10 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 10,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 8 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 8,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 849
{'Instructions': 'Turn around. Turn right. Take 7 steps. Turn right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Turn right; the direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 7 actual_solution 7



ID: 850
{'Instructions': 'Always face forward. Take 7 steps left. Take 10 steps right. Take 1 step right. Take 4 steps left. Take 1 step backward. Take 3 steps backward.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 3 steps backwards; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 4 actual_solution 4



ID: 851
{'Instructions': 'Always face forward. Take 7 steps backward. Take 5 steps left. Take 3 steps right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 3 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 7 actual_solution 7



ID: 852
{'Instructions': 'Take 6 steps. Turn left. Take 3 steps. Take 3 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 3 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 3 steps, so direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 8 actual_solution 8



ID: 853
{'Instructions': 'Take 10 steps. Take 3 steps. Turn right. Turn left. Turn around. Take 8 steps. Take 5 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to take 8 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 5 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 854
{'Instructions': 'Turn around. Turn around. Take 7 steps. Take 2 steps. Turn around. Take 7 steps. Take 2 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn around. So our direction changes by 180 again relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 7 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 2 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 855
{'Instructions': 'Take 9 steps. Take 10 steps. Take 6 steps. Turn left. Take 5 steps. Take 2 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 26}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 5 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 2 steps, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 26 actual_solution 26



ID: 856
{'Instructions': 'Always face forward. Take 3 steps forward. Take 4 steps backward. Take 7 steps backward. Take 8 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 8 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 857
{'Instructions': 'Always face forward. Take 5 steps right. Take 7 steps left. Take 2 steps right.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 5.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 2 steps to the right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 858
{'Instructions': 'Take 3 steps. Turn left. Turn left. Take 3 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 3 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 859
{'Instructions': 'Always face forward. Take 2 steps right. Take 7 steps left. Take 5 steps left. Take 3 steps right. Take 7 steps right.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 860
{'Instructions': 'Take 6 steps. Take 6 steps. Take 10 steps. Turn left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 22}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 22 actual_solution 22



ID: 861
{'Instructions': 'Always face forward. Take 1 step left. Take 4 steps forward. Take 6 steps forward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 6 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 10 actual_solution 10



ID: 862
{'Instructions': 'Always face forward. Take 3 steps forward. Take 5 steps forward. Take 1 step backward. Take 7 steps backward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps backward; the direction is backward or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 863
{'Instructions': 'Always face forward. Take 10 steps left. Take 4 steps left. Take 10 steps right. Take 4 steps right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 864
{'Instructions': 'Take 4 steps. Take 3 steps. Take 9 steps. Take 9 steps. Turn left. Take 4 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 25}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 4 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 25 actual_solution 25



ID: 865
{'Instructions': 'Take 4 steps. Turn left. Turn left. Take 4 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left again, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 4 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 866
{'Instructions': 'Always face forward. Take 4 steps right. Take 7 steps right. Take 1 step left. Take 4 steps left. Take 6 steps left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 6 steps to the left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 867
{'Instructions': 'Always face forward. Take 4 steps left. Take 2 steps left. Take 10 steps left. Take 2 steps left. Take 10 steps right. Take 7 steps forward.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps left; the direction is left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps left; the direction is left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps left, thus the direction at time 4 is left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps right; the direction is right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 7 steps forward; the direction is forward or 0 degrees
Direction_time6 is 0,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 11 actual_solution 11



ID: 868
{'Instructions': 'Turn around. Turn right. Turn left. Take 8 steps. Turn around. Take 8 steps. Turn left.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Turn left. So our direction changes by -90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 8 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly turn left; the direction changes by -90 degrees relative to the previous direction
Direction_time7 is (Direction_time6 + 270) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 869
{'Instructions': 'Always face forward. Take 10 steps backward. Take 7 steps backward. Take 8 steps right. Take 6 steps right. Take 3 steps left.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 20}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps right, thus the direction at time 4 is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 3 steps left; the direction is to the left or 270 degrees
Direction_time5 is 270,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 20 actual_solution 20



ID: 870
{'Instructions': 'Turn left. Take 9 steps. Take 3 steps. Turn right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Last instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 12 actual_solution 12



ID: 871
{'Instructions': 'Turn around. Take 10 steps. Take 6 steps. Take 4 steps. Take 2 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 22}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 22 actual_solution 22



ID: 872
{'Instructions': 'Always face forward. Take 3 steps forward. Take 3 steps backward. Take 3 steps backward. Take 7 steps left. Take 7 steps right. Take 8 steps backward. Take 4 steps backward.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps backwards again, thus the direction at time 3 is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps left, direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 8 steps backwards, thus the direction at time 6 is backwards or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 4 steps backwards; the direction is backwards or 180 degrees
Direction_time7 is 180,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 15 actual_solution 15



ID: 873
{'Instructions': 'Always face forward. Take 2 steps left. Take 4 steps backward. Take 10 steps right. Take 2 steps left. Take 3 steps left. Take 7 steps right.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 7 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 11 actual_solution 11



ID: 874
{'Instructions': 'Always face forward. Take 3 steps backward. Take 5 steps left. Take 3 steps forward. Take 5 steps right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 875
{'Instructions': 'Always face forward. Take 4 steps forward. Take 2 steps backward. Take 10 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 8 actual_solution 8



ID: 876
{'Instructions': 'Always face forward. Take 9 steps left. Take 4 steps backward.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 10 actual_solution 10



ID: 877
{'Instructions': 'Turn around. Take 3 steps. Take 4 steps. Take 7 steps. Take 5 steps. Take 1 step. Take 9 steps. Take 5 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 34}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 9 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 5 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 5,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 34 actual_solution 34



ID: 878
{'Instructions': 'Always face forward. Take 8 steps forward. Take 8 steps backward.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 879
{'Instructions': 'Take 9 steps. Take 3 steps. Turn around. Take 5 steps. Take 7 steps. Turn right. Turn right. Turn right.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 5 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to turn right again, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time7 is (Direction_time6 + 90) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly turn right again, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time8 is (Direction_time7 + 90) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 880
{'Instructions': 'Always face forward. Take 7 steps right. Take 8 steps left. Take 3 steps left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 7.
Direction_time1 is 90,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 3 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 4 actual_solution 4



ID: 881
{'Instructions': 'Take 4 steps. Turn around. Turn around. Turn around. Turn around. Take 4 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 4 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 8 actual_solution 8



ID: 882
{'Instructions': 'Always face forward. Take 3 steps left. Take 4 steps backward.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 5 actual_solution 5



ID: 883
{'Instructions': 'Take 1 step. Take 6 steps. Turn around. Take 7 steps. Turn left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 7 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 884
{'Instructions': 'Always face forward. Take 8 steps backward. Take 8 steps backward. Take 8 steps forward. Take 4 steps backward. Take 6 steps forward. Take 2 steps backward. Take 8 steps backward. Take 10 steps left.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 19}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps forwards; the direction is forwards or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 2 steps backward; the direction is 180 degrees
Direction_time6 is 180,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 8 steps backward; the direction is 180 degrees
Direction_time7 is 180,
Steps_time7 is 8,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 10 steps left; the direction is to the left or 270 degrees
Direction_time8 is 270,
Steps_time8 is 10,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 19 actual_solution 19



ID: 885
{'Instructions': 'Turn right. Take 5 steps. Take 6 steps. Take 4 steps. Take 1 step. Turn around. Take 6 steps. Take 10 steps. Turn around.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 1,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 6 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 10 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 10,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time9 is (Direction_time8 + 180) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 886
{'Instructions': 'Take 1 step. Take 8 steps. Turn around. Take 8 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 1}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 8 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 1 actual_solution 1



ID: 887
{'Instructions': 'Take 3 steps. Take 9 steps. Turn left. Turn left. Take 2 steps. Take 8 steps. Take 2 steps. Turn left. Turn right.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps; the direction doesn't change relative to the starting direction.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Turn left; our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Turn left again; our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Turn left; our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time8 is (Direction_time7 + 270) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Lastly turn right; our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time9 is (Direction_time8 + 90) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 888
{'Instructions': 'Always face forward. Take 8 steps left. Take 8 steps backward. Take 6 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 6 steps backwards; the direction is backwards or 180 degrees
Direction_time3 is 180,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 16 actual_solution 16



ID: 889
{'Instructions': 'Always face forward. Take 1 step forward. Take 6 steps right. Take 3 steps backward. Take 2 steps left. Take 2 steps left. Take 10 steps forward. Take 9 steps backward. Take 1 step forward. Take 2 steps left.', 'Difficulty': 10, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps left, direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps left, direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time6 is 0,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time7 is 180,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time8 is 0,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 2 steps left; the direction is to the left or 270 degrees
Direction_time9 is 270,
Steps_time9 is 2,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 890
{'Instructions': 'Always face forward. Take 7 steps right. Take 1 step left.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 7.
Direction_time1 is 90,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 1 step left; the direction is to the left or 270 degrees
Direction_time2 is 270,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 6 actual_solution 6



ID: 891
{'Instructions': 'Always face forward. Take 9 steps backward. Take 9 steps forward. Take 1 step right. Take 1 step left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 1 step left; the direction is to the left or 270 degrees
Direction_time4 is 270,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 892
{'Instructions': 'Take 6 steps. Turn left. Turn left. Take 1 step. Take 5 steps. Turn around.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn left again, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 270) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 1 step, so direction doesn't change relative to the previous direction and the number of steps is 1.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to take 5 steps, so direction doesn't change relative to the previous direction and the number of steps is 5.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Last instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 893
{'Instructions': 'Always face forward. Take 2 steps left. Take 7 steps forward. Take 5 steps left. Take 1 step left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 1 step left; the direction is to the left or 270 degrees
Direction_time4 is 270,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 11 actual_solution 11



ID: 894
{'Instructions': 'Always face forward. Take 4 steps forward. Take 3 steps right.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps right, direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 5 actual_solution 5



ID: 895
{'Instructions': 'Take 3 steps. Take 6 steps. Take 6 steps. Turn left. Take 8 steps. Take 1 step. Take 3 steps. Take 7 steps. Take 8 steps.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 31}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 8 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 3 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 7 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 7,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 8 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 8,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 31 actual_solution 31



ID: 896
{'Instructions': 'Always face forward. Take 3 steps right. Take 6 steps forward. Take 4 steps left. Take 7 steps right. Take 2 steps backward. Take 4 steps left. Take 1 step right. Take 7 steps left.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps backward; the direction is backward or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 4 steps to the left; the direction is to the left or 270 degrees.
Direction_time6 is 270,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time7 is 90,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 7 steps to the left; the direction is to the left or 270 degrees.
Direction_time8 is 270,
Steps_time8 is 7,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 6 actual_solution 6



ID: 897
{'Instructions': 'Take 10 steps. Take 4 steps. Take 7 steps. Take 1 step. Take 2 steps. Take 10 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 34}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 10 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 34 actual_solution 34



ID: 898
{'Instructions': 'Always face forward. Take 2 steps backward. Take 9 steps left. Take 2 steps left. Take 10 steps forward. Take 8 steps left. Take 4 steps forward.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 22}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps forward, thus the direction at time 4 is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 4 steps forward; the direction is forward or 0 degrees
Direction_time6 is 0,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 22 actual_solution 22



ID: 899
{'Instructions': 'Turn left. Turn right. Turn around. Turn left. Take 4 steps. Turn left. Turn around. Take 3 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time7 is (Direction_time6 + 180) mod 360,
X_time7 is X_time6,
Y_time7 is Y_time6,
%Lastly take 3 steps; the direction doesn't change relative to the previous direction
Direction_time8 is Direction_time7,
Steps_time8 is 3,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 5 actual_solution 5



ID: 900
{'Instructions': 'Always face forward. Take 2 steps left. Take 2 steps right.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 2 steps right; the direction is to the right or 90 degrees
Direction_time2 is 90,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 901
{'Instructions': 'Always face forward. Take 9 steps backward. Take 2 steps forward. Take 1 step backward. Take 8 steps forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step backward, direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 8 steps forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 902
{'Instructions': 'Always face forward. Take 4 steps forward. Take 5 steps left. Take 6 steps forward. Take 8 steps backward. Take 5 steps backward. Take 1 step backward. Take 1 step backward.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 1 step backward; the direction is backwards or 180 degrees
Direction_time6 is 180,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 1 step backward; the direction is backwards or 180 degrees
Direction_time7 is 180,
Steps_time7 is 1,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 7 actual_solution 7



ID: 903
{'Instructions': 'Always face forward. Take 6 steps forward. Take 4 steps backward. Take 5 steps right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 5 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 5 actual_solution 5



ID: 904
{'Instructions': 'Always face forward. Take 6 steps right. Take 10 steps left. Take 3 steps left. Take 1 step forward. Take 4 steps left. Take 10 steps left.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps to the left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 10 steps to the left; the direction is to the left or 270 degrees.
Direction_time6 is 270,
Steps_time6 is 10,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 21 actual_solution 21



ID: 905
{'Instructions': 'Always face forward. Take 5 steps right. Take 2 steps left. Take 3 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right, so the direction is to the right which is 90 degrees, and the number of steps is 5.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 3 steps to the left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 906
{'Instructions': 'Turn left. Take 2 steps. Turn around. Take 7 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 5}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 7 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 5 actual_solution 5



ID: 907
{'Instructions': 'Always face forward. Take 10 steps left. Take 4 steps forward. Take 1 step left. Take 4 steps backward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 11 actual_solution 11



ID: 908
{'Instructions': 'Always face forward. Take 7 steps backward. Take 1 step backward. Take 8 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 8 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 909
{'Instructions': 'Always face forward. Take 10 steps left. Take 5 steps right. Take 7 steps right. Take 5 steps backward. Take 3 steps backward. Take 8 steps right. Take 5 steps backward.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 8 steps right; the direction is to the right or 90 degrees
Direction_time6 is 90,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 5 steps backward; the direction is backwards or 180 degrees
Direction_time7 is 180,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 16 actual_solution 16



ID: 910
{'Instructions': 'Take 2 steps. Take 3 steps. Take 1 step. Take 6 steps. Turn left. Take 1 step.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 1 step, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 12 actual_solution 12



ID: 911
{'Instructions': 'Take 9 steps. Take 9 steps. Take 9 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 27}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 27 actual_solution 27



ID: 912
{'Instructions': 'Take 6 steps. Take 2 steps. Take 6 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 14 actual_solution 14



ID: 913
{'Instructions': 'Always face forward. Take 1 step backward. Take 4 steps left. Take 4 steps left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps left, direction is to the left again or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 8 actual_solution 8



ID: 914
{'Instructions': 'Take 9 steps. Turn left. Turn around. Turn right. Take 9 steps. Turn left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to take 9 steps, so direction doesn't change relative to the previous direction and the number of steps is 9.
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 915
{'Instructions': 'Always face forward. Take 1 step backward. Take 5 steps right. Take 3 steps left. Take 1 step backward. Take 5 steps backward. Take 4 steps forward. Take 3 steps forward. Take 2 steps left.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 4 step forward; the direction is 0 degrees
Direction_time6 is 0,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 3 steps forward; the direction is 0 degrees
Direction_time7 is 0,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 2 steps left; the direction is to the left or 270 degrees
Direction_time8 is 270,
Steps_time8 is 2,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 916
{'Instructions': 'Always face forward. Take 6 steps right. Take 5 steps right. Take 7 steps left. Take 3 steps left. Take 7 steps left. Take 6 steps right.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps to the left; the direction is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 7 steps to the left; the direction is to the left or 270 degrees.
Direction_time5 is 270,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 6 steps to the right; the direction is to the right or 90 degrees.
Direction_time6 is 90,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 917
{'Instructions': 'Take 7 steps. Take 8 steps. Take 3 steps. Take 8 steps. Turn around. Take 5 steps. Take 7 steps. Take 8 steps. Take 6 steps.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 5 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 7 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 8 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 8,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 6 steps; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 6,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 918
{'Instructions': 'Always face forward. Take 6 steps forward. Take 8 steps backward. Take 2 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 2 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 919
{'Instructions': 'Take 1 step. Turn around. Turn right. Take 8 steps. Take 8 steps. Turn right.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 8 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to take 8 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 16 actual_solution 16



ID: 920
{'Instructions': 'Always face forward. Take 3 steps forward. Take 5 steps right.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 6 actual_solution 6



ID: 921
{'Instructions': 'Turn right. Take 4 steps. Take 2 steps.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 6}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 2 steps; the direction doesn't change again
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 6 actual_solution 6



ID: 922
{'Instructions': 'Take 10 steps. Turn around. Take 7 steps. Take 3 steps. Turn around. Turn left.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 7 steps, so direction doesn't change relative to previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 270) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 923
{'Instructions': 'Always face forward. Take 9 steps left. Take 5 steps left. Take 8 steps right. Take 6 steps right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 6 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 924
{'Instructions': 'Always face forward. Take 6 steps forward. Take 4 steps forward. Take 9 steps backward. Take 1 step backward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 1 step backwards; the direction is backwards or 180 degrees
Direction_time4 is 180,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 925
{'Instructions': 'Always face forward. Take 10 steps forward. Take 4 steps backward. Take 6 steps forward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 6 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 12 actual_solution 12



ID: 926
{'Instructions': 'Turn right. Take 2 steps. Take 3 steps. Turn around. Take 2 steps. Take 3 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 2 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 3 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 927
{'Instructions': 'Always face forward. Take 1 step forward. Take 10 steps right. Take 9 steps right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 19}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 9 steps right; the direction is to the right or 90 degrees
Direction_time3 is 90,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 19 actual_solution 19



ID: 928
{'Instructions': 'Always face forward. Take 5 steps right. Take 7 steps left. Take 6 steps left. Take 8 steps right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps to the left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 8 steps to the right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 929
{'Instructions': 'Always face forward. Take 4 steps backward. Take 7 steps left. Take 7 steps forward. Take 3 steps forward. Take 10 steps right. Take 1 step right. Take 5 steps backward. Take 4 steps left. Take 1 step backward.', 'Difficulty': 10, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 1 step right; the direction is to the right or 90 degrees.
Direction_time6 is 90,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 5 steps backward; the direction is backward or 180 degrees.
Direction_time7 is 180,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 4 steps left; the direction is to the left or 270 degrees.
Direction_time8 is 270,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 1 step backward; the direction is backward or 180 degrees.
Direction_time9 is 180,
Steps_time9 is 1,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 930
{'Instructions': 'Turn left. Turn right. Take 5 steps. Take 4 steps. Turn around. Take 9 steps.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Turn right. So our direction changes by +90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 5 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly take 9 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 931
{'Instructions': 'Turn right. Take 8 steps. Turn around. Take 8 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 8 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 932
{'Instructions': 'Always face forward. Take 1 step forward. Take 9 steps forward. Take 8 steps right. Take 3 steps backward. Take 6 steps right.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 16}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps backwards, thus the direction at time 4 is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 6 steps right; the direction is to the right or 90 degrees
Direction_time5 is 90,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 16 actual_solution 16



ID: 933
{'Instructions': 'Turn around. Take 4 steps. Take 7 steps. Turn around. Take 7 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 4 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 7 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 4 actual_solution 4



ID: 934
{'Instructions': 'Turn left. Take 6 steps. Take 1 step. Turn around. Turn around. Turn around. Take 7 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 7 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 935
{'Instructions': 'Always face forward. Take 3 steps forward. Take 7 steps backward. Take 3 steps forward. Take 1 step forward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps forward, direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 1 step forward; the direction is forward or 0 degrees
Direction_time4 is 0,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 936
{'Instructions': 'Take 10 steps. Turn around. Take 9 steps. Take 10 steps. Turn around. Take 3 steps. Take 6 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 9 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to take 10 steps, so direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to take 3 steps, so direction doesn't change relative to the previous direction.
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 6 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 937
{'Instructions': 'Turn left. Take 10 steps. Turn around. Take 10 steps. Turn around.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 10 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 938
{'Instructions': 'Always face forward. Take 1 step backward. Take 1 step backward. Take 9 steps forward. Take 5 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step backward again; the direction is backward or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 5 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 9 actual_solution 9



ID: 939
{'Instructions': 'Always face forward. Take 10 steps right. Take 4 steps backward.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 11 actual_solution 11



ID: 940
{'Instructions': 'Always face forward. Take 6 steps left. Take 10 steps backward. Take 4 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 4 steps backwards; the direction is backwards or 180 degrees
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 15 actual_solution 15



ID: 941
{'Instructions': 'Turn left. Take 8 steps. Take 8 steps. Take 7 steps. Take 2 steps. Take 1 step.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 26}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 1 step; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 26 actual_solution 26



ID: 942
{'Instructions': 'Take 3 steps. Take 9 steps. Turn around. Take 9 steps. Take 2 steps. Take 1 step.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 9 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to take 2 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 1 step, so direction doesn't change.
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 943
{'Instructions': 'Always face forward. Take 1 step right. Take 1 step left.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 1 step to the left; the direction is to the left or 270 degrees
Direction_time2 is 270,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 944
{'Instructions': 'Always face forward. Take 10 steps forward. Take 2 steps backward. Take 3 steps right. Take 7 steps forward. Take 9 steps right.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 19}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 9 steps right; the direction is to the right or 90 degrees
Direction_time5 is 90,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 19 actual_solution 19



ID: 945
{'Instructions': 'Take 6 steps. Take 9 steps. Take 9 steps. Turn right. Turn around.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 24}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 9 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 9,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 24 actual_solution 24



ID: 946
{'Instructions': 'Take 2 steps. Take 2 steps. Turn around. Take 4 steps. Turn right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 2 steps, so direction doesn't change relative to the starting direction and the number of steps is 2.
Direction_time1 is Direction_time0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 4 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 947
{'Instructions': 'Always face forward. Take 7 steps left. Take 7 steps backward. Take 1 step right. Take 5 steps forward. Take 6 steps left.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 12}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step right, direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 6 steps left; the direction is to the left or 270 degrees
Direction_time5 is 270,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 12 actual_solution 12



ID: 948
{'Instructions': 'Always face forward. Take 3 steps right. Take 1 step backward. Take 6 steps left. Take 1 step forward. Take 3 steps right.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps to the left; the direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 1,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 3 steps to the right; the direction is to the right or 90 degrees.
Direction_time5 is 90,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 949
{'Instructions': 'Always face forward. Take 3 steps forward. Take 6 steps backward. Take 3 steps forward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 3 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 950
{'Instructions': 'Take 3 steps. Turn right. Take 6 steps. Take 2 steps.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 3 steps, so direction doesn't change relative to the starting direction and the number of steps is 3.
Direction_time1 is Direction_time0,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 90) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 6 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 2 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 9 actual_solution 9



ID: 951
{'Instructions': 'Always face forward. Take 3 steps backward. Take 7 steps forward. Take 4 steps backward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 3 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 3,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps backward; the direction is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 952
{'Instructions': 'Always face forward. Take 1 step left. Take 1 step forward. Take 3 steps forward. Take 6 steps forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 6 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 10 actual_solution 10



ID: 953
{'Instructions': 'Always face forward. Take 5 steps right. Take 4 steps backward. Take 8 steps left. Take 5 steps left. Take 6 steps backward. Take 9 steps forward. Take 5 steps right. Take 1 step forward. Take 3 steps right.', 'Difficulty': 10, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps left, direction is to the left or 270 degrees.
Direction_time3 is 270,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 5 steps left, thus the direction at time 4 is to the left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 6 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 6,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 9 steps forward; the direction is forward or 0 degrees
Direction_time6 is 0,
Steps_time6 is 9,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 5 steps right; the direction is to the right or 90 degrees
Direction_time7 is 90,
Steps_time7 is 5,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 1 step forward; the direction is forward or 0 degrees
Direction_time8 is 0,
Steps_time8 is 1,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 3 steps right; the direction is to the right or 90 degrees
Direction_time9 is 90,
Steps_time9 is 3,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 954
{'Instructions': 'Take 8 steps. Turn around. Take 8 steps.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 8 steps, so direction doesn't change.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 955
{'Instructions': 'Take 1 step. Take 10 steps. Turn around. Take 3 steps. Turn left.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 8}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take a step, so direction doesn't change relative to the starting direction and the number of steps is 1.
Direction_time1 is Direction_time0,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 3 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 8 actual_solution 8



ID: 956
{'Instructions': 'Take 8 steps. Turn around. Take 2 steps. Take 6 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 8 steps, so direction doesn't change relative to the starting direction and the number of steps is 8.
Direction_time1 is Direction_time0,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 2 steps, so direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 6 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 957
{'Instructions': 'Always face forward. Take 7 steps right. Take 8 steps right. Take 10 steps backward. Take 9 steps right. Take 3 steps backward. Take 3 steps backward. Take 9 steps forward. Take 9 steps backward. Take 5 steps backward.', 'Difficulty': 10, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 32}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 9 steps right; the direction is to the right or 90 degrees.
Direction_time4 is 90,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time5 is 180,
Steps_time5 is 3,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 3 steps backwards; the direction is backwards or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time7 is 0,
Steps_time7 is 9,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time8 is 180,
Steps_time8 is 9,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time9 is 180,
Steps_time9 is 5,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 32 actual_solution 32



ID: 958
{'Instructions': 'Take 5 steps. Take 10 steps. Turn around.', 'Difficulty': 3, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 15 actual_solution 15



ID: 959
{'Instructions': 'Turn left. Take 7 steps. Take 8 steps. Turn right. Take 8 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 8 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 17 actual_solution 17



ID: 960
{'Instructions': 'Take 4 steps. Take 8 steps. Turn around. Turn left. Turn left. Turn around. Take 6 steps. Take 6 steps. Turn left.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn left again, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Seventh instruction is to take 6 steps, so direction doesn't change.
Direction_time7 is Direction_time6,
Steps_time7 is 6,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Eighth instruction is to take 6 steps, so direction doesn't change.
Direction_time8 is Direction_time7,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time9 is (Direction_time8 + 270) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 961
{'Instructions': 'Always face forward. Take 9 steps left. Take 9 steps right.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 9 steps right; the direction is to the right or 90 degrees
Direction_time2 is 90,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 962
{'Instructions': 'Always face forward. Take 2 steps forward. Take 1 step backward. Take 10 steps forward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 11}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 10 steps forward; the direction is forward or 0 degrees
Direction_time3 is 0,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 11 actual_solution 11



ID: 963
{'Instructions': 'Turn left. Turn around. Take 1 step. Take 10 steps. Turn around. Take 7 steps. Take 4 steps.', 'Difficulty': 7, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Second instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 7 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 7,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 4 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 964
{'Instructions': 'Take 7 steps. Take 4 steps. Turn around. Take 2 steps. Take 2 steps. Take 5 steps. Take 2 steps. Turn left. Turn right.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 2 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 5 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps, so direction doesn't change again.
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Eighth instruction is to turn left, so our direction changes by 270 degrees relative to the previous direction. Coordinates don’t change.
Direction_time8 is (Direction_time7 + 270) mod 360,
X_time8 is X_time7,
Y_time8 is Y_time7,
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time9 is (Direction_time8 + 90) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 965
{'Instructions': 'Always face forward. Take 7 steps forward. Take 9 steps backward. Take 7 steps forward. Take 8 steps backward. Take 10 steps forward. Take 5 steps backward. Take 2 steps backward.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 8,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time6 is 180,
Steps_time6 is 5,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 2 steps backwards; the direction is backwards or 180 degrees.
Direction_time7 is 180,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 0 actual_solution 0



ID: 966
{'Instructions': 'Always face forward. Take 4 steps left. Take 10 steps right. Take 6 steps left.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps left; the direction is left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps right; the direction is right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 6 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 967
{'Instructions': 'Take 5 steps. Take 7 steps. Take 2 steps. Take 7 steps. Take 9 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 30}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 7 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 9 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 30 actual_solution 30



ID: 968
{'Instructions': 'Take 9 steps. Take 9 steps. Take 4 steps. Turn right.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 22}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 9 steps, so direction doesn't change relative to the starting direction and the number of steps is 9.
Direction_time1 is Direction_time0,
Steps_time1 is 9,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 22 actual_solution 22



ID: 969
{'Instructions': 'Always face forward. Take 5 steps backward. Take 7 steps backward. Take 8 steps forward. Take 10 steps backward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 14}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 10 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 14 actual_solution 14



ID: 970
{'Instructions': 'Always face forward. Take 5 steps forward. Take 8 steps backward. Take 4 steps forward. Take 4 steps right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time2 is 180,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps right; the direction is to the right or 90 degrees
Direction_time4 is 90,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 4 actual_solution 4



ID: 971
{'Instructions': 'Always face forward. Take 8 steps backward. Take 10 steps left. Take 10 steps backward.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 21}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps backwards; the direction is backwards or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 10 steps left, direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 10 steps backwards, thus the direction at time 3 is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 10,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 21 actual_solution 21



ID: 972
{'Instructions': 'Turn left. Take 10 steps. Take 7 steps. Turn around. Turn right.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 17}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 10,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 17 actual_solution 17



ID: 973
{'Instructions': 'Turn right. Take 6 steps. Take 2 steps. Turn around. Take 7 steps. Take 1 step.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Then take 7 steps; the direction doesn't change relative to the previous direction
Direction_time5 is Direction_time4,
Steps_time5 is 7,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 1 step; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 1,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 974
{'Instructions': 'Take 5 steps. Turn around. Take 5 steps. Turn left. Turn around.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 180) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to take 5 steps, so direction doesn't change relative to the previous direction and the number of steps is 5.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Fifth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 180) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 975
{'Instructions': 'Turn around. Take 2 steps. Take 8 steps. Turn around. Take 10 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 2 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 8,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Fourth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 10 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 10,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 976
{'Instructions': 'Always face forward. Take 2 steps backward. Take 8 steps forward. Take 6 steps backward.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 2 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 2,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 6 steps backward; the direction is backward or 180 degrees
Direction_time3 is 180,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 0 actual_solution 0



ID: 977
{'Instructions': 'Turn left. Take 9 steps. Turn around. Take 9 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 9 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 9 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 978
{'Instructions': 'Take 7 steps. Take 6 steps. Take 5 steps. Turn around. Take 5 steps. Take 3 steps. Take 4 steps. Take 6 steps.', 'Difficulty': 8, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 5 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 5,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 5 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 5,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 3 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 3,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 4 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 6 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 6,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 0 actual_solution 0



ID: 979
{'Instructions': 'Turn around. Take 8 steps. Take 1 step. Take 10 steps. Take 8 steps. Turn right. Take 7 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 28}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 1 step; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 1,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 10 steps; the direction doesn't change relative to the previous direction.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 8 steps; the direction doesn't change relative to the previous direction.
Direction_time5 is Direction_time4,
Steps_time5 is 8,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 90) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 7 steps; the direction doesn't change again
Direction_time7 is Direction_time6,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 28 actual_solution 28



ID: 980
{'Instructions': 'Always face forward. Take 1 step left. Take 1 step right.', 'Difficulty': 3, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step to the left; the direction is to the left or 270 degrees.
Direction_time1 is 270,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Lastly take 1 step to the right; the direction is to the right or 90 degrees
Direction_time2 is 90,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%After the last instruction, calculate the distance from the starting position
distance(X_time2, Y_time2, Distance).
prolog run result: 0 actual_solution 0



ID: 981
{'Instructions': 'Always face forward. Take 7 steps right. Take 8 steps forward. Take 7 steps right. Take 4 steps forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 18}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time1 is 90,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 8 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 8,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps to the right; the direction is to the right or 90 degrees.
Direction_time3 is 90,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 4 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 4,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 18 actual_solution 18



ID: 982
{'Instructions': 'Turn right. Take 3 steps. Turn around. Take 3 steps. Turn right.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 3 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn right, so change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 983
{'Instructions': 'Take 6 steps. Take 4 steps. Take 6 steps. Take 3 steps. Turn right. Take 8 steps. Take 7 steps. Take 8 steps.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 30}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 6 steps, so direction doesn't change relative to the starting direction and the number of steps is 6.
Direction_time1 is Direction_time0,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 3 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Then take 8 steps; the direction doesn't change relative to the previous direction
Direction_time6 is Direction_time5,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 7 steps; the direction doesn't change
Direction_time7 is Direction_time6,
Steps_time7 is 7,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Lastly take 8 steps; the direction doesn't change again
Direction_time8 is Direction_time7,
Steps_time8 is 8,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%After the last instruction, calculate the distance from the starting position
distance(X_time8, Y_time8, Distance).
prolog run result: 30 actual_solution 30



ID: 984
{'Instructions': 'Turn around. Take 3 steps. Turn around. Take 3 steps.', 'Difficulty': 4, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn around, so our direction changes by 180 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 180) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Lastly take 3 steps; the direction doesn't change again
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 985
{'Instructions': 'Take 5 steps. Take 3 steps. Turn right. Take 10 steps. Take 9 steps. Take 8 steps. Take 2 steps. Take 4 steps. Turn around.', 'Difficulty': 9, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 34}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 5 steps, so direction doesn't change relative to the starting direction and the number of steps is 5.
Direction_time1 is Direction_time0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 90) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Take 10 steps, so direction doesn't change again.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 9 steps, so direction doesn't change again.
Direction_time5 is Direction_time4,
Steps_time5 is 9,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 8 steps, so direction doesn't change again.
Direction_time6 is Direction_time5,
Steps_time6 is 8,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 2 steps, so direction doesn't change again.
Direction_time7 is Direction_time6,
Steps_time7 is 2,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 4 steps, so direction doesn't change again.
Direction_time8 is Direction_time7,
Steps_time8 is 4,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time9 is (Direction_time8 + 180) mod 360,
X_time9 is X_time8,
Y_time9 is Y_time8,
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 34 actual_solution 34



ID: 986
{'Instructions': 'Always face forward. Take 5 steps forward. Take 1 step right. Take 4 steps backward. Take 9 steps forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 10}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 5 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 5,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 1 step right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 1,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 9 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 9,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 10 actual_solution 10



ID: 987
{'Instructions': 'Turn left. Take 7 steps. Turn around. Take 7 steps. Turn right. Turn around.', 'Difficulty': 6, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 7 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Fifth instruction is to turn right, so our direction changes by 90 degrees relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Lastly turn around, so change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 0 actual_solution 0



ID: 988
{'Instructions': 'Always face forward. Take 4 steps forward. Take 5 steps right. Take 7 steps left.', 'Difficulty': 4, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 4}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 5 steps right; the direction is to the right or 90 degrees.
Direction_time2 is 90,
Steps_time2 is 5,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Lastly take 7 steps left; the direction is to the left or 270 degrees
Direction_time3 is 270,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%After the last instruction, calculate the distance from the starting position
distance(X_time3, Y_time3, Distance).
prolog run result: 4 actual_solution 4



ID: 989
{'Instructions': 'Turn right. Take 3 steps. Turn around. Take 3 steps. Turn left.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 3 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 3 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 3,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly turn left, so change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time5 is (Direction_time4 + 270) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 990
{'Instructions': 'Always face forward. Take 6 steps backward. Take 6 steps left. Take 3 steps forward. Take 7 steps forward.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 6 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 6,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 6 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps forward; the direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps forward; the direction is forward or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 7 actual_solution 7



ID: 991
{'Instructions': 'Always face forward. Take 8 steps backward. Take 9 steps forward. Take 4 steps forward. Take 2 steps left. Take 4 steps forward. Take 6 steps forward. Take 10 steps backward. Take 8 steps right. Take 1 step left.', 'Difficulty': 10, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 8 steps backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 8,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 4 steps forward, direction is forward or 0 degrees.
Direction_time3 is 0,
Steps_time3 is 4,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 2 steps left, thus the direction at time 4 is left or 270 degrees.
Direction_time4 is 270,
Steps_time4 is 2,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time5 is 0,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Then take 6 steps forward; the direction is 0 degrees
Direction_time6 is 0,
Steps_time6 is 6,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Take 10 steps backward; the direction is backward or 180 degrees
Direction_time7 is 180,
Steps_time7 is 10,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 8 steps right; the direction is to the right or 90 degrees
Direction_time8 is 90,
Steps_time8 is 8,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 1 step left; the direction is to the left or 270 degrees
Direction_time9 is 270,
Steps_time9 is 1,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 7 actual_solution 7



ID: 992
{'Instructions': 'Turn left. Take 6 steps. Take 6 steps. Turn left. Turn right. Turn around. Take 4 steps. Take 7 steps. Take 1 step.', 'Difficulty': 9, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn left, so our direction changes by 270 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 270) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 6,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 6 steps; the direction doesn't change relative to the previous direction.
Direction_time3 is Direction_time2,
Steps_time3 is 6,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Turn left. So our direction changes by -90 again relative to the previous direction. Coordinates don’t change.
Direction_time4 is (Direction_time3 + 270) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Turn right. So our direction changes by +90 relative to the previous direction. Coordinates don’t change.
Direction_time5 is (Direction_time4 + 90) mod 360,
X_time5 is X_time4,
Y_time5 is Y_time4,
%Sixth instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Then take 4 steps; the direction doesn't change relative to the previous direction
Direction_time7 is Direction_time6,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%Take 7 steps; the direction doesn't change
Direction_time8 is Direction_time7,
Steps_time8 is 7,
process_coordinates(Direction_time8, Steps_time8, X_time7, Y_time7, X_time8, Y_time8),
%Lastly take 1 step; the direction doesn't change again
Direction_time9 is Direction_time8,
Steps_time9 is 1,
process_coordinates(Direction_time9, Steps_time9, X_time8, Y_time8, X_time9, Y_time9),
%After the last instruction, calculate the distance from the starting position
distance(X_time9, Y_time9, Distance).
prolog run result: 0 actual_solution 0



ID: 993
{'Instructions': 'Turn right. Take 7 steps. Turn around. Take 5 steps. Take 2 steps. Take 2 steps.', 'Difficulty': 6, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 2}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%The first instruction is to turn right, so our direction changes by 90 degrees relative to the starting direction. Coordinates don’t change.
Direction_time1 is (Direction_time0 + 90) mod 360,
X_time1 is X_time0,
Y_time1 is Y_time0,
%Take 7 steps; the direction doesn't change relative to the previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 7,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so our direction changes by 180 degrees relative to the previous direction. Coordinates don’t change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Then take 5 steps; the direction doesn't change relative to the previous direction
Direction_time4 is Direction_time3,
Steps_time4 is 5,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Take 2 steps; the direction doesn't change
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Lastly take 2 steps; the direction doesn't change again
Direction_time6 is Direction_time5,
Steps_time6 is 2,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%After the last instruction, calculate the distance from the starting position
distance(X_time6, Y_time6, Distance).
prolog run result: 2 actual_solution 2



ID: 994
{'Instructions': 'Take 7 steps. Take 3 steps. Take 3 steps. Turn around. Take 4 steps.', 'Difficulty': 5, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 9}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 7 steps, so direction doesn't change relative to the starting direction and the number of steps is 7.
Direction_time1 is Direction_time0,
Steps_time1 is 7,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 3 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 3,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 4 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 9 actual_solution 9



ID: 995
{'Instructions': 'Take 10 steps. Take 2 steps. Turn around. Take 10 steps. Take 2 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to take 10 steps, so direction doesn't change.
Direction_time4 is Direction_time3,
Steps_time4 is 10,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Lastly take 2 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 2,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 996
{'Instructions': 'Always face forward. Take 10 steps forward. Take 4 steps forward. Take 7 steps backward. Take 7 steps backward.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'face_forward', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 10 steps forward; the direction is forward or 0 degrees.
Direction_time1 is 0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 4 steps forward; the direction is forward or 0 degrees.
Direction_time2 is 0,
Steps_time2 is 4,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 7,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Lastly take 7 steps backwards; the direction is backwards or 180 degrees.
Direction_time4 is 180,
Steps_time4 is 7,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%After the last instruction, calculate the distance from the starting position
distance(X_time4, Y_time4, Distance).
prolog run result: 0 actual_solution 0



ID: 997
{'Instructions': 'Always face forward. Take 1 step backward. Take 9 steps left. Take 2 steps backward. Take 6 steps forward. Take 4 steps forward. Take 4 steps backward. Take 3 steps right.', 'Difficulty': 8, 'Answer': 0, 'Inst_type': 'face_forward', 'Distance': 7}
NOT repeated 
follow_instructions(Distance) :-
%We’re told to always face forward, so the direction of our steps are independent of our direction in the previous step.
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%Take 1 step backward; the direction is backward or 180 degrees.
Direction_time1 is 180,
Steps_time1 is 1,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 9 steps left; the direction is to the left or 270 degrees.
Direction_time2 is 270,
Steps_time2 is 9,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 2 steps backward, thus the direction at time 3 is backward or 180 degrees.
Direction_time3 is 180,
Steps_time3 is 2,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%Take 6 steps forwards; the direction is forwards or 0 degrees.
Direction_time4 is 0,
Steps_time4 is 6,
process_coordinates(Direction_time4, Steps_time4, X_time3, Y_time3, X_time4, Y_time4),
%Then take 4 step forward; the direction is 0 degrees
Direction_time5 is 0,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Take 4 steps backward; the direction is backward or 180 degrees
Direction_time6 is 180,
Steps_time6 is 4,
process_coordinates(Direction_time6, Steps_time6, X_time5, Y_time5, X_time6, Y_time6),
%Lastly take 3 steps right; the direction is to the right or 90 degrees
Direction_time7 is 90,
Steps_time7 is 3,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 7 actual_solution 7



ID: 998
{'Instructions': 'Take 4 steps. Turn left. Turn around. Turn right. Take 4 steps.', 'Difficulty': 5, 'Answer': 1, 'Inst_type': 'turns', 'Distance': 0}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 4 steps, so direction doesn't change relative to the starting direction and the number of steps is 4.
Direction_time1 is Direction_time0,
Steps_time1 is 4,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Second instruction is to turn left, so we have to change the direction by 270 degrees relative to the previous direction. Coordinates don't change.
Direction_time2 is (Direction_time1 + 270) mod 360,
X_time2 is X_time1,
Y_time2 is Y_time1,
%Third instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time3 is (Direction_time2 + 180) mod 360,
X_time3 is X_time2,
Y_time3 is Y_time2,
%Fourth instruction is to turn right, so we have to change the direction by 90 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 90) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%Lastly take 4 steps; the direction doesn't change again
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%After the last instruction, calculate the distance from the starting position
distance(X_time5, Y_time5, Distance).
prolog run result: 0 actual_solution 0



ID: 999
{'Instructions': 'Take 10 steps. Take 2 steps. Take 3 steps. Turn around. Take 4 steps. Turn around. Take 4 steps.', 'Difficulty': 7, 'Answer': 0, 'Inst_type': 'turns', 'Distance': 15}
NOT repeated 
follow_instructions(Distance) :-
Direction_time0 is 0,
X_time0 is 0,
Y_time0 is 0,
%our first instruction is to take 10 steps, so direction doesn't change relative to the starting direction and the number of steps is 10.
Direction_time1 is Direction_time0,
Steps_time1 is 10,
process_coordinates(Direction_time1, Steps_time1, X_time0, Y_time0, X_time1, Y_time1),
%Take 2 steps, direction doesn't change relative to previous direction.
Direction_time2 is Direction_time1,
Steps_time2 is 2,
process_coordinates(Direction_time2, Steps_time2, X_time1, Y_time1, X_time2, Y_time2),
%Take 3 steps, so direction doesn't change again.
Direction_time3 is Direction_time2,
Steps_time3 is 3,
process_coordinates(Direction_time3, Steps_time3, X_time2, Y_time2, X_time3, Y_time3),
%fourth instruction is to turn around, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time4 is (Direction_time3 + 180) mod 360,
X_time4 is X_time3,
Y_time4 is Y_time3,
%fifth instruction is to take 4 steps, so direction doesn't change.
Direction_time5 is Direction_time4,
Steps_time5 is 4,
process_coordinates(Direction_time5, Steps_time5, X_time4, Y_time4, X_time5, Y_time5),
%Sixth instruction is to turn around again, so we have to change the direction by 180 degrees relative to the previous direction. Coordinates don't change.
Direction_time6 is (Direction_time5 + 180) mod 360,
X_time6 is X_time5,
Y_time6 is Y_time5,
%Lastly take 4 steps, so direction doesn't change.
Direction_time7 is Direction_time6,
Steps_time7 is 4,
process_coordinates(Direction_time7, Steps_time7, X_time6, Y_time6, X_time7, Y_time7),
%After the last instruction, calculate the distance from the starting position
distance(X_time7, Y_time7, Distance).
prolog run result: 15 actual_solution 15




--------------------------------------------------
Incorrect formats



--------------------------------------------------
Incorrect ids
[33, 56, 180, 241, 380]


--------------------------------------------------
Number of max tries
50
--------------------------------------------------
Number of times prolog didn't run after repeat max tries
0
--------------------------------------------------
Problem ids that prolog didn't run after max tries
[]
--------------------------------------------------
Problem number that got correct solution after many tries
10
--------------------------------------------------
Problem number with incorrect solution after many tries
0
--------------------------------------------------
Tempreture at the max repeat call number
0.4


--------------------------------------------------
total number of calls to LLM
1000


--------------------------------------------------
stats
985 out of 990 is correct.